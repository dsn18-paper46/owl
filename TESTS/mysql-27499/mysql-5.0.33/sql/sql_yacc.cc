/* A Bison parser, made by GNU Bison 2.0.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Written by Richard Stallman by simplifying the original so called
   ``semantic'' parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     END_OF_INPUT = 258,
     ABORT_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     ATAN = 277,
     AUTO_INC = 278,
     AVG_ROW_LENGTH = 279,
     AVG_SYM = 280,
     BACKUP_SYM = 281,
     BEFORE_SYM = 282,
     BEGIN_SYM = 283,
     BENCHMARK_SYM = 284,
     BERKELEY_DB_SYM = 285,
     BIGINT = 286,
     BINARY = 287,
     BINLOG_SYM = 288,
     BIN_NUM = 289,
     BIT_AND = 290,
     BIT_OR = 291,
     BIT_SYM = 292,
     BIT_XOR = 293,
     BLOB_SYM = 294,
     BOOLEAN_SYM = 295,
     BOOL_SYM = 296,
     BOTH = 297,
     BTREE_SYM = 298,
     BY = 299,
     BYTE_SYM = 300,
     CACHE_SYM = 301,
     CALL_SYM = 302,
     CASCADE = 303,
     CASCADED = 304,
     CAST_SYM = 305,
     CHAIN_SYM = 306,
     CHANGE = 307,
     CHANGED = 308,
     CHARSET = 309,
     CHAR_SYM = 310,
     CHECKSUM_SYM = 311,
     CHECK_SYM = 312,
     CIPHER_SYM = 313,
     CLIENT_SYM = 314,
     CLOSE_SYM = 315,
     COALESCE = 316,
     CODE_SYM = 317,
     COLLATE_SYM = 318,
     COLLATION_SYM = 319,
     COLUMNS = 320,
     COLUMN_SYM = 321,
     COMMENT_SYM = 322,
     COMMITTED_SYM = 323,
     COMMIT_SYM = 324,
     COMPACT_SYM = 325,
     COMPRESSED_SYM = 326,
     CONCAT = 327,
     CONCAT_WS = 328,
     CONCURRENT = 329,
     CONDITION_SYM = 330,
     CONNECTION_SYM = 331,
     CONSISTENT_SYM = 332,
     CONSTRAINT = 333,
     CONTAINS_SYM = 334,
     CONTINUE_SYM = 335,
     CONVERT_SYM = 336,
     CONVERT_TZ_SYM = 337,
     COUNT_SYM = 338,
     CREATE = 339,
     CROSS = 340,
     CUBE_SYM = 341,
     CURDATE = 342,
     CURRENT_USER = 343,
     CURSOR_SYM = 344,
     CURTIME = 345,
     DATABASE = 346,
     DATABASES = 347,
     DATA_SYM = 348,
     DATETIME = 349,
     DATE_ADD_INTERVAL = 350,
     DATE_SUB_INTERVAL = 351,
     DATE_SYM = 352,
     DAY_HOUR_SYM = 353,
     DAY_MICROSECOND_SYM = 354,
     DAY_MINUTE_SYM = 355,
     DAY_SECOND_SYM = 356,
     DAY_SYM = 357,
     DEALLOCATE_SYM = 358,
     DECIMAL_NUM = 359,
     DECIMAL_SYM = 360,
     DECLARE_SYM = 361,
     DECODE_SYM = 362,
     DEFAULT = 363,
     DEFINER_SYM = 364,
     DELAYED_SYM = 365,
     DELAY_KEY_WRITE_SYM = 366,
     DELETE_SYM = 367,
     DESC = 368,
     DESCRIBE = 369,
     DES_DECRYPT_SYM = 370,
     DES_ENCRYPT_SYM = 371,
     DES_KEY_FILE = 372,
     DETERMINISTIC_SYM = 373,
     DIRECTORY_SYM = 374,
     DISABLE_SYM = 375,
     DISCARD = 376,
     DISTINCT = 377,
     DIV_SYM = 378,
     DOUBLE_SYM = 379,
     DO_SYM = 380,
     DROP = 381,
     DUAL_SYM = 382,
     DUMPFILE = 383,
     DUPLICATE_SYM = 384,
     DYNAMIC_SYM = 385,
     EACH_SYM = 386,
     ELSEIF_SYM = 387,
     ELT_FUNC = 388,
     ENABLE_SYM = 389,
     ENCLOSED = 390,
     ENCODE_SYM = 391,
     ENCRYPT = 392,
     END = 393,
     ENGINES_SYM = 394,
     ENGINE_SYM = 395,
     ENUM = 396,
     EQ = 397,
     EQUAL_SYM = 398,
     ERRORS = 399,
     ESCAPED = 400,
     ESCAPE_SYM = 401,
     EVENTS_SYM = 402,
     EXECUTE_SYM = 403,
     EXISTS = 404,
     EXIT_SYM = 405,
     EXPANSION_SYM = 406,
     EXPORT_SET = 407,
     EXTENDED_SYM = 408,
     EXTRACT_SYM = 409,
     FALSE_SYM = 410,
     FAST_SYM = 411,
     FETCH_SYM = 412,
     FIELD_FUNC = 413,
     FILE_SYM = 414,
     FIRST_SYM = 415,
     FIXED_SYM = 416,
     FLOAT_NUM = 417,
     FLOAT_SYM = 418,
     FLUSH_SYM = 419,
     FORCE_SYM = 420,
     FOREIGN = 421,
     FORMAT_SYM = 422,
     FOR_SYM = 423,
     FOUND_SYM = 424,
     FRAC_SECOND_SYM = 425,
     FROM = 426,
     FROM_UNIXTIME = 427,
     FULL = 428,
     FULLTEXT_SYM = 429,
     FUNCTION_SYM = 430,
     FUNC_ARG0 = 431,
     FUNC_ARG1 = 432,
     FUNC_ARG2 = 433,
     FUNC_ARG3 = 434,
     GE = 435,
     GEOMCOLLFROMTEXT = 436,
     GEOMETRYCOLLECTION = 437,
     GEOMETRY_SYM = 438,
     GEOMFROMTEXT = 439,
     GEOMFROMWKB = 440,
     GET_FORMAT = 441,
     GLOBAL_SYM = 442,
     GRANT = 443,
     GRANTS = 444,
     GREATEST_SYM = 445,
     GROUP = 446,
     GROUP_CONCAT_SYM = 447,
     GROUP_UNIQUE_USERS = 448,
     GT_SYM = 449,
     HANDLER_SYM = 450,
     HASH_SYM = 451,
     HAVING = 452,
     HELP_SYM = 453,
     HEX_NUM = 454,
     HIGH_PRIORITY = 455,
     HOSTS_SYM = 456,
     HOUR_MICROSECOND_SYM = 457,
     HOUR_MINUTE_SYM = 458,
     HOUR_SECOND_SYM = 459,
     HOUR_SYM = 460,
     IDENT = 461,
     IDENTIFIED_SYM = 462,
     IDENT_QUOTED = 463,
     IF = 464,
     IGNORE_SYM = 465,
     IMPORT = 466,
     INDEXES = 467,
     INDEX_SYM = 468,
     INFILE = 469,
     INNER_SYM = 470,
     INNOBASE_SYM = 471,
     INOUT_SYM = 472,
     INSENSITIVE_SYM = 473,
     INSERT = 474,
     INSERT_METHOD = 475,
     INTERVAL_SYM = 476,
     INTO = 477,
     INT_SYM = 478,
     INVOKER_SYM = 479,
     IN_SYM = 480,
     IS = 481,
     ISOLATION = 482,
     ISSUER_SYM = 483,
     ITERATE_SYM = 484,
     JOIN_SYM = 485,
     KEYS = 486,
     KEY_SYM = 487,
     KILL_SYM = 488,
     LABEL_SYM = 489,
     LANGUAGE_SYM = 490,
     LAST_INSERT_ID = 491,
     LAST_SYM = 492,
     LE = 493,
     LEADING = 494,
     LEAST_SYM = 495,
     LEAVES = 496,
     LEAVE_SYM = 497,
     LEFT = 498,
     LEVEL_SYM = 499,
     LEX_HOSTNAME = 500,
     LIKE = 501,
     LIMIT = 502,
     LINEFROMTEXT = 503,
     LINES = 504,
     LINESTRING = 505,
     LOAD = 506,
     LOCAL_SYM = 507,
     LOCATE = 508,
     LOCATOR_SYM = 509,
     LOCKS_SYM = 510,
     LOCK_SYM = 511,
     LOGS_SYM = 512,
     LOG_SYM = 513,
     LONGBLOB = 514,
     LONGTEXT = 515,
     LONG_NUM = 516,
     LONG_SYM = 517,
     LOOP_SYM = 518,
     LOW_PRIORITY = 519,
     LT = 520,
     MAKE_SET_SYM = 521,
     MASTER_CONNECT_RETRY_SYM = 522,
     MASTER_HOST_SYM = 523,
     MASTER_LOG_FILE_SYM = 524,
     MASTER_LOG_POS_SYM = 525,
     MASTER_PASSWORD_SYM = 526,
     MASTER_PORT_SYM = 527,
     MASTER_POS_WAIT = 528,
     MASTER_SERVER_ID_SYM = 529,
     MASTER_SSL_CAPATH_SYM = 530,
     MASTER_SSL_CA_SYM = 531,
     MASTER_SSL_CERT_SYM = 532,
     MASTER_SSL_CIPHER_SYM = 533,
     MASTER_SSL_KEY_SYM = 534,
     MASTER_SSL_SYM = 535,
     MASTER_SYM = 536,
     MASTER_USER_SYM = 537,
     MATCH = 538,
     MAX_CONNECTIONS_PER_HOUR = 539,
     MAX_QUERIES_PER_HOUR = 540,
     MAX_ROWS = 541,
     MAX_SYM = 542,
     MAX_UPDATES_PER_HOUR = 543,
     MAX_USER_CONNECTIONS_SYM = 544,
     MEDIUMBLOB = 545,
     MEDIUMINT = 546,
     MEDIUMTEXT = 547,
     MEDIUM_SYM = 548,
     MERGE_SYM = 549,
     MICROSECOND_SYM = 550,
     MIGRATE_SYM = 551,
     MINUTE_MICROSECOND_SYM = 552,
     MINUTE_SECOND_SYM = 553,
     MINUTE_SYM = 554,
     MIN_ROWS = 555,
     MIN_SYM = 556,
     MLINEFROMTEXT = 557,
     MODE_SYM = 558,
     MODIFIES_SYM = 559,
     MODIFY_SYM = 560,
     MOD_SYM = 561,
     MONTH_SYM = 562,
     MPOINTFROMTEXT = 563,
     MPOLYFROMTEXT = 564,
     MULTILINESTRING = 565,
     MULTIPOINT = 566,
     MULTIPOLYGON = 567,
     MUTEX_SYM = 568,
     NAMES_SYM = 569,
     NAME_SYM = 570,
     NATIONAL_SYM = 571,
     NATURAL = 572,
     NCHAR_STRING = 573,
     NCHAR_SYM = 574,
     NDBCLUSTER_SYM = 575,
     NE = 576,
     NEW_SYM = 577,
     NEXT_SYM = 578,
     NONE_SYM = 579,
     NOT2_SYM = 580,
     NOT_SYM = 581,
     NOW_SYM = 582,
     NO_SYM = 583,
     NO_WRITE_TO_BINLOG = 584,
     NULL_SYM = 585,
     NUM = 586,
     NUMERIC_SYM = 587,
     NVARCHAR_SYM = 588,
     OFFSET_SYM = 589,
     OJ_SYM = 590,
     OLD_PASSWORD = 591,
     ON = 592,
     ONE_SHOT_SYM = 593,
     ONE_SYM = 594,
     OPEN_SYM = 595,
     OPTIMIZE = 596,
     OPTION = 597,
     OPTIONALLY = 598,
     OR2_SYM = 599,
     ORDER_SYM = 600,
     OR_OR_SYM = 601,
     OR_SYM = 602,
     OUTER = 603,
     OUTFILE = 604,
     OUT_SYM = 605,
     PACK_KEYS_SYM = 606,
     PARTIAL = 607,
     PASSWORD = 608,
     PARAM_MARKER = 609,
     PHASE_SYM = 610,
     POINTFROMTEXT = 611,
     POINT_SYM = 612,
     POLYFROMTEXT = 613,
     POLYGON = 614,
     POSITION_SYM = 615,
     PRECISION = 616,
     PREPARE_SYM = 617,
     PREV_SYM = 618,
     PRIMARY_SYM = 619,
     PRIVILEGES = 620,
     PROCEDURE = 621,
     PROCESS = 622,
     PROCESSLIST_SYM = 623,
     PURGE = 624,
     QUARTER_SYM = 625,
     QUERY_SYM = 626,
     QUICK = 627,
     RAID_0_SYM = 628,
     RAID_CHUNKS = 629,
     RAID_CHUNKSIZE = 630,
     RAID_STRIPED_SYM = 631,
     RAID_TYPE = 632,
     RAND = 633,
     READS_SYM = 634,
     READ_SYM = 635,
     REAL = 636,
     RECOVER_SYM = 637,
     REDUNDANT_SYM = 638,
     REFERENCES = 639,
     REGEXP = 640,
     RELAY_LOG_FILE_SYM = 641,
     RELAY_LOG_POS_SYM = 642,
     RELAY_THREAD = 643,
     RELEASE_SYM = 644,
     RELOAD = 645,
     RENAME = 646,
     REPAIR = 647,
     REPEATABLE_SYM = 648,
     REPEAT_SYM = 649,
     REPLACE = 650,
     REPLICATION = 651,
     REQUIRE_SYM = 652,
     RESET_SYM = 653,
     RESOURCES = 654,
     RESTORE_SYM = 655,
     RESTRICT = 656,
     RESUME_SYM = 657,
     RETURNS_SYM = 658,
     RETURN_SYM = 659,
     REVOKE = 660,
     RIGHT = 661,
     ROLLBACK_SYM = 662,
     ROLLUP_SYM = 663,
     ROUND = 664,
     ROUTINE_SYM = 665,
     ROWS_SYM = 666,
     ROW_COUNT_SYM = 667,
     ROW_FORMAT_SYM = 668,
     ROW_SYM = 669,
     RTREE_SYM = 670,
     SAVEPOINT_SYM = 671,
     SECOND_MICROSECOND_SYM = 672,
     SECOND_SYM = 673,
     SECURITY_SYM = 674,
     SELECT_SYM = 675,
     SENSITIVE_SYM = 676,
     SEPARATOR_SYM = 677,
     SERIALIZABLE_SYM = 678,
     SERIAL_SYM = 679,
     SESSION_SYM = 680,
     SET = 681,
     SET_VAR = 682,
     SHARE_SYM = 683,
     SHIFT_LEFT = 684,
     SHIFT_RIGHT = 685,
     SHOW = 686,
     SHUTDOWN = 687,
     SIGNED_SYM = 688,
     SIMPLE_SYM = 689,
     SLAVE = 690,
     SMALLINT = 691,
     SNAPSHOT_SYM = 692,
     SOUNDS_SYM = 693,
     SPATIAL_SYM = 694,
     SPECIFIC_SYM = 695,
     SQLEXCEPTION_SYM = 696,
     SQLSTATE_SYM = 697,
     SQLWARNING_SYM = 698,
     SQL_BIG_RESULT = 699,
     SQL_BUFFER_RESULT = 700,
     SQL_CACHE_SYM = 701,
     SQL_CALC_FOUND_ROWS = 702,
     SQL_NO_CACHE_SYM = 703,
     SQL_SMALL_RESULT = 704,
     SQL_SYM = 705,
     SQL_THREAD = 706,
     SSL_SYM = 707,
     STARTING = 708,
     START_SYM = 709,
     STATUS_SYM = 710,
     STD_SYM = 711,
     STDDEV_SAMP_SYM = 712,
     STOP_SYM = 713,
     STORAGE_SYM = 714,
     STRAIGHT_JOIN = 715,
     STRING_SYM = 716,
     SUBDATE_SYM = 717,
     SUBJECT_SYM = 718,
     SUBSTRING = 719,
     SUBSTRING_INDEX = 720,
     SUM_SYM = 721,
     SUPER_SYM = 722,
     SUSPEND_SYM = 723,
     SYSDATE = 724,
     TABLES = 725,
     TABLESPACE = 726,
     TABLE_SYM = 727,
     TEMPORARY = 728,
     TEMPTABLE_SYM = 729,
     TERMINATED = 730,
     TEXT_STRING = 731,
     TEXT_SYM = 732,
     TIMESTAMP = 733,
     TIMESTAMP_ADD = 734,
     TIMESTAMP_DIFF = 735,
     TIME_SYM = 736,
     TINYBLOB = 737,
     TINYINT = 738,
     TINYTEXT = 739,
     TO_SYM = 740,
     TRAILING = 741,
     TRANSACTION_SYM = 742,
     TRIGGER_SYM = 743,
     TRIGGERS_SYM = 744,
     TRIM = 745,
     TRUE_SYM = 746,
     TRUNCATE_SYM = 747,
     TYPES_SYM = 748,
     TYPE_SYM = 749,
     UDF_RETURNS_SYM = 750,
     UDF_SONAME_SYM = 751,
     ULONGLONG_NUM = 752,
     UNCOMMITTED_SYM = 753,
     UNDEFINED_SYM = 754,
     UNDERSCORE_CHARSET = 755,
     UNDO_SYM = 756,
     UNICODE_SYM = 757,
     UNION_SYM = 758,
     UNIQUE_SYM = 759,
     UNIQUE_USERS = 760,
     UNIX_TIMESTAMP = 761,
     UNKNOWN_SYM = 762,
     UNLOCK_SYM = 763,
     UNSIGNED = 764,
     UNTIL_SYM = 765,
     UPDATE_SYM = 766,
     UPGRADE_SYM = 767,
     USAGE = 768,
     USER = 769,
     USE_FRM = 770,
     USE_SYM = 771,
     USING = 772,
     UTC_DATE_SYM = 773,
     UTC_TIMESTAMP_SYM = 774,
     UTC_TIME_SYM = 775,
     VAR_SAMP_SYM = 776,
     VALUES = 777,
     VALUE_SYM = 778,
     VARBINARY = 779,
     VARCHAR = 780,
     VARIABLES = 781,
     VARIANCE_SYM = 782,
     VARYING = 783,
     VIEW_SYM = 784,
     WARNINGS = 785,
     WEEK_SYM = 786,
     WHEN_SYM = 787,
     WHERE = 788,
     WHILE_SYM = 789,
     WITH = 790,
     WORK_SYM = 791,
     WRITE_SYM = 792,
     X509_SYM = 793,
     XA_SYM = 794,
     XOR = 795,
     YEARWEEK = 796,
     YEAR_MONTH_SYM = 797,
     YEAR_SYM = 798,
     ZEROFILL = 799,
     TABLE_REF_PRIORITY = 800,
     ELSE = 801,
     THEN_SYM = 802,
     CASE_SYM = 803,
     BETWEEN_SYM = 804,
     NEG = 805
   };
#endif
#define END_OF_INPUT 258
#define ABORT_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define ATAN 277
#define AUTO_INC 278
#define AVG_ROW_LENGTH 279
#define AVG_SYM 280
#define BACKUP_SYM 281
#define BEFORE_SYM 282
#define BEGIN_SYM 283
#define BENCHMARK_SYM 284
#define BERKELEY_DB_SYM 285
#define BIGINT 286
#define BINARY 287
#define BINLOG_SYM 288
#define BIN_NUM 289
#define BIT_AND 290
#define BIT_OR 291
#define BIT_SYM 292
#define BIT_XOR 293
#define BLOB_SYM 294
#define BOOLEAN_SYM 295
#define BOOL_SYM 296
#define BOTH 297
#define BTREE_SYM 298
#define BY 299
#define BYTE_SYM 300
#define CACHE_SYM 301
#define CALL_SYM 302
#define CASCADE 303
#define CASCADED 304
#define CAST_SYM 305
#define CHAIN_SYM 306
#define CHANGE 307
#define CHANGED 308
#define CHARSET 309
#define CHAR_SYM 310
#define CHECKSUM_SYM 311
#define CHECK_SYM 312
#define CIPHER_SYM 313
#define CLIENT_SYM 314
#define CLOSE_SYM 315
#define COALESCE 316
#define CODE_SYM 317
#define COLLATE_SYM 318
#define COLLATION_SYM 319
#define COLUMNS 320
#define COLUMN_SYM 321
#define COMMENT_SYM 322
#define COMMITTED_SYM 323
#define COMMIT_SYM 324
#define COMPACT_SYM 325
#define COMPRESSED_SYM 326
#define CONCAT 327
#define CONCAT_WS 328
#define CONCURRENT 329
#define CONDITION_SYM 330
#define CONNECTION_SYM 331
#define CONSISTENT_SYM 332
#define CONSTRAINT 333
#define CONTAINS_SYM 334
#define CONTINUE_SYM 335
#define CONVERT_SYM 336
#define CONVERT_TZ_SYM 337
#define COUNT_SYM 338
#define CREATE 339
#define CROSS 340
#define CUBE_SYM 341
#define CURDATE 342
#define CURRENT_USER 343
#define CURSOR_SYM 344
#define CURTIME 345
#define DATABASE 346
#define DATABASES 347
#define DATA_SYM 348
#define DATETIME 349
#define DATE_ADD_INTERVAL 350
#define DATE_SUB_INTERVAL 351
#define DATE_SYM 352
#define DAY_HOUR_SYM 353
#define DAY_MICROSECOND_SYM 354
#define DAY_MINUTE_SYM 355
#define DAY_SECOND_SYM 356
#define DAY_SYM 357
#define DEALLOCATE_SYM 358
#define DECIMAL_NUM 359
#define DECIMAL_SYM 360
#define DECLARE_SYM 361
#define DECODE_SYM 362
#define DEFAULT 363
#define DEFINER_SYM 364
#define DELAYED_SYM 365
#define DELAY_KEY_WRITE_SYM 366
#define DELETE_SYM 367
#define DESC 368
#define DESCRIBE 369
#define DES_DECRYPT_SYM 370
#define DES_ENCRYPT_SYM 371
#define DES_KEY_FILE 372
#define DETERMINISTIC_SYM 373
#define DIRECTORY_SYM 374
#define DISABLE_SYM 375
#define DISCARD 376
#define DISTINCT 377
#define DIV_SYM 378
#define DOUBLE_SYM 379
#define DO_SYM 380
#define DROP 381
#define DUAL_SYM 382
#define DUMPFILE 383
#define DUPLICATE_SYM 384
#define DYNAMIC_SYM 385
#define EACH_SYM 386
#define ELSEIF_SYM 387
#define ELT_FUNC 388
#define ENABLE_SYM 389
#define ENCLOSED 390
#define ENCODE_SYM 391
#define ENCRYPT 392
#define END 393
#define ENGINES_SYM 394
#define ENGINE_SYM 395
#define ENUM 396
#define EQ 397
#define EQUAL_SYM 398
#define ERRORS 399
#define ESCAPED 400
#define ESCAPE_SYM 401
#define EVENTS_SYM 402
#define EXECUTE_SYM 403
#define EXISTS 404
#define EXIT_SYM 405
#define EXPANSION_SYM 406
#define EXPORT_SET 407
#define EXTENDED_SYM 408
#define EXTRACT_SYM 409
#define FALSE_SYM 410
#define FAST_SYM 411
#define FETCH_SYM 412
#define FIELD_FUNC 413
#define FILE_SYM 414
#define FIRST_SYM 415
#define FIXED_SYM 416
#define FLOAT_NUM 417
#define FLOAT_SYM 418
#define FLUSH_SYM 419
#define FORCE_SYM 420
#define FOREIGN 421
#define FORMAT_SYM 422
#define FOR_SYM 423
#define FOUND_SYM 424
#define FRAC_SECOND_SYM 425
#define FROM 426
#define FROM_UNIXTIME 427
#define FULL 428
#define FULLTEXT_SYM 429
#define FUNCTION_SYM 430
#define FUNC_ARG0 431
#define FUNC_ARG1 432
#define FUNC_ARG2 433
#define FUNC_ARG3 434
#define GE 435
#define GEOMCOLLFROMTEXT 436
#define GEOMETRYCOLLECTION 437
#define GEOMETRY_SYM 438
#define GEOMFROMTEXT 439
#define GEOMFROMWKB 440
#define GET_FORMAT 441
#define GLOBAL_SYM 442
#define GRANT 443
#define GRANTS 444
#define GREATEST_SYM 445
#define GROUP 446
#define GROUP_CONCAT_SYM 447
#define GROUP_UNIQUE_USERS 448
#define GT_SYM 449
#define HANDLER_SYM 450
#define HASH_SYM 451
#define HAVING 452
#define HELP_SYM 453
#define HEX_NUM 454
#define HIGH_PRIORITY 455
#define HOSTS_SYM 456
#define HOUR_MICROSECOND_SYM 457
#define HOUR_MINUTE_SYM 458
#define HOUR_SECOND_SYM 459
#define HOUR_SYM 460
#define IDENT 461
#define IDENTIFIED_SYM 462
#define IDENT_QUOTED 463
#define IF 464
#define IGNORE_SYM 465
#define IMPORT 466
#define INDEXES 467
#define INDEX_SYM 468
#define INFILE 469
#define INNER_SYM 470
#define INNOBASE_SYM 471
#define INOUT_SYM 472
#define INSENSITIVE_SYM 473
#define INSERT 474
#define INSERT_METHOD 475
#define INTERVAL_SYM 476
#define INTO 477
#define INT_SYM 478
#define INVOKER_SYM 479
#define IN_SYM 480
#define IS 481
#define ISOLATION 482
#define ISSUER_SYM 483
#define ITERATE_SYM 484
#define JOIN_SYM 485
#define KEYS 486
#define KEY_SYM 487
#define KILL_SYM 488
#define LABEL_SYM 489
#define LANGUAGE_SYM 490
#define LAST_INSERT_ID 491
#define LAST_SYM 492
#define LE 493
#define LEADING 494
#define LEAST_SYM 495
#define LEAVES 496
#define LEAVE_SYM 497
#define LEFT 498
#define LEVEL_SYM 499
#define LEX_HOSTNAME 500
#define LIKE 501
#define LIMIT 502
#define LINEFROMTEXT 503
#define LINES 504
#define LINESTRING 505
#define LOAD 506
#define LOCAL_SYM 507
#define LOCATE 508
#define LOCATOR_SYM 509
#define LOCKS_SYM 510
#define LOCK_SYM 511
#define LOGS_SYM 512
#define LOG_SYM 513
#define LONGBLOB 514
#define LONGTEXT 515
#define LONG_NUM 516
#define LONG_SYM 517
#define LOOP_SYM 518
#define LOW_PRIORITY 519
#define LT 520
#define MAKE_SET_SYM 521
#define MASTER_CONNECT_RETRY_SYM 522
#define MASTER_HOST_SYM 523
#define MASTER_LOG_FILE_SYM 524
#define MASTER_LOG_POS_SYM 525
#define MASTER_PASSWORD_SYM 526
#define MASTER_PORT_SYM 527
#define MASTER_POS_WAIT 528
#define MASTER_SERVER_ID_SYM 529
#define MASTER_SSL_CAPATH_SYM 530
#define MASTER_SSL_CA_SYM 531
#define MASTER_SSL_CERT_SYM 532
#define MASTER_SSL_CIPHER_SYM 533
#define MASTER_SSL_KEY_SYM 534
#define MASTER_SSL_SYM 535
#define MASTER_SYM 536
#define MASTER_USER_SYM 537
#define MATCH 538
#define MAX_CONNECTIONS_PER_HOUR 539
#define MAX_QUERIES_PER_HOUR 540
#define MAX_ROWS 541
#define MAX_SYM 542
#define MAX_UPDATES_PER_HOUR 543
#define MAX_USER_CONNECTIONS_SYM 544
#define MEDIUMBLOB 545
#define MEDIUMINT 546
#define MEDIUMTEXT 547
#define MEDIUM_SYM 548
#define MERGE_SYM 549
#define MICROSECOND_SYM 550
#define MIGRATE_SYM 551
#define MINUTE_MICROSECOND_SYM 552
#define MINUTE_SECOND_SYM 553
#define MINUTE_SYM 554
#define MIN_ROWS 555
#define MIN_SYM 556
#define MLINEFROMTEXT 557
#define MODE_SYM 558
#define MODIFIES_SYM 559
#define MODIFY_SYM 560
#define MOD_SYM 561
#define MONTH_SYM 562
#define MPOINTFROMTEXT 563
#define MPOLYFROMTEXT 564
#define MULTILINESTRING 565
#define MULTIPOINT 566
#define MULTIPOLYGON 567
#define MUTEX_SYM 568
#define NAMES_SYM 569
#define NAME_SYM 570
#define NATIONAL_SYM 571
#define NATURAL 572
#define NCHAR_STRING 573
#define NCHAR_SYM 574
#define NDBCLUSTER_SYM 575
#define NE 576
#define NEW_SYM 577
#define NEXT_SYM 578
#define NONE_SYM 579
#define NOT2_SYM 580
#define NOT_SYM 581
#define NOW_SYM 582
#define NO_SYM 583
#define NO_WRITE_TO_BINLOG 584
#define NULL_SYM 585
#define NUM 586
#define NUMERIC_SYM 587
#define NVARCHAR_SYM 588
#define OFFSET_SYM 589
#define OJ_SYM 590
#define OLD_PASSWORD 591
#define ON 592
#define ONE_SHOT_SYM 593
#define ONE_SYM 594
#define OPEN_SYM 595
#define OPTIMIZE 596
#define OPTION 597
#define OPTIONALLY 598
#define OR2_SYM 599
#define ORDER_SYM 600
#define OR_OR_SYM 601
#define OR_SYM 602
#define OUTER 603
#define OUTFILE 604
#define OUT_SYM 605
#define PACK_KEYS_SYM 606
#define PARTIAL 607
#define PASSWORD 608
#define PARAM_MARKER 609
#define PHASE_SYM 610
#define POINTFROMTEXT 611
#define POINT_SYM 612
#define POLYFROMTEXT 613
#define POLYGON 614
#define POSITION_SYM 615
#define PRECISION 616
#define PREPARE_SYM 617
#define PREV_SYM 618
#define PRIMARY_SYM 619
#define PRIVILEGES 620
#define PROCEDURE 621
#define PROCESS 622
#define PROCESSLIST_SYM 623
#define PURGE 624
#define QUARTER_SYM 625
#define QUERY_SYM 626
#define QUICK 627
#define RAID_0_SYM 628
#define RAID_CHUNKS 629
#define RAID_CHUNKSIZE 630
#define RAID_STRIPED_SYM 631
#define RAID_TYPE 632
#define RAND 633
#define READS_SYM 634
#define READ_SYM 635
#define REAL 636
#define RECOVER_SYM 637
#define REDUNDANT_SYM 638
#define REFERENCES 639
#define REGEXP 640
#define RELAY_LOG_FILE_SYM 641
#define RELAY_LOG_POS_SYM 642
#define RELAY_THREAD 643
#define RELEASE_SYM 644
#define RELOAD 645
#define RENAME 646
#define REPAIR 647
#define REPEATABLE_SYM 648
#define REPEAT_SYM 649
#define REPLACE 650
#define REPLICATION 651
#define REQUIRE_SYM 652
#define RESET_SYM 653
#define RESOURCES 654
#define RESTORE_SYM 655
#define RESTRICT 656
#define RESUME_SYM 657
#define RETURNS_SYM 658
#define RETURN_SYM 659
#define REVOKE 660
#define RIGHT 661
#define ROLLBACK_SYM 662
#define ROLLUP_SYM 663
#define ROUND 664
#define ROUTINE_SYM 665
#define ROWS_SYM 666
#define ROW_COUNT_SYM 667
#define ROW_FORMAT_SYM 668
#define ROW_SYM 669
#define RTREE_SYM 670
#define SAVEPOINT_SYM 671
#define SECOND_MICROSECOND_SYM 672
#define SECOND_SYM 673
#define SECURITY_SYM 674
#define SELECT_SYM 675
#define SENSITIVE_SYM 676
#define SEPARATOR_SYM 677
#define SERIALIZABLE_SYM 678
#define SERIAL_SYM 679
#define SESSION_SYM 680
#define SET 681
#define SET_VAR 682
#define SHARE_SYM 683
#define SHIFT_LEFT 684
#define SHIFT_RIGHT 685
#define SHOW 686
#define SHUTDOWN 687
#define SIGNED_SYM 688
#define SIMPLE_SYM 689
#define SLAVE 690
#define SMALLINT 691
#define SNAPSHOT_SYM 692
#define SOUNDS_SYM 693
#define SPATIAL_SYM 694
#define SPECIFIC_SYM 695
#define SQLEXCEPTION_SYM 696
#define SQLSTATE_SYM 697
#define SQLWARNING_SYM 698
#define SQL_BIG_RESULT 699
#define SQL_BUFFER_RESULT 700
#define SQL_CACHE_SYM 701
#define SQL_CALC_FOUND_ROWS 702
#define SQL_NO_CACHE_SYM 703
#define SQL_SMALL_RESULT 704
#define SQL_SYM 705
#define SQL_THREAD 706
#define SSL_SYM 707
#define STARTING 708
#define START_SYM 709
#define STATUS_SYM 710
#define STD_SYM 711
#define STDDEV_SAMP_SYM 712
#define STOP_SYM 713
#define STORAGE_SYM 714
#define STRAIGHT_JOIN 715
#define STRING_SYM 716
#define SUBDATE_SYM 717
#define SUBJECT_SYM 718
#define SUBSTRING 719
#define SUBSTRING_INDEX 720
#define SUM_SYM 721
#define SUPER_SYM 722
#define SUSPEND_SYM 723
#define SYSDATE 724
#define TABLES 725
#define TABLESPACE 726
#define TABLE_SYM 727
#define TEMPORARY 728
#define TEMPTABLE_SYM 729
#define TERMINATED 730
#define TEXT_STRING 731
#define TEXT_SYM 732
#define TIMESTAMP 733
#define TIMESTAMP_ADD 734
#define TIMESTAMP_DIFF 735
#define TIME_SYM 736
#define TINYBLOB 737
#define TINYINT 738
#define TINYTEXT 739
#define TO_SYM 740
#define TRAILING 741
#define TRANSACTION_SYM 742
#define TRIGGER_SYM 743
#define TRIGGERS_SYM 744
#define TRIM 745
#define TRUE_SYM 746
#define TRUNCATE_SYM 747
#define TYPES_SYM 748
#define TYPE_SYM 749
#define UDF_RETURNS_SYM 750
#define UDF_SONAME_SYM 751
#define ULONGLONG_NUM 752
#define UNCOMMITTED_SYM 753
#define UNDEFINED_SYM 754
#define UNDERSCORE_CHARSET 755
#define UNDO_SYM 756
#define UNICODE_SYM 757
#define UNION_SYM 758
#define UNIQUE_SYM 759
#define UNIQUE_USERS 760
#define UNIX_TIMESTAMP 761
#define UNKNOWN_SYM 762
#define UNLOCK_SYM 763
#define UNSIGNED 764
#define UNTIL_SYM 765
#define UPDATE_SYM 766
#define UPGRADE_SYM 767
#define USAGE 768
#define USER 769
#define USE_FRM 770
#define USE_SYM 771
#define USING 772
#define UTC_DATE_SYM 773
#define UTC_TIMESTAMP_SYM 774
#define UTC_TIME_SYM 775
#define VAR_SAMP_SYM 776
#define VALUES 777
#define VALUE_SYM 778
#define VARBINARY 779
#define VARCHAR 780
#define VARIABLES 781
#define VARIANCE_SYM 782
#define VARYING 783
#define VIEW_SYM 784
#define WARNINGS 785
#define WEEK_SYM 786
#define WHEN_SYM 787
#define WHERE 788
#define WHILE_SYM 789
#define WITH 790
#define WORK_SYM 791
#define WRITE_SYM 792
#define X509_SYM 793
#define XA_SYM 794
#define XOR 795
#define YEARWEEK 796
#define YEAR_MONTH_SYM 797
#define YEAR_SYM 798
#define ZEROFILL 799
#define TABLE_REF_PRIORITY 800
#define ELSE 801
#define THEN_SYM 802
#define CASE_SYM 803
#define BETWEEN_SYM 804
#define NEG 805




/* Copy the first part of user declarations.  */
#line 19 "sql_yacc.yy"

/* thd is passed as an arg to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200				/* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "mysql_priv.h"
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include <myisam.h>
#include <myisammrg.h>

int yylex(void *yylval, void *yythd);

const LEX_STRING null_lex_str={0,0};

#define yyoverflow(A,B,C,D,E,F) {ulong val= *(F); if (my_yyoverflow((B), (D), &val)) { yyerror((char*) (A)); return 2; } else { *(F)= (YYSIZE_T)val; }}

#define WARN_DEPRECATED(A,B)                                        \
  push_warning_printf(((THD *)yythd), MYSQL_ERROR::WARN_LEVEL_WARN, \
		      ER_WARN_DEPRECATED_SYNTAX,                    \
		      ER(ER_WARN_DEPRECATED_SYNTAX), (A), (B));

#define YYERROR_UNLESS(A)                  \
  if (!(A))                             \
  {					\
    yyerror(ER(ER_SYNTAX_ERROR));	\
    YYABORT;				\
  }

/* Helper for parsing "IS [NOT] truth_value" */
inline Item *is_truth_value(Item *A, bool v1, bool v2)
{
  return new Item_func_if(create_func_ifnull(A,
	new Item_int((char *) (v2 ? "TRUE" : "FALSE"), v2, 1)),
	new Item_int((char *) (v1 ? "TRUE" : "FALSE"), v1, 1),
	new Item_int((char *) (v1 ? "FALSE" : "TRUE"),!v1, 1));
}

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 1
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
#line 100 "sql_yacc.yy"
typedef union YYSTYPE {
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  enum db_type db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  struct sp_cond_type *spcondtype;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  struct st_lex *lex;
} YYSTYPE;
/* Line 190 of yacc.c.  */
#line 1306 "sql_yacc.cc"
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 140 "sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 213 of yacc.c.  */
#line 1321 "sql_yacc.cc"

#if ! defined (yyoverflow) || YYERROR_VERBOSE

# ifndef YYFREE
#  define YYFREE free
# endif
# ifndef YYMALLOC
#  define YYMALLOC malloc
# endif

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   else
#    define YYSTACK_ALLOC alloca
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning. */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
# else
#  if defined (__STDC__) || defined (__cplusplus)
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   define YYSIZE_T size_t
#  endif
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
# endif
#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */


#if (! defined (yyoverflow) \
     && (! defined (__cplusplus) \
	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short int yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short int) + sizeof (YYSTYPE))			\
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined (__GNUC__) && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  register YYSIZE_T yyi;		\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (0)
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (0)

#endif

#if defined (__STDC__) || defined (__cplusplus)
   typedef signed char yysigned_char;
#else
   typedef short int yysigned_char;
#endif

/* YYFINAL -- State number of the termination state. */
#define YYFINAL  458
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   43696

/* YYNTOKENS -- Number of terminals. */
#define YYNTOKENS  570
/* YYNNTS -- Number of nonterminals. */
#define YYNNTS  662
/* YYNRULES -- Number of rules. */
#define YYNRULES  2009
/* YYNRULES -- Number of states. */
#define YYNSTATES  3647

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   805

#define YYTRANSLATE(YYX) 						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const unsigned short int yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   563,     2,     2,     2,   556,   551,     2,
     560,   561,   554,   553,   562,   552,   567,   555,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   569,   568,
       2,     2,     2,     2,   566,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   557,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   564,   550,   565,   558,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   559
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const unsigned short int yyprhs[] =
{
       0,     0,     3,     5,     8,    10,    12,    14,    16,    18,
      20,    22,    24,    26,    28,    30,    32,    34,    36,    38,
      40,    42,    44,    46,    48,    50,    52,    54,    56,    58,
      60,    62,    64,    66,    68,    70,    72,    74,    76,    78,
      80,    82,    84,    86,    88,    90,    92,    94,    96,    98,
     100,   102,   104,   106,   110,   112,   114,   119,   121,   124,
     125,   130,   131,   134,   138,   140,   143,   144,   148,   149,
     155,   157,   161,   165,   169,   173,   177,   181,   185,   189,
     193,   197,   201,   205,   207,   211,   215,   219,   223,   224,
     232,   233,   245,   246,   253,   254,   258,   263,   264,   268,
     270,   275,   276,   277,   278,   279,   280,   293,   294,   297,
     298,   301,   304,   307,   310,   313,   317,   321,   323,   325,
     327,   330,   334,   338,   339,   344,   345,   349,   350,   352,
     356,   358,   359,   361,   365,   367,   368,   372,   373,   375,
     379,   381,   386,   387,   389,   391,   393,   394,   398,   401,
     405,   406,   410,   411,   417,   423,   424,   432,   438,   439,
     442,   444,   446,   448,   452,   454,   458,   459,   461,   463,
     465,   467,   470,   472,   474,   478,   479,   482,   483,   486,
     487,   491,   492,   498,   499,   506,   507,   508,   517,   519,
     520,   523,   526,   529,   532,   533,   540,   543,   544,   547,
     549,   551,   555,   556,   557,   558,   566,   567,   570,   573,
     574,   575,   576,   584,   585,   588,   591,   592,   598,   599,
     601,   602,   608,   613,   614,   615,   624,   625,   633,   635,
     637,   639,   641,   643,   646,   649,   652,   657,   662,   663,
     668,   669,   670,   676,   677,   685,   686,   687,   694,   695,
     697,   698,   700,   702,   705,   707,   709,   710,   712,   714,
     717,   719,   720,   724,   725,   727,   729,   732,   734,   737,
     741,   745,   749,   753,   757,   761,   765,   769,   773,   777,
     781,   785,   789,   793,   797,   801,   805,   811,   813,   815,
     819,   824,   829,   833,   838,   843,   845,   847,   849,   851,
     853,   855,   857,   859,   861,   863,   865,   867,   869,   871,
     874,   875,   877,   879,   881,   883,   885,   887,   891,   893,
     895,   898,   901,   908,   916,   925,   928,   931,   932,   934,
     937,   938,   940,   943,   944,   949,   953,   957,   961,   963,
     968,   970,   972,   978,   981,   987,   990,   995,   997,  1003,
    1009,  1014,  1018,  1020,  1022,  1025,  1027,  1029,  1032,  1034,
    1036,  1038,  1041,  1045,  1048,  1052,  1055,  1058,  1062,  1066,
    1070,  1071,  1078,  1079,  1086,  1089,  1091,  1093,  1095,  1097,
    1099,  1101,  1103,  1105,  1107,  1109,  1111,  1114,  1117,  1119,
    1122,  1124,  1127,  1131,  1134,  1136,  1138,  1140,  1142,  1144,
    1146,  1148,  1151,  1152,  1156,  1158,  1164,  1165,  1167,  1170,
    1172,  1174,  1176,  1178,  1179,  1183,  1184,  1186,  1187,  1189,
    1192,  1194,  1196,  1199,  1202,  1207,  1209,  1213,  1216,  1218,
    1221,  1224,  1227,  1230,  1232,  1235,  1237,  1239,  1241,  1243,
    1245,  1247,  1249,  1251,  1253,  1255,  1256,  1259,  1261,  1263,
    1264,  1266,  1267,  1270,  1272,  1275,  1279,  1282,  1283,  1285,
    1286,  1288,  1290,  1293,  1294,  1296,  1297,  1302,  1304,  1309,
    1313,  1315,  1316,  1318,  1321,  1323,  1327,  1331,  1334,  1337,
    1340,  1342,  1344,  1347,  1350,  1353,  1355,  1358,  1361,  1364,
    1367,  1369,  1371,  1372,  1374,  1376,  1378,  1380,  1381,  1383,
    1385,  1387,  1388,  1391,  1394,  1396,  1398,  1400,  1405,  1408,
    1410,  1415,  1416,  1418,  1419,  1422,  1424,  1428,  1429,  1436,
    1437,  1443,  1444,  1450,  1451,  1457,  1458,  1470,  1471,  1473,
    1474,  1477,  1480,  1482,  1486,  1489,  1493,  1496,  1501,  1502,
    1509,  1510,  1511,  1520,  1525,  1530,  1534,  1538,  1541,  1544,
    1551,  1557,  1561,  1567,  1569,  1571,  1573,  1574,  1576,  1577,
    1579,  1580,  1582,  1584,  1585,  1588,  1590,  1591,  1593,  1595,
    1597,  1598,  1604,  1608,  1609,  1615,  1619,  1623,  1624,  1628,
    1629,  1632,  1634,  1638,  1639,  1641,  1643,  1644,  1647,  1649,
    1653,  1654,  1661,  1662,  1669,  1670,  1676,  1677,  1679,  1681,
    1682,  1689,  1690,  1692,  1694,  1697,  1699,  1701,  1703,  1704,
    1711,  1712,  1718,  1719,  1721,  1723,  1726,  1728,  1730,  1732,
    1734,  1736,  1739,  1740,  1747,  1748,  1750,  1752,  1753,  1758,
    1763,  1767,  1773,  1775,  1779,  1783,  1789,  1791,  1795,  1798,
    1800,  1802,  1803,  1810,  1812,  1816,  1820,  1821,  1824,  1825,
    1830,  1831,  1834,  1836,  1839,  1844,  1847,  1851,  1852,  1856,
    1857,  1858,  1865,  1868,  1870,  1872,  1875,  1878,  1887,  1892,
    1893,  1895,  1898,  1900,  1902,  1904,  1906,  1908,  1910,  1912,
    1914,  1916,  1918,  1920,  1921,  1924,  1929,  1933,  1935,  1937,
    1942,  1943,  1944,  1946,  1948,  1949,  1952,  1955,  1957,  1959,
    1960,  1963,  1964,  1968,  1969,  1973,  1977,  1978,  1982,  1983,
    1987,  1990,  1992,  1996,  2001,  2005,  2010,  2014,  2019,  2021,
    2025,  2030,  2034,  2038,  2045,  2047,  2053,  2060,  2066,  2074,
    2081,  2090,  2096,  2103,  2108,  2113,  2119,  2123,  2128,  2130,
    2134,  2136,  2140,  2142,  2146,  2150,  2152,  2156,  2160,  2165,
    2170,  2172,  2176,  2180,  2184,  2188,  2192,  2194,  2198,  2200,
    2202,  2204,  2206,  2208,  2210,  2212,  2214,  2216,  2218,  2220,
    2222,  2224,  2226,  2228,  2230,  2232,  2235,  2237,  2241,  2243,
    2245,  2247,  2249,  2253,  2256,  2259,  2262,  2265,  2269,  2273,
    2279,  2286,  2291,  2296,  2304,  2309,  2312,  2319,  2326,  2333,
    2340,  2345,  2350,  2354,  2359,  2366,  2375,  2382,  2391,  2398,
    2403,  2410,  2415,  2422,  2427,  2432,  2437,  2442,  2449,  2458,
    2461,  2464,  2469,  2472,  2480,  2488,  2492,  2497,  2502,  2509,
    2516,  2521,  2528,  2535,  2542,  2547,  2554,  2559,  2566,  2575,
    2586,  2599,  2606,  2611,  2618,  2625,  2627,  2634,  2639,  2648,
    2659,  2664,  2666,  2670,  2675,  2682,  2689,  2698,  2705,  2712,
    2717,  2724,  2731,  2740,  2745,  2750,  2757,  2762,  2765,  2770,
    2775,  2780,  2787,  2792,  2797,  2801,  2810,  2817,  2822,  2829,
    2833,  2840,  2849,  2854,  2863,  2870,  2879,  2886,  2895,  2898,
    2903,  2908,  2913,  2920,  2929,  2938,  2943,  2951,  2959,  2967,
    2974,  2981,  2988,  2995,  3002,  3009,  3010,  3016,  3027,  3031,
    3036,  3040,  3043,  3046,  3049,  3054,  3061,  3066,  3071,  3078,
    3085,  3092,  3099,  3104,  3111,  3116,  3123,  3128,  3133,  3138,
    3143,  3150,  3155,  3162,  3167,  3174,  3179,  3184,  3191,  3196,
    3203,  3208,  3215,  3220,  3225,  3232,  3237,  3244,  3245,  3249,
    3253,  3254,  3256,  3257,  3260,  3262,  3266,  3271,  3276,  3282,
    3287,  3292,  3297,  3303,  3308,  3309,  3310,  3318,  3329,  3334,
    3340,  3345,  3351,  3356,  3361,  3366,  3371,  3376,  3382,  3383,
    3392,  3393,  3397,  3401,  3403,  3408,  3409,  3411,  3412,  3415,
    3416,  3418,  3419,  3423,  3426,  3430,  3433,  3435,  3438,  3440,
    3443,  3445,  3447,  3449,  3452,  3453,  3455,  3456,  3459,  3461,
    3465,  3467,  3471,  3472,  3475,  3477,  3481,  3482,  3484,  3485,
    3488,  3489,  3492,  3496,  3502,  3504,  3506,  3508,  3510,  3514,
    3518,  3522,  3523,  3530,  3531,  3538,  3539,  3548,  3553,  3554,
    3563,  3564,  3575,  3582,  3583,  3592,  3593,  3604,  3611,  3613,
    3616,  3619,  3620,  3625,  3626,  3638,  3642,  3649,  3650,  3654,
    3655,  3656,  3662,  3663,  3665,  3666,  3668,  3669,  3672,  3675,
    3678,  3679,  3685,  3686,  3688,  3692,  3694,  3696,  3698,  3702,
    3704,  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,  3722,
    3724,  3726,  3728,  3730,  3732,  3734,  3736,  3738,  3740,  3742,
    3744,  3746,  3748,  3750,  3752,  3754,  3755,  3757,  3759,  3760,
    3763,  3764,  3766,  3767,  3768,  3772,  3773,  3774,  3778,  3781,
    3782,  3783,  3788,  3793,  3796,  3797,  3800,  3803,  3804,  3806,
    3807,  3812,  3817,  3820,  3821,  3823,  3825,  3826,  3828,  3829,
    3831,  3834,  3836,  3840,  3844,  3846,  3848,  3850,  3852,  3853,
    3856,  3858,  3860,  3862,  3864,  3866,  3868,  3870,  3872,  3874,
    3876,  3878,  3879,  3880,  3887,  3888,  3890,  3894,  3896,  3899,
    3900,  3903,  3907,  3909,  3912,  3914,  3915,  3919,  3920,  3926,
    3929,  3931,  3932,  3936,  3943,  3944,  3951,  3956,  3961,  3966,
    3971,  3977,  3982,  3984,  3988,  3990,  3991,  3994,  3995,  3997,
    3998,  3999,  4008,  4009,  4010,  4017,  4018,  4020,  4022,  4024,
    4026,  4028,  4031,  4033,  4035,  4037,  4041,  4046,  4047,  4051,
    4055,  4057,  4060,  4063,  4064,  4068,  4069,  4075,  4079,  4081,
    4085,  4087,  4091,  4093,  4095,  4096,  4098,  4099,  4104,  4105,
    4107,  4111,  4113,  4115,  4117,  4118,  4119,  4126,  4127,  4128,
    4140,  4144,  4146,  4150,  4154,  4156,  4160,  4161,  4163,  4164,
    4169,  4170,  4177,  4178,  4184,  4185,  4192,  4194,  4198,  4202,
    4208,  4209,  4212,  4213,  4216,  4218,  4220,  4222,  4226,  4227,
    4229,  4230,  4234,  4237,  4242,  4247,  4252,  4257,  4258,  4263,
    4270,  4287,  4290,  4293,  4294,  4301,  4307,  4310,  4313,  4316,
    4318,  4324,  4330,  4333,  4336,  4340,  4343,  4346,  4349,  4353,
    4356,  4359,  4362,  4364,  4366,  4370,  4375,  4379,  4383,  4386,
    4389,  4393,  4397,  4401,  4405,  4409,  4413,  4415,  4417,  4419,
    4421,  4422,  4424,  4425,  4428,  4429,  4431,  4433,  4435,  4436,
    4439,  4440,  4443,  4444,  4447,  4450,  4451,  4456,  4457,  4462,
    4464,  4466,  4467,  4469,  4470,  4472,  4474,  4475,  4480,  4484,
    4486,  4487,  4491,  4496,  4499,  4501,  4503,  4505,  4507,  4509,
    4511,  4513,  4515,  4516,  4518,  4519,  4523,  4527,  4529,  4531,
    4533,  4536,  4537,  4541,  4545,  4548,  4551,  4552,  4557,  4558,
    4560,  4562,  4565,  4566,  4571,  4577,  4578,  4579,  4580,  4597,
    4600,  4601,  4603,  4604,  4606,  4608,  4609,  4611,  4613,  4614,
    4617,  4620,  4622,  4626,  4631,  4635,  4639,  4640,  4643,  4646,
    4648,  4652,  4656,  4657,  4661,  4662,  4666,  4669,  4673,  4675,
    4677,  4680,  4681,  4684,  4686,  4688,  4691,  4694,  4696,  4698,
    4700,  4702,  4704,  4707,  4710,  4712,  4714,  4716,  4718,  4720,
    4722,  4724,  4727,  4730,  4733,  4736,  4739,  4741,  4743,  4745,
    4747,  4749,  4751,  4753,  4757,  4763,  4765,  4767,  4769,  4771,
    4773,  4777,  4782,  4788,  4790,  4796,  4800,  4803,  4805,  4809,
    4812,  4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,  4830,
    4832,  4834,  4836,  4838,  4840,  4844,  4847,  4849,  4851,  4853,
    4855,  4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,
    4875,  4877,  4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,
    4895,  4897,  4899,  4901,  4903,  4905,  4907,  4909,  4911,  4913,
    4915,  4917,  4919,  4921,  4923,  4925,  4927,  4929,  4931,  4933,
    4935,  4937,  4939,  4941,  4943,  4945,  4947,  4949,  4951,  4953,
    4955,  4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,  4973,
    4975,  4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,  4993,
    4995,  4997,  4999,  5001,  5003,  5005,  5007,  5009,  5011,  5013,
    5015,  5017,  5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,
    5035,  5037,  5039,  5041,  5043,  5045,  5047,  5049,  5051,  5053,
    5055,  5057,  5059,  5061,  5063,  5065,  5067,  5069,  5071,  5073,
    5075,  5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,
    5095,  5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,
    5115,  5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,
    5135,  5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,
    5155,  5157,  5159,  5161,  5163,  5165,  5167,  5169,  5171,  5173,
    5175,  5177,  5179,  5181,  5183,  5185,  5187,  5189,  5191,  5193,
    5195,  5197,  5199,  5201,  5203,  5205,  5207,  5209,  5211,  5213,
    5215,  5217,  5219,  5221,  5223,  5225,  5227,  5229,  5231,  5233,
    5235,  5237,  5239,  5241,  5243,  5245,  5247,  5249,  5251,  5253,
    5255,  5257,  5259,  5261,  5263,  5265,  5267,  5269,  5271,  5273,
    5275,  5277,  5279,  5281,  5283,  5285,  5287,  5289,  5291,  5293,
    5295,  5297,  5299,  5301,  5303,  5305,  5307,  5309,  5311,  5313,
    5315,  5317,  5319,  5321,  5323,  5325,  5327,  5329,  5331,  5333,
    5335,  5337,  5339,  5341,  5343,  5345,  5346,  5351,  5352,  5354,
    5356,  5360,  5361,  5364,  5366,  5368,  5370,  5372,  5373,  5375,
    5376,  5378,  5380,  5382,  5383,  5386,  5389,  5392,  5394,  5397,
    5402,  5408,  5413,  5420,  5423,  5427,  5431,  5435,  5441,  5443,
    5447,  5451,  5454,  5457,  5460,  5462,  5464,  5469,  5474,  5476,
    5478,  5480,  5482,  5484,  5485,  5490,  5492,  5494,  5496,  5500,
    5504,  5506,  5508,  5511,  5514,  5515,  5519,  5524,  5528,  5529,
    5537,  5539,  5542,  5544,  5546,  5548,  5550,  5552,  5554,  5555,
    5561,  5563,  5565,  5567,  5569,  5571,  5575,  5582,  5589,  5596,
    5604,  5608,  5617,  5626,  5635,  5636,  5638,  5640,  5643,  5644,
    5646,  5648,  5652,  5653,  5657,  5658,  5662,  5663,  5667,  5668,
    5672,  5674,  5676,  5678,  5680,  5682,  5684,  5686,  5688,  5690,
    5692,  5694,  5697,  5700,  5702,  5706,  5709,  5712,  5715,  5718,
    5721,  5724,  5727,  5730,  5731,  5733,  5737,  5739,  5742,  5745,
    5748,  5750,  5754,  5758,  5760,  5762,  5766,  5768,  5772,  5777,
    5783,  5785,  5786,  5790,  5794,  5796,  5798,  5799,  5802,  5805,
    5808,  5811,  5812,  5815,  5818,  5820,  5823,  5826,  5829,  5832,
    5835,  5836,  5840,  5841,  5843,  5844,  5848,  5851,  5852,  5854,
    5857,  5858,  5860,  5865,  5870,  5876,  5879,  5883,  5884,  5886,
    5887,  5892,  5893,  5895,  5897,  5898,  5901,  5904,  5906,  5907,
    5909,  5911,  5916,  5917,  5925,  5927,  5928,  5929,  5932,  5936,
    5938,  5940,  5942,  5943,  5947,  5949,  5952,  5954,  5957,  5961,
    5965,  5969,  5970,  5972,  5973,  5977,  5981,  5982,  5991,  5992,
    5996,  5998,  6002,  6003,  6006,  6010,  6016,  6017,  6021,  6026,
    6031,  6032,  6047,  6048,  6055,  6056,  6057,  6058,  6059,  6072,
    6077,  6082,  6086,  6091,  6095,  6098,  6100,  6104,  6110,  6112,
    6114,  6115,  6117,  6119,  6120,  6123,  6124,  6125,  6129,  6130
};

/* YYRHS -- A `-1'-separated list of the rules' RHS. */
static const short int yyrhs[] =
{
     571,     0,    -1,     3,    -1,   572,     3,    -1,   573,    -1,
    1177,    -1,   762,    -1,   803,    -1,   793,    -1,   608,    -1,
     585,    -1,   805,    -1,   795,    -1,  1183,    -1,   590,    -1,
     574,    -1,  1022,    -1,  1049,    -1,   978,    -1,   980,    -1,
     578,    -1,  1055,    -1,  1152,    -1,  1143,    -1,   583,    -1,
     986,    -1,  1069,    -1,  1073,    -1,  1135,    -1,   810,    -1,
     818,    -1,   822,    -1,   576,    -1,  1065,    -1,  1186,    -1,
     813,    -1,   798,    -1,   989,    -1,  1061,    -1,   791,    -1,
    1150,    -1,  1184,    -1,  1185,    -1,   830,    -1,  1118,    -1,
    1035,    -1,   780,    -1,   783,    -1,  1033,    -1,  1141,    -1,
    1014,    -1,  1072,    -1,  1224,    -1,   575,   362,  1112,    -1,
     103,    -1,   126,    -1,   362,  1112,   171,   577,    -1,  1109,
      -1,   566,  1114,    -1,    -1,   148,  1112,   579,   580,    -1,
      -1,   517,   581,    -1,   581,   562,   582,    -1,   582,    -1,
     566,  1114,    -1,    -1,   198,   584,  1114,    -1,    -1,    52,
     281,   485,   586,   587,    -1,   588,    -1,   587,   562,   588,
      -1,   268,   142,  1109,    -1,   282,   142,  1109,    -1,   271,
     142,  1109,    -1,   272,   142,   963,    -1,   267,   142,   963,
      -1,   280,   142,   963,    -1,   276,   142,  1109,    -1,   275,
     142,  1109,    -1,   277,   142,  1109,    -1,   278,   142,  1109,
      -1,   279,   142,  1109,    -1,   589,    -1,   269,   142,  1109,
      -1,   270,   142,   964,    -1,   386,   142,  1109,    -1,   387,
     142,   963,    -1,    -1,    84,   680,   472,   683,  1106,   591,
     667,    -1,    -1,    84,   754,   213,  1112,   755,   337,  1106,
     592,   560,   757,   561,    -1,    -1,    84,    91,   683,  1112,
     593,   677,    -1,    -1,    84,   594,  1200,    -1,    84,   514,
     595,  1168,    -1,    -1,  1112,   567,  1112,    -1,  1112,    -1,
     403,   696,   496,  1109,    -1,    -1,    -1,    -1,    -1,    -1,
     560,   598,   613,   561,   599,   403,   600,   707,   601,   604,
     602,   636,    -1,    -1,   603,   605,    -1,    -1,   604,   606,
      -1,    67,  1109,    -1,   235,   450,    -1,   328,   450,    -1,
      79,   450,    -1,   379,   450,    93,    -1,   304,   450,    93,
      -1,   607,    -1,   605,    -1,   118,    -1,   869,   118,    -1,
     450,   419,   109,    -1,   450,   419,   224,    -1,    -1,    47,
     596,   609,   610,    -1,    -1,   560,   611,   561,    -1,    -1,
     612,    -1,   612,   562,   851,    -1,   851,    -1,    -1,   614,
      -1,   614,   562,   616,    -1,   616,    -1,    -1,  1112,   615,
     707,    -1,    -1,   618,    -1,   618,   562,   619,    -1,   619,
      -1,   620,   615,  1112,   707,    -1,    -1,   225,    -1,   350,
      -1,   217,    -1,    -1,   621,   636,   568,    -1,   636,   568,
      -1,   622,   636,   568,    -1,    -1,   623,   624,   568,    -1,
      -1,   106,   634,   625,   707,   635,    -1,   106,  1112,    75,
     168,   631,    -1,    -1,   106,   629,   195,   168,   626,   630,
     636,    -1,   106,  1112,    89,   168,   627,    -1,    -1,   628,
     573,    -1,   150,    -1,    80,    -1,   633,    -1,   630,   562,
     633,    -1,   963,    -1,   442,   632,  1110,    -1,    -1,   523,
      -1,   631,    -1,  1112,    -1,   443,    -1,   869,   169,    -1,
     441,    -1,  1112,    -1,   634,   562,  1112,    -1,    -1,   108,
     851,    -1,    -1,   637,   573,    -1,    -1,   404,   638,   851,
      -1,    -1,   209,   639,   647,   138,   209,    -1,    -1,   548,
     532,   640,   652,   138,   548,    -1,    -1,    -1,   548,   641,
     851,   532,   642,   652,   138,   548,    -1,   657,    -1,    -1,
     643,   660,    -1,   242,  1113,    -1,   229,  1113,    -1,   340,
    1112,    -1,    -1,   157,   645,  1112,   222,   644,   646,    -1,
      60,  1112,    -1,    -1,   323,   171,    -1,   171,    -1,  1112,
      -1,   646,   562,  1112,    -1,    -1,    -1,    -1,   648,   851,
     547,   649,   622,   650,   651,    -1,    -1,   132,   647,    -1,
     546,   622,    -1,    -1,    -1,    -1,   653,   851,   547,   654,
     622,   655,   656,    -1,    -1,   546,   622,    -1,   532,   652,
      -1,    -1,  1113,   569,   658,   660,   659,    -1,    -1,  1113,
      -1,    -1,    28,   661,   623,   621,   138,    -1,   263,   622,
     138,   263,    -1,    -1,    -1,   534,   662,   851,   125,   663,
     622,   138,   534,    -1,    -1,   394,   622,   510,   664,   851,
     138,   394,    -1,    27,    -1,     8,    -1,   219,    -1,   511,
      -1,   112,    -1,   560,   668,    -1,   684,   670,    -1,   246,
    1106,    -1,   560,   246,  1106,   561,    -1,   697,   561,   684,
     670,    -1,    -1,   673,   561,   669,  1190,    -1,    -1,    -1,
    1081,   676,   673,   671,  1187,    -1,    -1,  1081,   676,   560,
     673,   561,   672,  1190,    -1,    -1,    -1,   420,   674,   840,
     844,   675,   694,    -1,    -1,    18,    -1,    -1,   678,    -1,
     679,    -1,   678,   679,    -1,   689,    -1,   688,    -1,    -1,
     681,    -1,   682,    -1,   682,   681,    -1,   473,    -1,    -1,
     209,   869,   149,    -1,    -1,   686,    -1,   687,    -1,   687,
     685,    -1,   687,    -1,   687,   686,    -1,   687,   562,   686,
      -1,   140,  1006,   690,    -1,   494,  1006,   690,    -1,   286,
    1006,   964,    -1,   300,  1006,   964,    -1,    24,  1006,   963,
      -1,   353,  1006,  1109,    -1,    67,  1006,  1109,    -1,    23,
    1006,   964,    -1,   351,  1006,   963,    -1,   351,  1006,   108,
      -1,    56,  1006,   963,    -1,   111,  1006,   963,    -1,   413,
    1006,   691,    -1,   377,  1006,   692,    -1,   374,  1006,   963,
      -1,   375,  1006,   963,    -1,   503,  1006,   560,   982,   561,
      -1,   688,    -1,   689,    -1,   220,  1006,   693,    -1,    93,
     119,  1006,  1109,    -1,   213,   119,  1006,  1109,    -1,    76,
    1006,  1109,    -1,   736,   728,  1006,   730,    -1,   736,    63,
    1006,   735,    -1,  1114,    -1,   108,    -1,   161,    -1,   130,
      -1,    71,    -1,   383,    -1,    70,    -1,   376,    -1,   373,
      -1,   963,    -1,   328,    -1,   160,    -1,   237,    -1,   958,
      -1,   839,   843,    -1,    -1,    10,    -1,   461,    -1,   381,
      -1,   105,    -1,   223,    -1,   698,    -1,   697,   562,   698,
      -1,   699,    -1,   700,    -1,   705,   701,    -1,   705,   741,
      -1,   749,   759,   755,   560,   757,   561,    -1,   703,   750,
     759,   755,   560,   757,   561,    -1,   703,   166,   232,   759,
     560,   757,   561,   741,    -1,   704,   701,    -1,   703,   702,
      -1,    -1,   702,    -1,    57,   851,    -1,    -1,   704,    -1,
      78,   759,    -1,    -1,  1105,   706,   707,   724,    -1,   715,
     722,   719,    -1,   716,   723,   719,    -1,   163,   717,   719,
      -1,    37,    -1,    37,   560,   331,   561,    -1,    41,    -1,
      40,    -1,   711,   560,   331,   561,   737,    -1,   711,   737,
      -1,   712,   560,   331,   561,   738,    -1,   712,   738,    -1,
      32,   560,   331,   561,    -1,    32,    -1,   713,   560,   331,
     561,   737,    -1,   714,   560,   331,   561,   738,    -1,   524,
     560,   331,   561,    -1,   543,   722,   719,    -1,    97,    -1,
     481,    -1,   478,   722,    -1,    94,    -1,   482,    -1,    39,
     722,    -1,   710,    -1,   290,    -1,   259,    -1,   262,   524,
      -1,   262,   713,   737,    -1,   484,   737,    -1,   477,   722,
     737,    -1,   292,   737,    -1,   260,   737,    -1,   105,   717,
     719,    -1,   332,   717,   719,    -1,   161,   717,   719,    -1,
      -1,   141,   708,   560,   761,   561,   737,    -1,    -1,   426,
     709,   560,   761,   561,   737,    -1,   262,   737,    -1,   424,
      -1,   183,    -1,   182,    -1,   357,    -1,   311,    -1,   250,
      -1,   310,    -1,   359,    -1,   312,    -1,    55,    -1,   319,
      -1,   316,    55,    -1,   711,   528,    -1,   525,    -1,   316,
     525,    -1,   333,    -1,   319,   525,    -1,   316,    55,   528,
      -1,   319,   528,    -1,   223,    -1,   483,    -1,   436,    -1,
     291,    -1,    31,    -1,   381,    -1,   124,    -1,   124,   361,
      -1,    -1,   560,   331,   561,    -1,   718,    -1,   560,   331,
     562,   331,   561,    -1,    -1,   720,    -1,   720,   721,    -1,
     721,    -1,   433,    -1,   509,    -1,   544,    -1,    -1,   560,
     331,   561,    -1,    -1,   718,    -1,    -1,   725,    -1,   725,
     726,    -1,   726,    -1,   330,    -1,   869,   330,    -1,   108,
     727,    -1,   337,   511,   327,   850,    -1,    23,    -1,   424,
     108,   523,    -1,   740,   232,    -1,   504,    -1,   504,   232,
      -1,    67,  1109,    -1,    63,   733,    -1,   327,   850,    -1,
    1096,    -1,    55,   426,    -1,    54,    -1,  1114,    -1,    32,
      -1,   729,    -1,   108,    -1,  1114,    -1,    32,    -1,   731,
      -1,   108,    -1,  1114,    -1,    -1,    63,   735,    -1,   733,
      -1,   108,    -1,    -1,   108,    -1,    -1,    20,   738,    -1,
      45,    -1,   502,   738,    -1,   728,   729,   738,    -1,    32,
     739,    -1,    -1,    32,    -1,    -1,    20,    -1,   502,    -1,
     728,   729,    -1,    -1,   364,    -1,    -1,   384,  1106,   742,
     743,    -1,   745,    -1,   560,   744,   561,   745,    -1,   744,
     562,  1112,    -1,  1112,    -1,    -1,   746,    -1,   746,   747,
      -1,   747,    -1,   337,   112,   748,    -1,   337,   511,   748,
      -1,   283,   173,    -1,   283,   352,    -1,   283,   434,    -1,
     401,    -1,    48,    -1,   426,   330,    -1,   328,     5,    -1,
     426,   108,    -1,   751,    -1,   174,   752,    -1,   439,   752,
      -1,   364,   232,    -1,   504,   752,    -1,   232,    -1,   213,
      -1,    -1,   751,    -1,   231,    -1,   213,    -1,   212,    -1,
      -1,   504,    -1,   174,    -1,   439,    -1,    -1,   517,   756,
      -1,   494,   756,    -1,    43,    -1,   415,    -1,   196,    -1,
     757,   562,   758,   956,    -1,   758,   956,    -1,  1112,    -1,
    1112,   560,   331,   561,    -1,    -1,  1105,    -1,    -1,   567,
    1112,    -1,  1094,    -1,   761,   562,  1094,    -1,    -1,    13,
     776,   472,  1106,   763,   769,    -1,    -1,    13,    91,   768,
     764,   677,    -1,    -1,    13,   366,   596,   765,   603,    -1,
      -1,    13,   175,   596,   766,   603,    -1,    -1,    13,  1206,
    1202,  1207,   529,  1106,   767,  1210,    18,  1212,  1215,    -1,
      -1,  1112,    -1,    -1,   121,   471,    -1,   211,   471,    -1,
     771,    -1,   769,   562,   771,    -1,     6,   775,    -1,   770,
     699,   778,    -1,     6,   700,    -1,   770,   560,   697,   561,
      -1,    -1,    52,   775,  1105,   772,   705,   778,    -1,    -1,
      -1,   305,   775,  1105,   773,   707,   724,   774,   778,    -1,
     126,   775,  1105,   777,    -1,   126,   166,   232,   759,    -1,
     126,   364,   232,    -1,   126,   751,  1105,    -1,   120,   231,
      -1,   134,   231,    -1,    13,   775,  1105,   426,   108,  1096,
      -1,    13,   775,  1105,   126,   108,    -1,   391,   779,  1106,
      -1,    81,   485,   728,   730,   734,    -1,   685,    -1,   165,
      -1,   953,    -1,    -1,    66,    -1,    -1,   210,    -1,    -1,
     401,    -1,    48,    -1,    -1,     8,  1112,    -1,   160,    -1,
      -1,   485,    -1,   142,    -1,    18,    -1,    -1,   454,   435,
     785,   781,   789,    -1,   458,   435,   785,    -1,    -1,   435,
     454,   785,   782,   789,    -1,   435,   458,   785,    -1,   454,
     487,   784,    -1,    -1,   535,    77,   437,    -1,    -1,   786,
     787,    -1,   788,    -1,   787,   562,   788,    -1,    -1,   451,
      -1,   388,    -1,    -1,   510,   790,    -1,   589,    -1,   790,
     562,   589,    -1,    -1,   400,  1137,   792,   982,   171,  1109,
      -1,    -1,    26,  1137,   794,   982,   485,  1109,    -1,    -1,
      56,  1137,   796,   982,   797,    -1,    -1,   372,    -1,   153,
      -1,    -1,   392,   812,  1137,   799,   982,   800,    -1,    -1,
     801,    -1,   802,    -1,   802,   801,    -1,   372,    -1,   153,
      -1,   515,    -1,    -1,    14,   812,  1137,   804,   982,   807,
      -1,    -1,    57,  1137,   806,   982,   807,    -1,    -1,   808,
      -1,   809,    -1,   809,   808,    -1,   372,    -1,   156,    -1,
     293,    -1,   153,    -1,    53,    -1,   168,   512,    -1,    -1,
     341,   812,  1137,   811,   982,   807,    -1,    -1,   329,    -1,
     252,    -1,    -1,   391,  1137,   814,   816,    -1,   391,   514,
     595,   815,    -1,  1115,   485,  1115,    -1,   815,   562,  1115,
     485,  1115,    -1,   817,    -1,   816,   562,   817,    -1,  1106,
     485,  1106,    -1,    46,   213,   819,   225,   821,    -1,   820,
      -1,   819,   562,   820,    -1,  1106,   826,    -1,  1112,    -1,
     108,    -1,    -1,   251,   213,   222,    46,   823,   824,    -1,
     825,    -1,   824,   562,   825,    -1,  1106,   826,   829,    -1,
      -1,   827,   828,    -1,    -1,   752,   560,   936,   561,    -1,
      -1,   210,   241,    -1,   831,    -1,   420,   833,    -1,   560,
     832,   561,  1190,    -1,   420,   835,    -1,   560,   832,   561,
      -1,    -1,   835,   834,  1187,    -1,    -1,    -1,   836,   840,
     844,   837,   838,   843,    -1,   952,   958,    -1,   974,    -1,
     839,    -1,   974,   839,    -1,   839,   974,    -1,   171,   910,
     944,   949,   946,   952,   958,   965,    -1,   171,   127,   944,
     958,    -1,    -1,   841,    -1,   841,   842,    -1,   842,    -1,
     460,    -1,   200,    -1,   122,    -1,   449,    -1,   444,    -1,
     445,    -1,   447,    -1,   448,    -1,   446,    -1,    12,    -1,
      -1,   168,   511,    -1,   256,   225,   428,   303,    -1,   844,
     562,   845,    -1,   845,    -1,   554,    -1,   846,   848,   847,
     849,    -1,    -1,    -1,  1100,    -1,   851,    -1,    -1,    18,
    1112,    -1,    18,  1109,    -1,  1112,    -1,  1109,    -1,    -1,
     560,   561,    -1,    -1,   854,   852,   853,    -1,    -1,   853,
     867,   854,    -1,   854,   540,   854,    -1,    -1,   857,   855,
     856,    -1,    -1,   856,   868,   857,    -1,   326,   857,    -1,
     858,    -1,   859,   226,   491,    -1,   859,   226,   869,   491,
      -1,   859,   226,   155,    -1,   859,   226,   869,   155,    -1,
     859,   226,   507,    -1,   859,   226,   869,   507,    -1,   859,
      -1,   859,   226,   330,    -1,   859,   226,   869,   330,    -1,
     859,   143,   860,    -1,   859,   871,   860,    -1,   859,   871,
     872,   560,  1195,   561,    -1,   860,    -1,   861,   225,   560,
    1195,   561,    -1,   861,   869,   225,   560,  1195,   561,    -1,
     861,   225,   560,   851,   561,    -1,   861,   225,   560,   851,
     562,   897,   561,    -1,   861,   869,   225,   560,   851,   561,
      -1,   861,   869,   225,   560,   851,   562,   897,   561,    -1,
     861,   549,   861,    16,   860,    -1,   861,   869,   549,   861,
      16,   860,    -1,   861,   438,   246,   861,    -1,   861,   246,
     874,   948,    -1,   861,   869,   246,   874,   948,    -1,   861,
     385,   861,    -1,   861,   869,   385,   861,    -1,   861,    -1,
     861,   550,   862,    -1,   862,    -1,   862,   551,   863,    -1,
     863,    -1,   863,   429,   864,    -1,   863,   430,   864,    -1,
     864,    -1,   864,   553,   865,    -1,   864,   552,   865,    -1,
     864,   553,   873,   938,    -1,   864,   552,   873,   938,    -1,
     865,    -1,   865,   554,   866,    -1,   865,   555,   866,    -1,
     865,   556,   866,    -1,   865,   123,   866,    -1,   865,   306,
     866,    -1,   866,    -1,   866,   557,   874,    -1,   874,    -1,
     347,    -1,   344,    -1,    16,    -1,    15,    -1,   326,    -1,
     325,    -1,   563,    -1,   325,    -1,   142,    -1,   180,    -1,
     194,    -1,   238,    -1,   265,    -1,   321,    -1,    12,    -1,
      17,    -1,   221,   851,    -1,  1102,    -1,   874,    63,  1114,
      -1,  1097,    -1,  1095,    -1,   887,    -1,   883,    -1,   874,
     346,   874,    -1,   553,   874,    -1,   552,   874,    -1,   558,
     874,    -1,   870,   874,    -1,   560,  1195,   561,    -1,   560,
     851,   561,    -1,   560,   851,   562,   897,   561,    -1,   414,
     560,   851,   562,   897,   561,    -1,   149,   560,  1195,   561,
      -1,   564,  1112,   851,   565,    -1,   283,   900,     9,   560,
     861,   877,   561,    -1,    20,   560,   851,   561,    -1,    32,
     874,    -1,    50,   560,   851,    18,   895,   561,    -1,   548,
     904,   532,   906,   905,   138,    -1,    81,   560,   851,   562,
     895,   561,    -1,    81,   560,   851,   517,   729,   561,    -1,
     108,   560,  1102,   561,    -1,   522,   560,  1103,   561,    -1,
     176,   560,   561,    -1,   177,   560,   851,   561,    -1,   178,
     560,   851,   562,   851,   561,    -1,   179,   560,   851,   562,
     851,   562,   851,   561,    -1,     7,   560,   851,   562,   851,
     561,    -1,     7,   560,   851,   562,   221,   851,   938,   561,
      -1,   394,   560,   851,   562,   851,   561,    -1,    22,   560,
     851,   561,    -1,    22,   560,   851,   562,   851,   561,    -1,
      55,   560,   897,   561,    -1,    55,   560,   897,   517,   729,
     561,    -1,    54,   560,   851,   561,    -1,    61,   560,   897,
     561,    -1,    64,   560,   851,   561,    -1,    72,   560,   897,
     561,    -1,    73,   560,   851,   562,   897,   561,    -1,    82,
     560,   851,   562,   851,   562,   851,   561,    -1,    87,   850,
      -1,    90,   850,    -1,    90,   560,   851,   561,    -1,    88,
     850,    -1,    95,   560,   851,   562,   873,   938,   561,    -1,
      96,   560,   851,   562,   873,   938,   561,    -1,    91,   560,
     561,    -1,    97,   560,   851,   561,    -1,   102,   560,   851,
     561,    -1,   133,   560,   851,   562,   897,   561,    -1,   266,
     560,   851,   562,   897,   561,    -1,   137,   560,   851,   561,
      -1,   137,   560,   851,   562,   851,   561,    -1,   107,   560,
     851,   562,  1110,   561,    -1,   136,   560,   851,   562,  1110,
     561,    -1,   115,   560,   851,   561,    -1,   115,   560,   851,
     562,   851,   561,    -1,   116,   560,   851,   561,    -1,   116,
     560,   851,   562,   851,   561,    -1,   152,   560,   851,   562,
     851,   562,   851,   561,    -1,   152,   560,   851,   562,   851,
     562,   851,   562,   851,   561,    -1,   152,   560,   851,   562,
     851,   562,   851,   562,   851,   562,   851,   561,    -1,   167,
     560,   851,   562,   331,   561,    -1,   172,   560,   851,   561,
      -1,   172,   560,   851,   562,   851,   561,    -1,   158,   560,
     851,   562,   897,   561,    -1,   876,    -1,   186,   560,   940,
     562,   851,   561,    -1,   205,   560,   851,   561,    -1,   209,
     560,   851,   562,   851,   562,   851,   561,    -1,   219,   560,
     851,   562,   851,   562,   851,   562,   851,   561,    -1,   873,
     938,   553,   851,    -1,   873,    -1,   236,   560,   561,    -1,
     236,   560,   851,   561,    -1,   243,   560,   851,   562,   851,
     561,    -1,   253,   560,   851,   562,   851,   561,    -1,   253,
     560,   851,   562,   851,   562,   851,   561,    -1,   190,   560,
     851,   562,   897,   561,    -1,   240,   560,   851,   562,   897,
     561,    -1,   258,   560,   851,   561,    -1,   258,   560,   851,
     562,   851,   561,    -1,   273,   560,   851,   562,   851,   561,
      -1,   273,   560,   851,   562,   851,   562,   851,   561,    -1,
     295,   560,   851,   561,    -1,   299,   560,   851,   561,    -1,
     306,   560,   851,   562,   851,   561,    -1,   307,   560,   851,
     561,    -1,   327,   850,    -1,   327,   560,   851,   561,    -1,
     353,   560,   851,   561,    -1,   336,   560,   851,   561,    -1,
     360,   560,   861,   225,   851,   561,    -1,   370,   560,   851,
     561,    -1,   378,   560,   851,   561,    -1,   378,   560,   561,
      -1,   395,   560,   851,   562,   851,   562,   851,   561,    -1,
     406,   560,   851,   562,   851,   561,    -1,   409,   560,   851,
     561,    -1,   409,   560,   851,   562,   851,   561,    -1,   412,
     560,   561,    -1,   462,   560,   851,   562,   851,   561,    -1,
     462,   560,   851,   562,   221,   851,   938,   561,    -1,   418,
     560,   851,   561,    -1,   464,   560,   851,   562,   851,   562,
     851,   561,    -1,   464,   560,   851,   562,   851,   561,    -1,
     464,   560,   851,   171,   851,   168,   851,   561,    -1,   464,
     560,   851,   171,   851,   561,    -1,   465,   560,   851,   562,
     851,   562,   851,   561,    -1,   469,   850,    -1,   469,   560,
     851,   561,    -1,   481,   560,   851,   561,    -1,   478,   560,
     851,   561,    -1,   478,   560,   851,   562,   851,   561,    -1,
     479,   560,   939,   562,   851,   562,   851,   561,    -1,   480,
     560,   939,   562,   851,   562,   851,   561,    -1,   490,   560,
     851,   561,    -1,   490,   560,   239,   851,   171,   851,   561,
      -1,   490,   560,   486,   851,   171,   851,   561,    -1,   490,
     560,    42,   851,   171,   851,   561,    -1,   490,   560,   239,
     171,   851,   561,    -1,   490,   560,   486,   171,   851,   561,
      -1,   490,   560,    42,   171,   851,   561,    -1,   490,   560,
     851,   171,   851,   561,    -1,   492,   560,   851,   562,   851,
     561,    -1,  1112,   567,  1112,   560,   896,   561,    -1,    -1,
    1108,   560,   875,   878,   561,    -1,   505,   560,  1093,   562,
     331,   562,   331,   562,   897,   561,    -1,   506,   560,   561,
      -1,   506,   560,   851,   561,    -1,   514,   560,   561,    -1,
     518,   850,    -1,   520,   850,    -1,   519,   850,    -1,   531,
     560,   851,   561,    -1,   531,   560,   851,   562,   851,   561,
      -1,   543,   560,   851,   561,    -1,   541,   560,   851,   561,
      -1,   541,   560,   851,   562,   851,   561,    -1,    29,   560,
     963,   562,   851,   561,    -1,   154,   560,   938,   171,   851,
     561,    -1,    79,   560,   851,   562,   851,   561,    -1,   184,
     560,   851,   561,    -1,   184,   560,   851,   562,   851,   561,
      -1,   185,   560,   851,   561,    -1,   185,   560,   851,   562,
     851,   561,    -1,   182,   560,   897,   561,    -1,   250,   560,
     897,   561,    -1,   310,   560,   897,   561,    -1,   302,   560,
     851,   561,    -1,   302,   560,   851,   562,   851,   561,    -1,
     308,   560,   851,   561,    -1,   308,   560,   851,   562,   851,
     561,    -1,   309,   560,   851,   561,    -1,   309,   560,   851,
     562,   851,   561,    -1,   311,   560,   897,   561,    -1,   312,
     560,   897,   561,    -1,   357,   560,   851,   562,   851,   561,
      -1,   356,   560,   851,   561,    -1,   356,   560,   851,   562,
     851,   561,    -1,   358,   560,   851,   561,    -1,   358,   560,
     851,   562,   851,   561,    -1,   359,   560,   897,   561,    -1,
     181,   560,   851,   561,    -1,   181,   560,   851,   562,   851,
     561,    -1,   248,   560,   851,   561,    -1,   248,   560,   851,
     562,   851,   561,    -1,    -1,   535,   371,   151,    -1,   225,
      40,   303,    -1,    -1,   879,    -1,    -1,   880,   881,    -1,
     882,    -1,   881,   562,   882,    -1,   846,   851,   847,   849,
      -1,    25,   560,   893,   561,    -1,    25,   560,   122,   893,
     561,    -1,    35,   560,   893,   561,    -1,    36,   560,   893,
     561,    -1,    38,   560,   893,   561,    -1,    83,   560,   943,
     554,   561,    -1,    83,   560,   893,   561,    -1,    -1,    -1,
      83,   560,   122,   884,   897,   885,   561,    -1,   193,   560,
    1093,   562,   331,   562,   331,   562,   893,   561,    -1,   301,
     560,   893,   561,    -1,   301,   560,   122,   893,   561,    -1,
     287,   560,   893,   561,    -1,   287,   560,   122,   893,   561,
      -1,   456,   560,   893,   561,    -1,   527,   560,   893,   561,
      -1,   457,   560,   893,   561,    -1,   521,   560,   893,   561,
      -1,   466,   560,   893,   561,    -1,   466,   560,   122,   893,
     561,    -1,    -1,   192,   560,   890,   886,   897,   892,   891,
     561,    -1,    -1,   566,   888,   889,    -1,  1114,   427,   851,
      -1,  1114,    -1,   566,  1127,  1114,   760,    -1,    -1,   122,
      -1,    -1,   422,  1094,    -1,    -1,   953,    -1,    -1,   943,
     894,   851,    -1,    32,   722,    -1,    55,   722,   737,    -1,
     319,   722,    -1,   433,    -1,   433,   223,    -1,   509,    -1,
     509,   223,    -1,    97,    -1,   481,    -1,    94,    -1,   105,
     717,    -1,    -1,   897,    -1,    -1,   898,   899,    -1,   851,
      -1,   899,   562,   851,    -1,   901,    -1,   560,   901,   561,
      -1,    -1,   902,   903,    -1,  1102,    -1,   903,   562,  1102,
      -1,    -1,   851,    -1,    -1,   546,   851,    -1,    -1,   907,
     908,    -1,   851,   547,   851,    -1,   908,   532,   851,   547,
     851,    -1,   921,    -1,   912,    -1,   911,    -1,   909,    -1,
     911,   562,   909,    -1,   909,   920,   909,    -1,   909,   460,
     921,    -1,    -1,   909,   920,   909,   337,   913,   851,    -1,
      -1,   909,   460,   921,   337,   914,   851,    -1,    -1,   909,
     920,   909,   517,   915,   560,   937,   561,    -1,   909,   317,
     230,   921,    -1,    -1,   909,   243,   931,   230,   909,   337,
     916,   851,    -1,    -1,   909,   243,   931,   230,   921,   917,
     517,   560,   937,   561,    -1,   909,   317,   243,   931,   230,
     921,    -1,    -1,   909,   406,   931,   230,   909,   337,   918,
     851,    -1,    -1,   909,   406,   931,   230,   921,   919,   517,
     560,   937,   561,    -1,   909,   317,   406,   931,   230,   921,
      -1,   230,    -1,   215,   230,    -1,    85,   230,    -1,    -1,
     922,  1106,   942,   932,    -1,    -1,   564,  1112,   909,   243,
     348,   230,   909,   337,   923,   851,   565,    -1,   930,   929,
     926,    -1,   560,   929,   924,  1190,   561,   942,    -1,    -1,
     929,   925,   911,    -1,    -1,    -1,   927,   840,   844,   928,
     694,    -1,    -1,   420,    -1,    -1,   348,    -1,    -1,   516,
     933,    -1,   165,   933,    -1,   210,   933,    -1,    -1,   751,
     934,   560,   935,   561,    -1,    -1,   936,    -1,   936,   562,
    1112,    -1,  1112,    -1,   364,    -1,  1112,    -1,   937,   562,
    1112,    -1,   939,    -1,    98,    -1,    99,    -1,   100,    -1,
     101,    -1,   202,    -1,   203,    -1,   204,    -1,   295,    -1,
     297,    -1,   298,    -1,   417,    -1,   542,    -1,   102,    -1,
     531,    -1,   205,    -1,   170,    -1,   299,    -1,   307,    -1,
     370,    -1,   418,    -1,   543,    -1,    97,    -1,   481,    -1,
      94,    -1,   478,    -1,    -1,    18,    -1,   142,    -1,    -1,
     941,  1112,    -1,    -1,    12,    -1,    -1,    -1,   533,   945,
     851,    -1,    -1,    -1,   197,   947,   851,    -1,   146,   874,
      -1,    -1,    -1,   191,    44,   950,   951,    -1,   950,   562,
    1101,   956,    -1,  1101,   956,    -1,    -1,   535,    86,    -1,
     535,   408,    -1,    -1,   953,    -1,    -1,   345,    44,   954,
     955,    -1,   955,   562,  1101,   956,    -1,  1101,   956,    -1,
      -1,    19,    -1,   113,    -1,    -1,   959,    -1,    -1,   959,
      -1,   247,   960,    -1,   961,    -1,   961,   562,   961,    -1,
     961,   334,   961,    -1,  1095,    -1,   497,    -1,   261,    -1,
     331,    -1,    -1,   247,   961,    -1,   331,    -1,   199,    -1,
     261,    -1,   497,    -1,   104,    -1,   162,    -1,   331,    -1,
     497,    -1,   261,    -1,   104,    -1,   162,    -1,    -1,    -1,
     366,  1112,   966,   560,   967,   561,    -1,    -1,   968,    -1,
     968,   562,   969,    -1,   969,    -1,   846,   851,    -1,    -1,
     971,   972,    -1,   972,   562,   973,    -1,   973,    -1,   566,
    1114,    -1,  1114,    -1,    -1,   222,   975,   976,    -1,    -1,
     349,  1111,   977,  1082,  1085,    -1,   128,  1111,    -1,   970,
      -1,    -1,   125,   979,   897,    -1,   126,   985,  1137,   984,
     982,   777,    -1,    -1,   126,   213,  1112,   337,  1106,   981,
      -1,   126,    91,   984,  1112,    -1,   126,   175,   984,   596,
      -1,   126,   366,   984,   596,    -1,   126,   514,   595,  1167,
      -1,   126,   529,   984,   982,   777,    -1,   126,   488,   984,
     596,    -1,   983,    -1,   982,   562,   983,    -1,  1106,    -1,
      -1,   209,   149,    -1,    -1,   473,    -1,    -1,    -1,   219,
     987,   992,   776,   994,   988,   996,  1012,    -1,    -1,    -1,
     395,   990,   993,   994,   991,   996,    -1,    -1,   264,    -1,
     110,    -1,   200,    -1,  1021,    -1,   110,    -1,   222,   995,
      -1,   995,    -1,   983,    -1,   999,    -1,   560,   561,   999,
      -1,   560,   998,   561,   999,    -1,    -1,   426,   997,  1003,
      -1,   998,   562,  1099,    -1,  1099,    -1,   522,  1002,    -1,
     523,  1002,    -1,    -1,   673,  1000,  1187,    -1,    -1,   560,
     673,   561,  1001,  1190,    -1,  1002,   562,  1007,    -1,  1007,
      -1,  1003,   562,  1004,    -1,  1004,    -1,  1103,  1005,  1011,
      -1,   142,    -1,   427,    -1,    -1,  1005,    -1,    -1,   560,
    1008,  1009,   561,    -1,    -1,  1010,    -1,  1010,   562,  1011,
      -1,  1011,    -1,   851,    -1,   108,    -1,    -1,    -1,   337,
     129,  1013,   232,   511,  1019,    -1,    -1,    -1,   511,  1015,
    1021,   776,   910,   426,  1017,  1016,   944,   952,   962,    -1,
    1017,   562,  1018,    -1,  1018,    -1,  1103,  1005,  1011,    -1,
    1019,   562,  1020,    -1,  1020,    -1,  1103,  1005,  1011,    -1,
      -1,   264,    -1,    -1,   112,  1023,  1031,  1024,    -1,    -1,
     171,  1106,  1025,   944,   952,   962,    -1,    -1,  1028,  1026,
     171,   910,   944,    -1,    -1,   171,  1028,  1027,   517,   910,
     944,    -1,  1029,    -1,  1028,   562,  1029,    -1,  1112,  1030,
     942,    -1,  1112,   567,  1112,  1030,   942,    -1,    -1,   567,
     554,    -1,    -1,  1032,  1031,    -1,   372,    -1,   264,    -1,
     210,    -1,   492,  1034,   983,    -1,    -1,   472,    -1,    -1,
     431,  1036,  1037,    -1,    92,  1048,    -1,  1044,   470,  1043,
    1048,    -1,  1044,   489,  1043,  1048,    -1,   472,   455,  1043,
    1048,    -1,   340,   470,  1043,  1048,    -1,    -1,   140,   690,
    1038,  1040,    -1,  1044,    65,  1045,  1106,  1043,  1048,    -1,
     322,   281,   168,   435,   535,   269,   142,  1109,    16,   270,
     142,   964,    16,   274,   142,   963,    -1,  1041,   257,    -1,
     435,   201,    -1,    -1,    33,   147,  1046,  1047,  1039,   957,
      -1,   753,  1045,  1106,  1043,   944,    -1,    66,   493,    -1,
     472,   493,    -1,  1042,   139,    -1,   365,    -1,    83,   560,
     554,   561,   530,    -1,    83,   560,   554,   561,   144,    -1,
     530,   957,    -1,   144,   957,    -1,  1126,   455,  1048,    -1,
     216,   455,    -1,   313,   455,    -1,  1044,   368,    -1,  1126,
     526,  1048,    -1,   728,  1048,    -1,    64,  1048,    -1,    30,
     257,    -1,   257,    -1,   189,    -1,   189,   168,  1115,    -1,
      84,    91,   683,  1112,    -1,    84,   472,  1106,    -1,    84,
     529,  1106,    -1,   281,   455,    -1,   435,   455,    -1,    84,
     366,   596,    -1,    84,   175,   596,    -1,   366,   455,  1048,
      -1,   175,   455,  1048,    -1,   366,    62,   596,    -1,   175,
      62,   596,    -1,   455,    -1,   257,    -1,   281,    -1,    32,
      -1,    -1,   459,    -1,    -1,  1045,  1112,    -1,    -1,   173,
      -1,   171,    -1,   225,    -1,    -1,   225,  1109,    -1,    -1,
     171,   964,    -1,    -1,   246,  1109,    -1,   533,   851,    -1,
      -1,  1052,  1106,  1050,  1054,    -1,    -1,  1052,  1053,  1051,
     830,    -1,   113,    -1,   114,    -1,    -1,   153,    -1,    -1,
    1094,    -1,  1112,    -1,    -1,   164,   812,  1056,  1057,    -1,
    1057,   562,  1058,    -1,  1058,    -1,    -1,  1137,  1059,  1060,
      -1,   470,   535,   380,   256,    -1,   371,    46,    -1,   201,
      -1,   365,    -1,   257,    -1,   455,    -1,   435,    -1,   281,
      -1,   117,    -1,   399,    -1,    -1,   982,    -1,    -1,   398,
    1062,  1063,    -1,  1063,   562,  1064,    -1,  1064,    -1,   435,
      -1,   281,    -1,   371,    46,    -1,    -1,   369,  1066,  1067,
      -1,  1041,   257,  1068,    -1,   485,  1109,    -1,    27,   851,
      -1,    -1,   233,  1070,  1071,   851,    -1,    -1,    76,    -1,
     371,    -1,   516,  1112,    -1,    -1,   251,    93,  1074,  1075,
      -1,   251,   472,  1106,   171,   281,    -1,    -1,    -1,    -1,
    1080,  1079,   214,  1111,  1076,  1081,   222,  1077,   472,  1106,
    1078,  1082,  1085,  1088,  1089,  1092,    -1,   171,   281,    -1,
      -1,   252,    -1,    -1,    74,    -1,   264,    -1,    -1,   395,
      -1,   210,    -1,    -1,    65,  1083,    -1,  1083,  1084,    -1,
    1084,    -1,   475,    44,  1094,    -1,   343,   135,    44,  1094,
      -1,   135,    44,  1094,    -1,   145,    44,  1094,    -1,    -1,
     249,  1086,    -1,  1086,  1087,    -1,  1087,    -1,   475,    44,
    1094,    -1,   453,    44,  1094,    -1,    -1,   210,   331,   249,
      -1,    -1,   560,  1090,   561,    -1,   560,   561,    -1,  1090,
     562,  1091,    -1,  1091,    -1,  1103,    -1,   566,  1114,    -1,
      -1,   426,  1019,    -1,  1110,    -1,   318,    -1,   500,   476,
      -1,  1093,  1110,    -1,  1110,    -1,   199,    -1,    34,    -1,
     354,    -1,  1097,    -1,   553,  1098,    -1,   552,  1098,    -1,
    1093,    -1,  1098,    -1,   330,    -1,   155,    -1,   491,    -1,
     199,    -1,    34,    -1,   500,   199,    -1,   500,    34,    -1,
      97,  1093,    -1,   481,  1093,    -1,   478,  1093,    -1,   331,
      -1,   261,    -1,   497,    -1,   104,    -1,   162,    -1,  1103,
      -1,  1100,    -1,  1112,   567,   554,    -1,  1112,   567,  1112,
     567,   554,    -1,   851,    -1,  1112,    -1,  1104,    -1,  1112,
      -1,  1104,    -1,  1112,   567,  1112,    -1,   567,  1112,   567,
    1112,    -1,  1112,   567,  1112,   567,  1112,    -1,  1112,    -1,
    1112,   567,  1112,   567,  1112,    -1,  1112,   567,  1112,    -1,
     567,  1112,    -1,  1112,    -1,  1112,   567,  1112,    -1,   567,
    1112,    -1,  1112,    -1,   206,    -1,   208,    -1,   476,    -1,
     476,    -1,   476,    -1,  1108,    -1,  1116,    -1,  1108,    -1,
    1117,    -1,  1112,    -1,  1109,    -1,   245,    -1,  1114,    -1,
    1114,   566,  1114,    -1,    88,   850,    -1,  1117,    -1,    20,
      -1,    26,    -1,    28,    -1,    45,    -1,    46,    -1,    54,
      -1,    56,    -1,    60,    -1,    67,    -1,    69,    -1,    79,
      -1,   103,    -1,   125,    -1,   138,    -1,   148,    -1,   164,
      -1,   195,    -1,   198,    -1,   235,    -1,   328,    -1,   340,
      -1,   362,    -1,   392,    -1,   398,    -1,   400,    -1,   407,
      -1,   416,    -1,   419,    -1,   433,    -1,   435,    -1,   454,
      -1,   458,    -1,   492,    -1,   502,    -1,   539,    -1,   512,
      -1,     5,    -1,     7,    -1,     8,    -1,     9,    -1,    10,
      -1,    11,    -1,    17,    -1,    23,    -1,    24,    -1,    25,
      -1,    30,    -1,    33,    -1,    37,    -1,    41,    -1,    40,
      -1,    43,    -1,    49,    -1,    51,    -1,    53,    -1,    58,
      -1,    59,    -1,    62,    -1,    64,    -1,    65,    -1,    68,
      -1,    70,    -1,    71,    -1,    74,    -1,    77,    -1,    86,
      -1,    93,    -1,    94,    -1,    97,    -1,   102,    -1,   109,
      -1,   111,    -1,   117,    -1,   119,    -1,   121,    -1,   128,
      -1,   129,    -1,   130,    -1,   141,    -1,   140,    -1,   139,
      -1,   144,    -1,   146,    -1,   147,    -1,   151,    -1,   153,
      -1,   156,    -1,   169,    -1,   120,    -1,   134,    -1,   173,
      -1,   159,    -1,   160,    -1,   161,    -1,   170,    -1,   183,
      -1,   182,    -1,   186,    -1,   189,    -1,   187,    -1,   196,
      -1,   201,    -1,   205,    -1,   207,    -1,   224,    -1,   211,
      -1,   212,    -1,   227,    -1,   228,    -1,   216,    -1,   220,
      -1,   388,    -1,   237,    -1,   241,    -1,   244,    -1,   250,
      -1,   252,    -1,   255,    -1,   257,    -1,   286,    -1,   281,
      -1,   268,    -1,   272,    -1,   269,    -1,   270,    -1,   282,
      -1,   271,    -1,   274,    -1,   267,    -1,   280,    -1,   276,
      -1,   275,    -1,   277,    -1,   278,    -1,   279,    -1,   284,
      -1,   285,    -1,   288,    -1,   289,    -1,   293,    -1,   294,
      -1,   295,    -1,   296,    -1,   299,    -1,   300,    -1,   305,
      -1,   303,    -1,   307,    -1,   310,    -1,   311,    -1,   312,
      -1,   313,    -1,   315,    -1,   314,    -1,   316,    -1,   319,
      -1,   320,    -1,   323,    -1,   322,    -1,   324,    -1,   333,
      -1,   334,    -1,   336,    -1,   338,    -1,   339,    -1,   351,
      -1,   352,    -1,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,   363,    -1,   365,    -1,   367,    -1,   368,    -1,   370,
      -1,   371,    -1,   372,    -1,   373,    -1,   374,    -1,   375,
      -1,   376,    -1,   377,    -1,   382,    -1,   383,    -1,   386,
      -1,   387,    -1,   390,    -1,   393,    -1,   396,    -1,   399,
      -1,   402,    -1,   403,    -1,   408,    -1,   410,    -1,   411,
      -1,   413,    -1,   414,    -1,   415,    -1,   418,    -1,   424,
      -1,   423,    -1,   425,    -1,   434,    -1,   428,    -1,   432,
      -1,   437,    -1,   438,    -1,   446,    -1,   445,    -1,   448,
      -1,   451,    -1,   455,    -1,   459,    -1,   461,    -1,   462,
      -1,   463,    -1,   467,    -1,   468,    -1,   470,    -1,   471,
      -1,   473,    -1,   474,    -1,   477,    -1,   487,    -1,   489,
      -1,   478,    -1,   479,    -1,   480,    -1,   481,    -1,   493,
      -1,   494,    -1,   495,    -1,   175,    -1,   498,    -1,   499,
      -1,   507,    -1,   510,    -1,   514,    -1,   515,    -1,   526,
      -1,   529,    -1,   523,    -1,   530,    -1,   531,    -1,   536,
      -1,   538,    -1,   543,    -1,    -1,   426,  1120,  1119,  1121,
      -1,    -1,   342,    -1,  1122,    -1,  1121,   562,  1122,    -1,
      -1,  1123,  1128,    -1,  1125,    -1,   187,    -1,   252,    -1,
     425,    -1,    -1,   338,    -1,    -1,   187,    -1,   252,    -1,
     425,    -1,    -1,   187,   567,    -1,   252,   567,    -1,   425,
     567,    -1,  1129,    -1,  1125,  1130,    -1,  1124,  1131,  1005,
    1134,    -1,  1124,   487,   227,   244,  1132,    -1,   566,  1114,
    1005,   851,    -1,   566,   566,  1127,  1131,  1005,  1134,    -1,
     728,   732,    -1,   314,  1005,   851,    -1,   314,   730,   734,
      -1,   353,  1005,  1133,    -1,   353,   168,  1115,  1005,  1133,
      -1,  1112,    -1,  1112,   567,  1112,    -1,   108,   567,  1112,
      -1,   380,   498,    -1,   380,    68,    -1,   393,   380,    -1,
     423,    -1,   476,    -1,   353,   560,   476,   561,    -1,   336,
     560,   476,   561,    -1,   851,    -1,   108,    -1,   337,    -1,
      12,    -1,    32,    -1,    -1,   256,  1137,  1136,  1138,    -1,
     472,    -1,   470,    -1,  1139,    -1,  1138,   562,  1139,    -1,
    1106,   942,  1140,    -1,   380,    -1,   537,    -1,   264,   537,
      -1,   380,   252,    -1,    -1,   508,  1142,  1137,    -1,   195,
    1106,   340,   942,    -1,   195,  1107,    60,    -1,    -1,   195,
    1107,   380,  1144,  1145,   944,   958,    -1,  1146,    -1,  1112,
    1147,    -1,   160,    -1,   323,    -1,   160,    -1,   323,    -1,
     363,    -1,   237,    -1,    -1,  1149,  1148,   560,  1010,   561,
      -1,   142,    -1,   180,    -1,   238,    -1,   194,    -1,   265,
      -1,   405,   595,  1151,    -1,  1155,   337,  1154,  1166,   171,
    1168,    -1,  1155,   337,   175,  1166,   171,  1168,    -1,  1155,
     337,   366,  1166,   171,  1168,    -1,    12,  1156,   562,   188,
     342,   171,  1168,    -1,   188,   595,  1153,    -1,  1155,   337,
    1154,  1166,   485,  1168,  1173,  1174,    -1,  1155,   337,   175,
    1166,   485,  1168,  1173,  1174,    -1,  1155,   337,   366,  1166,
     485,  1168,  1173,  1174,    -1,    -1,   472,    -1,  1157,    -1,
      12,  1156,    -1,    -1,   365,    -1,  1158,    -1,  1157,   562,
    1158,    -1,    -1,   420,  1159,  1170,    -1,    -1,   219,  1160,
    1170,    -1,    -1,   511,  1161,  1170,    -1,    -1,   384,  1162,
    1170,    -1,   112,    -1,   513,    -1,   213,    -1,    13,    -1,
      84,    -1,   126,    -1,   148,    -1,   390,    -1,   432,    -1,
     367,    -1,   159,    -1,   188,   342,    -1,   431,    92,    -1,
     467,    -1,    84,   473,   470,    -1,   256,   470,    -1,   396,
     435,    -1,   396,    59,    -1,    84,   529,    -1,   431,   529,
      -1,    84,   410,    -1,    13,   410,    -1,    84,   514,    -1,
      -1,    16,    -1,  1165,  1163,  1164,    -1,  1165,    -1,   463,
     476,    -1,   228,   476,    -1,    58,   476,    -1,   554,    -1,
    1112,   567,   554,    -1,   554,   567,   554,    -1,  1106,    -1,
    1115,    -1,  1167,   562,  1115,    -1,  1169,    -1,  1168,   562,
    1169,    -1,  1115,   207,    44,   476,    -1,  1115,   207,    44,
     353,   476,    -1,  1115,    -1,    -1,   560,  1171,   561,    -1,
    1171,   562,  1172,    -1,  1172,    -1,  1112,    -1,    -1,   397,
    1164,    -1,   397,   452,    -1,   397,   538,    -1,   397,   324,
      -1,    -1,   535,  1175,    -1,  1175,  1176,    -1,  1176,    -1,
     188,   342,    -1,   285,   963,    -1,   288,   963,    -1,   284,
     963,    -1,   289,   963,    -1,    -1,    28,  1178,  1179,    -1,
      -1,   536,    -1,    -1,    16,   328,    51,    -1,    16,    51,
      -1,    -1,   389,    -1,   328,   389,    -1,    -1,   416,    -1,
      69,  1179,  1180,  1181,    -1,   407,  1179,  1180,  1181,    -1,
     407,  1179,   485,  1182,  1112,    -1,   416,  1112,    -1,   389,
     416,  1112,    -1,    -1,  1188,    -1,    -1,   503,  1194,  1189,
     831,    -1,    -1,  1188,    -1,  1191,    -1,    -1,  1192,  1193,
      -1,   953,   957,    -1,   959,    -1,    -1,   122,    -1,    12,
      -1,   420,  1198,  1197,  1199,    -1,    -1,   560,  1198,  1195,
     561,  1196,  1187,  1199,    -1,   833,    -1,    -1,    -1,  1202,
    1201,    -1,  1203,  1202,  1208,    -1,  1208,    -1,  1216,    -1,
    1218,    -1,    -1,   109,   142,  1115,    -1,  1204,    -1,  1204,
    1205,    -1,  1205,    -1,   347,   395,    -1,    11,   142,   499,
      -1,    11,   142,   294,    -1,    11,   142,   474,    -1,    -1,
    1205,    -1,    -1,   450,   419,   109,    -1,   450,   419,   224,
      -1,    -1,  1207,   529,  1106,  1209,  1210,    18,  1212,  1215,
      -1,    -1,   560,  1211,   561,    -1,  1112,    -1,  1211,   562,
    1112,    -1,    -1,  1213,  1214,    -1,   420,   846,   833,    -1,
     560,   846,   832,   561,  1190,    -1,    -1,   535,    57,   342,
      -1,   535,    49,    57,   342,    -1,   535,   252,    57,   342,
      -1,    -1,   488,   846,   596,   665,   666,   337,   846,  1106,
     168,   846,   131,   414,  1217,   636,    -1,    -1,   695,   846,
     175,   596,  1219,   597,    -1,    -1,    -1,    -1,    -1,   366,
     846,   596,  1220,   560,  1221,   617,   561,  1222,   604,  1223,
     636,    -1,   539,  1226,  1225,  1227,    -1,   539,   138,  1225,
    1229,    -1,   539,   362,  1225,    -1,   539,    69,  1225,  1228,
      -1,   539,   407,  1225,    -1,   539,   382,    -1,  1094,    -1,
    1094,   562,  1094,    -1,  1094,   562,  1094,   562,   963,    -1,
      28,    -1,   454,    -1,    -1,   230,    -1,   402,    -1,    -1,
     339,   355,    -1,    -1,    -1,   468,  1230,  1231,    -1,    -1,
     168,   296,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const unsigned short int yyrline[] =
{
       0,   880,   880,   894,   897,   898,   903,   904,   905,   906,
     907,   908,   909,   910,   911,   912,   913,   914,   915,   916,
     917,   918,   919,   920,   921,   922,   923,   924,   925,   926,
     927,   928,   929,   930,   931,   932,   933,   934,   935,   936,
     937,   938,   939,   940,   941,   942,   943,   944,   945,   946,
     947,   948,   949,   953,   967,   968,   973,   987,   994,  1004,
    1003,  1019,  1021,  1025,  1026,  1029,  1042,  1041,  1060,  1059,
    1070,  1071,  1074,  1079,  1084,  1089,  1094,  1098,  1103,  1107,
    1111,  1115,  1119,  1124,  1128,  1132,  1148,  1152,  1164,  1163,
    1187,  1186,  1206,  1205,  1218,  1217,  1225,  1233,  1247,  1262,
    1280,  1300,  1337,  1343,  1351,  1363,  1299,  1392,  1393,  1397,
    1398,  1403,  1405,  1407,  1409,  1411,  1413,  1415,  1421,  1422,
    1423,  1427,  1431,  1439,  1438,  1451,  1453,  1456,  1458,  1462,
    1466,  1473,  1475,  1479,  1480,  1485,  1504,  1530,  1532,  1536,
    1537,  1541,  1567,  1568,  1569,  1570,  1574,  1575,  1579,  1580,
    1585,  1588,  1615,  1614,  1670,  1685,  1684,  1724,  1748,  1748,
    1779,  1780,  1785,  1806,  1830,  1836,  1851,  1852,  1856,  1860,
    1869,  1874,  1879,  1887,  1902,  1920,  1921,  1925,  1925,  1971,
    1970,  1994,  1993,  1998,  1997,  2004,  2009,  2003,  2034,  2036,
    2036,  2047,  2076,  2104,  2120,  2119,  2136,  2153,  2155,  2156,
    2160,  2181,  2204,  2206,  2220,  2204,  2238,  2240,  2241,  2245,
    2247,  2279,  2245,  2299,  2307,  2308,  2313,  2312,  2350,  2351,
    2356,  2355,  2382,  2393,  2395,  2392,  2419,  2418,  2436,  2438,
    2443,  2445,  2447,  2452,  2453,  2454,  2466,  2481,  2482,  2482,
    2486,  2488,  2487,  2490,  2489,  2495,  2511,  2494,  2525,  2526,
    2529,  2530,  2533,  2534,  2537,  2538,  2541,  2542,  2545,  2546,
    2549,  2552,  2553,  2555,  2557,  2560,  2561,  2564,  2565,  2566,
    2569,  2570,  2571,  2572,  2573,  2574,  2575,  2576,  2577,  2592,
    2598,  2599,  2600,  2601,  2606,  2611,  2616,  2631,  2632,  2633,
    2634,  2635,  2636,  2640,  2657,  2673,  2683,  2684,  2685,  2686,
    2687,  2688,  2691,  2692,  2693,  2696,  2697,  2698,  2701,  2702,
    2705,  2706,  2709,  2710,  2711,  2712,  2715,  2716,  2720,  2721,
    2725,  2726,  2733,  2739,  2747,  2761,  2765,  2771,  2773,  2777,
    2781,  2782,  2786,  2791,  2790,  2812,  2813,  2814,  2815,  2817,
    2819,  2821,  2823,  2825,  2827,  2830,  2833,  2836,  2839,  2841,
    2844,  2847,  2848,  2849,  2850,  2863,  2864,  2866,  2868,  2880,
    2882,  2884,  2886,  2887,  2888,  2889,  2890,  2891,  2893,  2895,
    2897,  2897,  2899,  2899,  2901,  2902,  2911,  2912,  2913,  2916,
    2917,  2918,  2919,  2920,  2924,  2928,  2929,  2933,  2934,  2938,
    2939,  2940,  2941,  2942,  2946,  2947,  2948,  2949,  2950,  2953,
    2955,  2956,  2960,  2961,  2962,  2965,  2972,  2973,  2976,  2977,
    2980,  2981,  2982,  2985,  2986,  2989,  2990,  2993,  2994,  2997,
    2998,  3001,  3002,  3003,  3004,  3006,  3007,  3013,  3019,  3025,
    3031,  3032,  3048,  3049,  3053,  3054,  3058,  3066,  3070,  3071,
    3075,  3084,  3088,  3089,  3092,  3102,  3103,  3107,  3108,  3111,
    3112,  3115,  3116,  3117,  3118,  3127,  3128,  3131,  3132,  3135,
    3136,  3137,  3146,  3148,  3150,  3155,  3154,  3166,  3167,  3170,
    3171,  3175,  3176,  3179,  3180,  3183,  3184,  3185,  3186,  3187,
    3190,  3191,  3192,  3193,  3194,  3197,  3198,  3199,  3211,  3212,
    3215,  3216,  3219,  3220,  3224,  3225,  3226,  3229,  3230,  3231,
    3232,  3245,  3246,  3247,  3250,  3251,  3255,  3258,  3259,  3262,
    3263,  3274,  3275,  3278,  3279,  3282,  3283,  3291,  3290,  3317,
    3316,  3331,  3330,  3349,  3348,  3368,  3366,  3381,  3382,  3384,
    3385,  3386,  3387,  3388,  3391,  3399,  3400,  3404,  3409,  3408,
    3416,  3425,  3415,  3437,  3444,  3448,  3455,  3462,  3468,  3474,
    3480,  3487,  3506,  3527,  3532,  3536,  3543,  3544,  3547,  3548,
    3552,  3553,  3554,  3558,  3559,  3560,  3563,  3564,  3565,  3566,
    3574,  3573,  3584,  3592,  3591,  3601,  3611,  3620,  3621,  3628,
    3628,  3634,  3635,  3639,  3640,  3641,  3645,  3646,  3663,  3664,
    3669,  3668,  3679,  3678,  3689,  3688,  3698,  3699,  3700,  3705,
    3704,  3716,  3717,  3720,  3721,  3724,  3725,  3726,  3730,  3729,
    3742,  3741,  3758,  3759,  3762,  3763,  3766,  3767,  3768,  3769,
    3770,  3771,  3775,  3774,  3786,  3787,  3788,  3793,  3792,  3798,
    3805,  3810,  3818,  3819,  3822,  3834,  3843,  3844,  3847,  3860,
    3861,  3866,  3865,  3875,  3876,  3879,  3892,  3892,  3902,  3903,
    3912,  3913,  3922,  3931,  3933,  3936,  3958,  3962,  3961,  3981,
    3989,  3981,  3995,  3996,  3997,  3998,  3999,  4002,  4004,  4011,
    4013,  4024,  4025,  4028,  4029,  4035,  4036,  4037,  4038,  4044,
    4050,  4056,  4066,  4069,  4071,  4077,  4087,  4088,  4089,  4102,
    4120,  4123,  4126,  4127,  4130,  4131,  4132,  4133,  4134,  4138,
    4139,  4143,  4143,  4160,  4162,  4167,  4168,  4168,  4185,  4187,
    4192,  4193,  4196,  4197,  4198,  4199,  4200,  4201,  4202,  4205,
    4206,  4207,  4208,  4210,  4212,  4215,  4217,  4219,  4223,  4229,
    4233,  4241,  4243,  4249,  4252,  4254,  4256,  4257,  4259,  4262,
    4263,  4266,  4267,  4270,  4272,  4274,  4277,  4278,  4279,  4281,
    4283,  4286,  4287,  4288,  4289,  4290,  4291,  4294,  4295,  4297,
    4297,  4298,  4298,  4299,  4299,  4300,  4300,  4302,  4303,  4304,
    4305,  4306,  4307,  4310,  4311,  4315,  4319,  4320,  4327,  4328,
    4329,  4330,  4331,  4333,  4334,  4335,  4336,  4337,  4341,  4342,
    4347,  4352,  4356,  4357,  4361,  4362,  4366,  4376,  4378,  4387,
    4389,  4400,  4402,  4413,  4424,  4435,  4446,  4448,  4450,  4452,
    4454,  4456,  4458,  4460,  4462,  4464,  4466,  4468,  4470,  4476,
    4478,  4480,  4485,  4490,  4492,  4494,  4499,  4501,  4503,  4505,
    4507,  4512,  4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,
    4529,  4531,  4533,  4535,  4539,  4541,  4551,  4553,  4555,  4557,
    4559,  4562,  4571,  4576,  4581,  4583,  4585,  4587,  4589,  4591,
    4593,  4595,  4600,  4605,  4607,  4609,  4611,  4613,  4615,  4617,
    4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,  4640,
    4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,  4661,  4668,
    4675,  4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,
    4695,  4697,  4699,  4701,  4703,  4717,  4716,  4834,  4838,  4843,
    4845,  4847,  4849,  4851,  4853,  4858,  4860,  4862,  4864,  4866,
    4871,  4875,  4877,  4879,  4881,  4883,  4885,  4889,  4892,  4895,
    4897,  4899,  4901,  4903,  4905,  4907,  4910,  4913,  4915,  4917,
    4919,  4921,  4923,  4926,  4928,  4930,  4932,  4937,  4938,  4939,
    4943,  4944,  4948,  4948,  4954,  4958,  4965,  4996,  4998,  5000,
    5002,  5004,  5006,  5008,  5011,  5013,  5010,  5016,  5018,  5025,
    5027,  5029,  5031,  5033,  5035,  5037,  5039,  5041,  5044,  5043,
    5058,  5057,  5072,  5078,  5084,  5097,  5098,  5101,  5102,  5107,
    5110,  5122,  5121,  5137,  5138,  5139,  5140,  5141,  5142,  5143,
    5144,  5145,  5146,  5147,  5151,  5152,  5156,  5156,  5161,  5162,
    5165,  5166,  5169,  5169,  5174,  5175,  5178,  5179,  5182,  5183,
    5186,  5186,  5191,  5197,  5206,  5207,  5216,  5221,  5222,  5242,
    5244,  5248,  5246,  5263,  5261,  5279,  5277,  5285,  5294,  5292,
    5310,  5309,  5316,  5327,  5325,  5344,  5343,  5355,  5365,  5366,
    5367,  5372,  5372,  5391,  5389,  5408,  5430,  5478,  5477,  5500,
    5517,  5500,  5524,  5528,  5554,  5555,  5558,  5559,  5565,  5572,
    5580,  5580,  5586,  5587,  5591,  5595,  5599,  5605,  5613,  5622,
    5623,  5624,  5625,  5626,  5627,  5628,  5629,  5630,  5631,  5632,
    5633,  5634,  5637,  5638,  5639,  5640,  5641,  5642,  5643,  5644,
    5645,  5649,  5650,  5651,  5652,  5655,  5657,  5658,  5661,  5662,
    5665,  5667,  5671,  5673,  5672,  5686,  5689,  5688,  5703,  5709,
    5722,  5724,  5727,  5729,  5733,  5734,  5747,  5764,  5766,  5770,
    5769,  5801,  5803,  5807,  5808,  5809,  5814,  5820,  5824,  5825,
    5829,  5833,  5840,  5847,  5856,  5857,  5858,  5859,  5864,  5868,
    5876,  5877,  5878,  5879,  5880,  5881,  5885,  5886,  5887,  5888,
    5889,  5892,  5895,  5894,  5923,  5924,  5927,  5928,  5931,  5944,
    5944,  5954,  5955,  5959,  5971,  6004,  6003,  6016,  6015,  6024,
    6036,  6047,  6046,  6063,  6070,  6070,  6081,  6088,  6100,  6112,
    6116,  6122,  6132,  6133,  6136,  6144,  6145,  6149,  6150,  6158,
    6167,  6157,  6177,  6184,  6176,  6194,  6206,  6207,  6208,  6212,
    6213,  6216,  6217,  6220,  6229,  6230,  6231,  6233,  6232,  6242,
    6243,  6246,  6247,  6248,  6248,  6249,  6249,  6253,  6254,  6257,
    6259,  6262,  6270,  6271,  6275,  6276,  6281,  6280,  6293,  6294,
    6297,  6302,  6310,  6311,  6314,  6316,  6316,  6324,  6333,  6323,
    6355,  6356,  6359,  6366,  6367,  6370,  6379,  6380,  6386,  6385,
    6399,  6398,  6407,  6406,  6414,  6413,  6423,  6424,  6427,  6434,
    6447,  6448,  6452,  6453,  6456,  6457,  6458,  6461,  6471,  6473,
    6478,  6477,  6491,  6499,  6508,  6517,  6526,  6536,  6535,  6538,
    6548,  6558,  6562,  6567,  6566,  6571,  6581,  6586,  6592,  6597,
    6602,  6604,  6606,  6608,  6610,  6619,  6621,  6623,  6625,  6634,
    6642,  6650,  6652,  6654,  6664,  6671,  6677,  6685,  6693,  6697,
    6701,  6708,  6715,  6725,  6735,  6745,  6758,  6772,  6785,  6786,
    6788,  6790,  6793,  6794,  6797,  6798,  6801,  6802,  6805,  6806,
    6809,  6810,  6812,  6814,  6817,  6829,  6828,  6843,  6842,  6852,
    6853,  6856,  6857,  6861,  6862,  6863,  6871,  6870,  6882,  6883,
    6886,  6886,  6887,  6888,  6889,  6890,  6891,  6892,  6893,  6894,
    6895,  6896,  6899,  6900,  6904,  6903,  6912,  6913,  6916,  6917,
    6918,  6922,  6921,  6930,  6934,  6939,  6951,  6951,  6959,  6960,
    6961,  6966,  6976,  6975,  6988,  7006,  7017,  7022,  7005,  7035,
    7044,  7045,  7048,  7049,  7061,  7065,  7066,  7067,  7069,  7071,
    7074,  7075,  7078,  7083,  7090,  7095,  7101,  7103,  7106,  7107,
    7110,  7115,  7121,  7123,  7130,  7131,  7132,  7135,  7137,  7142,
    7143,  7148,  7149,  7155,  7160,  7162,  7164,  7169,  7171,  7182,
    7195,  7215,  7216,  7217,  7226,  7227,  7228,  7230,  7231,  7232,
    7233,  7234,  7248,  7262,  7263,  7264,  7267,  7268,  7269,  7270,
    7278,  7293,  7294,  7297,  7303,  7314,  7317,  7351,  7355,  7363,
    7367,  7435,  7450,  7474,  7475,  7491,  7501,  7504,  7505,  7506,
    7510,  7514,  7515,  7540,  7552,  7565,  7577,  7578,  7587,  7588,
    7597,  7598,  7599,  7602,  7615,  7628,  7642,  7643,  7644,  7645,
    7646,  7647,  7648,  7649,  7650,  7651,  7652,  7653,  7654,  7655,
    7656,  7657,  7658,  7659,  7660,  7661,  7662,  7663,  7664,  7665,
    7666,  7667,  7668,  7669,  7670,  7671,  7672,  7673,  7674,  7675,
    7676,  7677,  7678,  7688,  7689,  7690,  7691,  7692,  7693,  7694,
    7695,  7696,  7697,  7698,  7699,  7700,  7701,  7702,  7703,  7704,
    7705,  7706,  7707,  7708,  7709,  7710,  7711,  7712,  7713,  7714,
    7715,  7716,  7717,  7718,  7719,  7720,  7721,  7722,  7723,  7724,
    7725,  7726,  7727,  7728,  7729,  7730,  7731,  7732,  7733,  7734,
    7735,  7736,  7737,  7738,  7739,  7740,  7741,  7742,  7743,  7744,
    7745,  7746,  7747,  7748,  7749,  7750,  7751,  7752,  7753,  7754,
    7755,  7756,  7757,  7758,  7759,  7760,  7761,  7762,  7763,  7764,
    7765,  7766,  7767,  7768,  7769,  7770,  7771,  7772,  7773,  7774,
    7775,  7776,  7777,  7778,  7779,  7780,  7781,  7782,  7783,  7784,
    7785,  7786,  7787,  7788,  7789,  7790,  7791,  7792,  7793,  7794,
    7795,  7796,  7797,  7798,  7799,  7800,  7801,  7802,  7803,  7804,
    7805,  7806,  7807,  7808,  7809,  7810,  7811,  7812,  7813,  7814,
    7815,  7816,  7817,  7818,  7819,  7820,  7821,  7822,  7823,  7824,
    7825,  7826,  7827,  7828,  7829,  7830,  7831,  7832,  7833,  7834,
    7835,  7836,  7837,  7838,  7839,  7840,  7841,  7842,  7843,  7844,
    7845,  7846,  7847,  7848,  7849,  7850,  7851,  7852,  7853,  7854,
    7855,  7856,  7857,  7858,  7859,  7860,  7861,  7862,  7863,  7864,
    7865,  7866,  7867,  7868,  7869,  7870,  7871,  7872,  7873,  7874,
    7875,  7876,  7877,  7878,  7879,  7880,  7881,  7882,  7883,  7884,
    7885,  7886,  7887,  7888,  7889,  7890,  7891,  7892,  7893,  7894,
    7895,  7896,  7897,  7898,  7899,  7906,  7905,  7919,  7920,  7923,
    7924,  7927,  7927,  7999,  8000,  8001,  8002,  8006,  8007,  8011,
    8012,  8013,  8014,  8018,  8019,  8020,  8021,  8025,  8026,  8029,
    8109,  8122,  8126,  8131,  8138,  8153,  8166,  8187,  8194,  8232,
    8275,  8289,  8290,  8291,  8292,  8296,  8297,  8304,  8313,  8314,
    8315,  8316,  8317,  8325,  8324,  8340,  8341,  8344,  8345,  8348,
    8356,  8357,  8358,  8359,  8364,  8363,  8384,  8396,  8409,  8408,
    8427,  8428,  8432,  8433,  8437,  8438,  8439,  8440,  8442,  8441,
    8452,  8453,  8454,  8455,  8456,  8462,  8467,  8474,  8487,  8499,
    8506,  8511,  8519,  8532,  8546,  8548,  8551,  8552,  8559,  8561,
    8565,  8566,  8569,  8569,  8570,  8570,  8571,  8571,  8572,  8572,
    8573,  8574,  8575,  8576,  8577,  8578,  8579,  8580,  8581,  8582,
    8583,  8584,  8585,  8586,  8587,  8588,  8589,  8590,  8591,  8592,
    8593,  8594,  8595,  8600,  8601,  8605,  8606,  8610,  8620,  8630,
    8643,  8658,  8671,  8684,  8696,  8697,  8706,  8707,  8716,  8741,
    8743,  8750,  8754,  8757,  8758,  8761,  8782,  8783,  8787,  8791,
    8795,  8802,  8803,  8806,  8807,  8811,  8812,  8818,  8824,  8830,
    8840,  8839,  8849,  8850,  8854,  8855,  8856,  8860,  8861,  8862,
    8866,  8867,  8871,  8881,  8888,  8898,  8907,  8921,  8922,  8927,
    8926,  8961,  8962,  8963,  8967,  8967,  8991,  8992,  8996,  8997,
    8998,  9002,  9007,  9006,  9027,  9033,  9053,  9069,  9071,  9076,
    9078,  9080,  9092,  9102,  9115,  9117,  9119,  9124,  9129,  9131,
    9133,  9139,  9140,  9146,  9147,  9149,  9155,  9154,  9169,  9170,
    9174,  9179,  9187,  9187,  9205,  9214,  9227,  9228,  9230,  9232,
    9245,  9243,  9318,  9317,  9327,  9356,  9363,  9370,  9326,  9392,
    9396,  9400,  9404,  9408,  9412,  9418,  9425,  9432,  9441,  9442,
    9446,  9447,  9448,  9452,  9453,  9457,  9458,  9458,  9463,  9464
};
#endif

#if YYDEBUG || YYERROR_VERBOSE
/* YYTNME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "END_OF_INPUT", "ABORT_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "ATAN",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BENCHMARK_SYM", "BERKELEY_DB_SYM", "BIGINT", "BINARY",
  "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR",
  "BLOB_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY",
  "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CAST_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPRESSED_SYM", "CONCAT", "CONCAT_WS", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT", "CONTAINS_SYM",
  "CONTINUE_SYM", "CONVERT_SYM", "CONVERT_TZ_SYM", "COUNT_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_USER", "CURSOR_SYM", "CURTIME",
  "DATABASE", "DATABASES", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DECODE_SYM", "DEFAULT",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_DECRYPT_SYM", "DES_ENCRYPT_SYM", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSEIF_SYM",
  "ELT_FUNC", "ENABLE_SYM", "ENCLOSED", "ENCODE_SYM", "ENCRYPT", "END",
  "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM", "ERRORS",
  "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPORT_SET", "EXTENDED_SYM", "EXTRACT_SYM",
  "FALSE_SYM", "FAST_SYM", "FETCH_SYM", "FIELD_FUNC", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FORCE_SYM", "FOREIGN", "FORMAT_SYM", "FOR_SYM", "FOUND_SYM",
  "FRAC_SECOND_SYM", "FROM", "FROM_UNIXTIME", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "FUNC_ARG0", "FUNC_ARG1", "FUNC_ARG2", "FUNC_ARG3", "GE",
  "GEOMCOLLFROMTEXT", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GEOMFROMTEXT",
  "GEOMFROMWKB", "GET_FORMAT", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GREATEST_SYM", "GROUP", "GROUP_CONCAT_SYM", "GROUP_UNIQUE_USERS",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INNOBASE_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT",
  "INSERT_METHOD", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "KEYS", "KEY_SYM", "KILL_SYM", "LABEL_SYM", "LANGUAGE_SYM",
  "LAST_INSERT_ID", "LAST_SYM", "LE", "LEADING", "LEAST_SYM", "LEAVES",
  "LEAVE_SYM", "LEFT", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEFROMTEXT", "LINES", "LINESTRING", "LOAD", "LOCAL_SYM", "LOCATE",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGS_SYM", "LOG_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MAKE_SET_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_POS_WAIT",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MATCH",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SYM", "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MERGE_SYM",
  "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM",
  "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS", "MIN_SYM",
  "MLINEFROMTEXT", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MPOINTFROMTEXT", "MPOLYFROMTEXT", "MULTILINESTRING",
  "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM", "NAMES_SYM", "NAME_SYM",
  "NATIONAL_SYM", "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM",
  "NE", "NEW_SYM", "NEXT_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM",
  "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM", "OJ_SYM", "OLD_PASSWORD",
  "ON", "ONE_SHOT_SYM", "ONE_SYM", "OPEN_SYM", "OPTIMIZE", "OPTION",
  "OPTIONALLY", "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER",
  "OUTFILE", "OUT_SYM", "PACK_KEYS_SYM", "PARTIAL", "PASSWORD",
  "PARAM_MARKER", "PHASE_SYM", "POINTFROMTEXT", "POINT_SYM",
  "POLYFROMTEXT", "POLYGON", "POSITION_SYM", "PRECISION", "PREPARE_SYM",
  "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE", "PROCESS",
  "PROCESSLIST_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK",
  "RAID_0_SYM", "RAID_CHUNKS", "RAID_CHUNKSIZE", "RAID_STRIPED_SYM",
  "RAID_TYPE", "RAND", "READS_SYM", "READ_SYM", "REAL", "RECOVER_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "RENAME",
  "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE", "REPLICATION",
  "REQUIRE_SYM", "RESET_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNS_SYM", "RETURN_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUND", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_COUNT_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SET", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE",
  "SMALLINT", "SNAPSHOT_SYM", "SOUNDS_SYM", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STARTING", "START_SYM", "STATUS_SYM", "STD_SYM",
  "STDDEV_SAMP_SYM", "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN",
  "STRING_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBSTRING",
  "SUBSTRING_INDEX", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SYSDATE",
  "TABLES", "TABLESPACE", "TABLE_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB", "TINYINT", "TINYTEXT",
  "TO_SYM", "TRAILING", "TRANSACTION_SYM", "TRIGGER_SYM", "TRIGGERS_SYM",
  "TRIM", "TRUE_SYM", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UDF_SONAME_SYM", "ULONGLONG_NUM", "UNCOMMITTED_SYM",
  "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNICODE_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNIQUE_USERS", "UNIX_TIMESTAMP",
  "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM",
  "UPGRADE_SYM", "USAGE", "USER", "USE_FRM", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VAR_SAMP_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VIEW_SYM", "WARNINGS", "WEEK_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WORK_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XOR", "YEARWEEK", "YEAR_MONTH_SYM", "YEAR_SYM",
  "ZEROFILL", "TABLE_REF_PRIORITY", "ELSE", "THEN_SYM", "CASE_SYM",
  "BETWEEN_SYM", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'",
  "'~'", "NEG", "'('", "')'", "','", "'!'", "'{'", "'}'", "'@'", "'.'",
  "';'", "':'", "$accept", "query", "verb_clause", "statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "@1", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "@2", "change", "@3", "master_defs", "master_def", "master_file_def",
  "create", "@4", "@5", "@6", "@7", "clear_privileges", "sp_name",
  "create_function_tail", "@8", "@9", "@10", "@11", "@12", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "@13",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "@14", "@15", "sp_cursor_stmt",
  "@16", "sp_handler_type", "sp_hcond_list", "sp_cond", "opt_value",
  "sp_hcond", "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "@17",
  "@18", "@19", "@20", "@21", "@22", "@23", "@24", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "@25", "@26", "@27", "sp_elseifs", "sp_case",
  "@28", "@29", "@30", "sp_whens", "sp_labeled_control", "@31",
  "sp_opt_label", "sp_unlabeled_control", "@32", "@33", "@34", "@35",
  "trg_action_time", "trg_event", "create2", "create2a", "@36", "create3",
  "@37", "@38", "create_select", "@39", "@40", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_table_options", "table_options",
  "table_option", "opt_if_not_exists", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "default_charset", "default_collation",
  "storage_engines", "row_types", "raid_types", "merge_insert_types",
  "opt_select_from", "udf_func_type", "udf_type", "field_list",
  "field_list_item", "column_def", "key_def", "opt_check_constraint",
  "check_constraint", "opt_constraint", "constraint", "field_spec", "@41",
  "type", "@42", "@43", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "float_options", "precision",
  "field_options", "field_opt_list", "field_option", "opt_len",
  "opt_precision", "opt_attribute", "opt_attribute_list", "attribute",
  "now_or_signed_literal", "charset", "charset_name",
  "charset_name_or_default", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "collation_name_or_default", "opt_default", "opt_binary", "opt_bin_mod",
  "opt_bin_charset", "opt_primary", "references", "@44", "opt_ref_list",
  "ref_list", "opt_on_delete", "opt_on_delete_list", "opt_on_delete_item",
  "delete_option", "key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_or_fulltext", "key_alg",
  "opt_btree_or_rtree", "key_list", "key_part", "opt_ident",
  "opt_component", "string_list", "alter", "@45", "@46", "@47", "@48",
  "@49", "ident_or_empty", "alter_list", "add_column", "alter_list_item",
  "@50", "@51", "@52", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "@53", "@54", "start",
  "start_transaction_opts", "slave_thread_opts", "@55",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "restore", "@56", "backup", "@57", "checksum", "@58",
  "opt_checksum_type", "repair", "@59", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@60", "check", "@61",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "@62", "opt_no_write_to_binlog", "rename", "@63", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "keycache_list",
  "assign_to_keycache", "key_cache_name", "preload", "@64", "preload_list",
  "preload_keys", "cache_keys_spec", "@65", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "select_paren",
  "select_init2", "@66", "select_part2", "@67", "@68", "select_into",
  "select_from", "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_item2", "select_alias", "optional_braces",
  "expr", "@69", "bool_or_expr", "bool_term", "@70", "bool_and_expr",
  "bool_factor", "bool_test", "bool_pri", "predicate", "bit_expr",
  "bit_term", "bit_factor", "value_expr", "term", "factor", "or", "and",
  "not", "not2", "comp_op", "all_or_any", "interval_expr", "simple_expr",
  "@71", "geometry_function", "fulltext_options", "udf_expr_list",
  "udf_expr_list2", "@72", "udf_expr_list3", "udf_expr", "sum_expr", "@73",
  "@74", "@75", "variable", "@76", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "in_sum_expr", "@77",
  "cast_type", "opt_expr_list", "expr_list", "@78", "expr_list2",
  "ident_list_arg", "ident_list", "@79", "ident_list2", "opt_expr",
  "opt_else", "when_list", "@80", "when_list2", "table_ref",
  "join_table_list", "derived_table_list", "join_table", "@81", "@82",
  "@83", "@84", "@85", "@86", "@87", "normal_join", "table_factor", "@88",
  "@89", "select_derived", "@90", "select_derived2", "@91", "@92",
  "get_select_lex", "select_derived_init", "opt_outer",
  "opt_key_definition", "key_usage_list", "@93", "key_list_or_empty",
  "key_usage_list2", "using_list", "interval", "interval_time_st",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "@94", "having_clause", "@95", "opt_escape",
  "group_clause", "group_list", "olap_opt", "opt_order_clause",
  "order_clause", "@96", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "ulonglong_num", "procedure_clause", "@97", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@98",
  "select_var_list", "select_var_ident", "into", "@99", "into_destination",
  "@100", "do", "@101", "drop", "@102", "table_list", "table_name",
  "if_exists", "opt_temporary", "insert", "@103", "@104", "replace",
  "@105", "@106", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "@107", "fields", "insert_values",
  "@108", "@109", "values_list", "ident_eq_list", "ident_eq_value",
  "equal", "opt_equal", "no_braces", "@110", "opt_values", "values",
  "expr_or_default", "opt_insert_update", "@111", "update", "@112", "@113",
  "update_list", "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "@114", "single_multi", "@115", "@116",
  "@117", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "opt_table_sym",
  "show", "@118", "show_param", "@119", "@120", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "wild_and_where", "describe", "@121", "@122",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "@123", "flush_options", "flush_option", "@124",
  "opt_table_list", "reset", "@125", "reset_options", "reset_option",
  "purge", "@126", "purge_options", "purge_option", "kill", "@127",
  "kill_option", "use", "load", "@128", "load_data", "@129", "@130",
  "@131", "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_ignore_lines", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "insert_ident", "table_wild", "order_ident",
  "simple_ident", "simple_ident_nospvar", "simple_ident_q", "field_ident",
  "table_ident", "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident", "label_ident",
  "ident_or_text", "user", "keyword", "keyword_sp", "set", "@132",
  "opt_option", "option_value_list", "option_type_value", "@133",
  "option_type", "option_type2", "opt_var_type", "opt_var_ident_type",
  "ext_option_value", "sys_option_value", "option_value",
  "internal_variable_name", "isolation_types", "text_or_password",
  "set_expr_or_default", "lock", "@134", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "@135",
  "handler", "@136", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "@137", "handler_rkey_mode", "revoke",
  "revoke_command", "grant", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "@138", "@139", "@140", "@141", "opt_and",
  "require_list", "require_list_element", "grant_ident", "user_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "grant_option_list",
  "grant_option", "begin", "@142", "opt_work", "opt_chain", "opt_release",
  "opt_savepoint", "commit", "rollback", "savepoint", "release",
  "union_clause", "union_list", "@143", "union_opt",
  "union_order_or_limit", "@144", "order_or_limit", "union_option",
  "subselect", "@145", "subselect_init", "subselect_start",
  "subselect_end", "view_or_trigger_or_sp", "view_or_trigger_or_sp_tail",
  "definer", "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_algorithm_opt", "view_suid", "view_tail", "@146", "view_list_opt",
  "view_list", "view_select", "@147", "view_select_aux",
  "view_check_option", "trigger_tail", "@148", "sp_tail", "@149", "@150",
  "@151", "@152", "@153", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@154",
  "opt_migrate", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const unsigned short int yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     124,    38,    45,    43,    42,    47,    37,    94,   126,   805,
      40,    41,    44,    33,   123,   125,    64,    46,    59,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const unsigned short int yyr1[] =
{
       0,   570,   571,   571,   572,   572,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   574,   575,   575,   576,   577,   577,   579,
     578,   580,   580,   581,   581,   582,   584,   583,   586,   585,
     587,   587,   588,   588,   588,   588,   588,   588,   588,   588,
     588,   588,   588,   588,   589,   589,   589,   589,   591,   590,
     592,   590,   593,   590,   594,   590,   590,   595,   596,   596,
     597,   598,   599,   600,   601,   602,   597,   603,   603,   604,
     604,   605,   605,   605,   605,   605,   605,   605,   606,   606,
     606,   607,   607,   609,   608,   610,   610,   611,   611,   612,
     612,   613,   613,   614,   614,   615,   616,   617,   617,   618,
     618,   619,   620,   620,   620,   620,   621,   621,   622,   622,
     623,   623,   625,   624,   624,   626,   624,   624,   628,   627,
     629,   629,   630,   630,   631,   631,   632,   632,   633,   633,
     633,   633,   633,   634,   634,   635,   635,   637,   636,   638,
     636,   639,   636,   640,   636,   641,   642,   636,   636,   643,
     636,   636,   636,   636,   644,   636,   636,   645,   645,   645,
     646,   646,   648,   649,   650,   647,   651,   651,   651,   653,
     654,   655,   652,   656,   656,   656,   658,   657,   659,   659,
     661,   660,   660,   662,   663,   660,   664,   660,   665,   665,
     666,   666,   666,   667,   667,   667,   667,   668,   669,   668,
     670,   671,   670,   672,   670,   674,   675,   673,   676,   676,
     677,   677,   678,   678,   679,   679,   680,   680,   681,   681,
     682,   683,   683,   684,   684,   685,   685,   686,   686,   686,
     687,   687,   687,   687,   687,   687,   687,   687,   687,   687,
     687,   687,   687,   687,   687,   687,   687,   687,   687,   687,
     687,   687,   687,   688,   689,   690,   691,   691,   691,   691,
     691,   691,   692,   692,   692,   693,   693,   693,   694,   694,
     695,   695,   696,   696,   696,   696,   697,   697,   698,   698,
     699,   699,   700,   700,   700,   700,   700,   701,   701,   702,
     703,   703,   704,   706,   705,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     708,   707,   709,   707,   707,   707,   710,   710,   710,   710,
     710,   710,   710,   710,   711,   712,   712,   713,   713,   714,
     714,   714,   714,   714,   715,   715,   715,   715,   715,   716,
     716,   716,   717,   717,   717,   718,   719,   719,   720,   720,
     721,   721,   721,   722,   722,   723,   723,   724,   724,   725,
     725,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   727,   727,   728,   728,   729,   729,   730,   730,
     731,   731,   732,   732,   733,   734,   734,   735,   735,   736,
     736,   737,   737,   737,   737,   737,   737,   738,   738,   739,
     739,   739,   739,   740,   740,   742,   741,   743,   743,   744,
     744,   745,   745,   746,   746,   747,   747,   747,   747,   747,
     748,   748,   748,   748,   748,   749,   749,   749,   750,   750,
     751,   751,   752,   752,   753,   753,   753,   754,   754,   754,
     754,   755,   755,   755,   756,   756,   756,   757,   757,   758,
     758,   759,   759,   760,   760,   761,   761,   763,   762,   764,
     762,   765,   762,   766,   762,   767,   762,   768,   768,   769,
     769,   769,   769,   769,   770,   771,   771,   771,   772,   771,
     773,   774,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   775,   775,   776,   776,
     777,   777,   777,   778,   778,   778,   779,   779,   779,   779,
     781,   780,   780,   782,   780,   780,   783,   784,   784,   786,
     785,   787,   787,   788,   788,   788,   789,   789,   790,   790,
     792,   791,   794,   793,   796,   795,   797,   797,   797,   799,
     798,   800,   800,   801,   801,   802,   802,   802,   804,   803,
     806,   805,   807,   807,   808,   808,   809,   809,   809,   809,
     809,   809,   811,   810,   812,   812,   812,   814,   813,   813,
     815,   815,   816,   816,   817,   818,   819,   819,   820,   821,
     821,   823,   822,   824,   824,   825,   827,   826,   828,   828,
     829,   829,   830,   831,   831,   832,   832,   834,   833,   836,
     837,   835,   838,   838,   838,   838,   838,   839,   839,   840,
     840,   841,   841,   842,   842,   842,   842,   842,   842,   842,
     842,   842,   842,   843,   843,   843,   844,   844,   844,   845,
     846,   847,   848,   848,   849,   849,   849,   849,   849,   850,
     850,   852,   851,   853,   853,   854,   855,   854,   856,   856,
     857,   857,   858,   858,   858,   858,   858,   858,   858,   859,
     859,   859,   859,   859,   859,   860,   860,   860,   860,   860,
     860,   860,   860,   860,   860,   860,   860,   860,   860,   861,
     861,   862,   862,   863,   863,   863,   864,   864,   864,   864,
     864,   865,   865,   865,   865,   865,   865,   866,   866,   867,
     867,   868,   868,   869,   869,   870,   870,   871,   871,   871,
     871,   871,   871,   872,   872,   873,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   875,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   877,   877,   877,
     878,   878,   880,   879,   881,   881,   882,   883,   883,   883,
     883,   883,   883,   883,   884,   885,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   886,   883,
     888,   887,   889,   889,   889,   890,   890,   891,   891,   892,
     892,   894,   893,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   896,   896,   898,   897,   899,   899,
     900,   900,   902,   901,   903,   903,   904,   904,   905,   905,
     907,   906,   908,   908,   909,   909,   910,   911,   911,   912,
     912,   913,   912,   914,   912,   915,   912,   912,   916,   912,
     917,   912,   912,   918,   912,   919,   912,   912,   920,   920,
     920,   922,   921,   923,   921,   921,   921,   925,   924,   927,
     928,   926,   929,   930,   931,   931,   932,   932,   932,   932,
     934,   933,   935,   935,   936,   936,   936,   937,   937,   938,
     938,   938,   938,   938,   938,   938,   938,   938,   938,   938,
     938,   938,   939,   939,   939,   939,   939,   939,   939,   939,
     939,   940,   940,   940,   940,   941,   941,   941,   942,   942,
     943,   943,   944,   945,   944,   946,   947,   946,   948,   948,
     949,   949,   950,   950,   951,   951,   951,   952,   952,   954,
     953,   955,   955,   956,   956,   956,   957,   957,   958,   958,
     959,   960,   960,   960,   961,   961,   961,   961,   962,   962,
     963,   963,   963,   963,   963,   963,   964,   964,   964,   964,
     964,   965,   966,   965,   967,   967,   968,   968,   969,   971,
     970,   972,   972,   973,   973,   975,   974,   977,   976,   976,
     976,   979,   978,   980,   981,   980,   980,   980,   980,   980,
     980,   980,   982,   982,   983,   984,   984,   985,   985,   987,
     988,   986,   990,   991,   989,   992,   992,   992,   992,   993,
     993,   994,   994,   995,   996,   996,   996,   997,   996,   998,
     998,   999,   999,  1000,   999,  1001,   999,  1002,  1002,  1003,
    1003,  1004,  1005,  1005,  1006,  1006,  1008,  1007,  1009,  1009,
    1010,  1010,  1011,  1011,  1012,  1013,  1012,  1015,  1016,  1014,
    1017,  1017,  1018,  1019,  1019,  1020,  1021,  1021,  1023,  1022,
    1025,  1024,  1026,  1024,  1027,  1024,  1028,  1028,  1029,  1029,
    1030,  1030,  1031,  1031,  1032,  1032,  1032,  1033,  1034,  1034,
    1036,  1035,  1037,  1037,  1037,  1037,  1037,  1038,  1037,  1037,
    1037,  1037,  1037,  1039,  1037,  1037,  1037,  1037,  1037,  1037,
    1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,
    1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,  1037,
    1037,  1037,  1037,  1037,  1037,  1037,  1040,  1040,  1041,  1041,
    1042,  1042,  1043,  1043,  1044,  1044,  1045,  1045,  1046,  1046,
    1047,  1047,  1048,  1048,  1048,  1050,  1049,  1051,  1049,  1052,
    1052,  1053,  1053,  1054,  1054,  1054,  1056,  1055,  1057,  1057,
    1059,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,
    1058,  1058,  1060,  1060,  1062,  1061,  1063,  1063,  1064,  1064,
    1064,  1066,  1065,  1067,  1068,  1068,  1070,  1069,  1071,  1071,
    1071,  1072,  1074,  1073,  1073,  1076,  1077,  1078,  1075,  1075,
    1079,  1079,  1080,  1080,  1080,  1081,  1081,  1081,  1082,  1082,
    1083,  1083,  1084,  1084,  1084,  1084,  1085,  1085,  1086,  1086,
    1087,  1087,  1088,  1088,  1089,  1089,  1089,  1090,  1090,  1091,
    1091,  1092,  1092,  1093,  1093,  1093,  1093,  1094,  1094,  1094,
    1095,  1096,  1096,  1096,  1097,  1097,  1097,  1097,  1097,  1097,
    1097,  1097,  1097,  1097,  1097,  1097,  1098,  1098,  1098,  1098,
    1098,  1099,  1099,  1100,  1100,  1101,  1102,  1102,  1103,  1103,
    1104,  1104,  1104,  1105,  1105,  1105,  1105,  1106,  1106,  1106,
    1107,  1108,  1108,  1109,  1110,  1111,  1112,  1112,  1113,  1113,
    1114,  1114,  1114,  1115,  1115,  1115,  1116,  1116,  1116,  1116,
    1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,
    1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,
    1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,  1116,
    1116,  1116,  1116,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1119,  1118,  1120,  1120,  1121,
    1121,  1123,  1122,  1124,  1124,  1124,  1124,  1125,  1125,  1126,
    1126,  1126,  1126,  1127,  1127,  1127,  1127,  1128,  1128,  1129,
    1129,  1130,  1130,  1130,  1130,  1130,  1130,  1130,  1131,  1131,
    1131,  1132,  1132,  1132,  1132,  1133,  1133,  1133,  1134,  1134,
    1134,  1134,  1134,  1136,  1135,  1137,  1137,  1138,  1138,  1139,
    1140,  1140,  1140,  1140,  1142,  1141,  1143,  1143,  1144,  1143,
    1145,  1145,  1146,  1146,  1147,  1147,  1147,  1147,  1148,  1147,
    1149,  1149,  1149,  1149,  1149,  1150,  1151,  1151,  1151,  1151,
    1152,  1153,  1153,  1153,  1154,  1154,  1155,  1155,  1156,  1156,
    1157,  1157,  1159,  1158,  1160,  1158,  1161,  1158,  1162,  1158,
    1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,
    1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,  1158,
    1158,  1158,  1158,  1163,  1163,  1164,  1164,  1165,  1165,  1165,
    1166,  1166,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,
    1169,  1170,  1170,  1171,  1171,  1172,  1173,  1173,  1173,  1173,
    1173,  1174,  1174,  1175,  1175,  1176,  1176,  1176,  1176,  1176,
    1178,  1177,  1179,  1179,  1180,  1180,  1180,  1181,  1181,  1181,
    1182,  1182,  1183,  1184,  1184,  1185,  1186,  1187,  1187,  1189,
    1188,  1190,  1190,  1190,  1192,  1191,  1193,  1193,  1194,  1194,
    1194,  1195,  1196,  1195,  1197,  1198,  1199,  1200,  1200,  1201,
    1201,  1201,  1202,  1202,  1203,  1203,  1203,  1204,  1205,  1205,
    1205,  1206,  1206,  1207,  1207,  1207,  1209,  1208,  1210,  1210,
    1211,  1211,  1213,  1212,  1214,  1214,  1215,  1215,  1215,  1215,
    1217,  1216,  1219,  1218,  1220,  1221,  1222,  1223,  1218,  1224,
    1224,  1224,  1224,  1224,  1224,  1225,  1225,  1225,  1226,  1226,
    1227,  1227,  1227,  1228,  1228,  1229,  1230,  1229,  1231,  1231
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const unsigned char yyr2[] =
{
       0,     2,     1,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     4,     1,     2,     0,
       4,     0,     2,     3,     1,     2,     0,     3,     0,     5,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     1,     3,     3,     3,     3,     0,     7,
       0,    11,     0,     6,     0,     3,     4,     0,     3,     1,
       4,     0,     0,     0,     0,     0,    12,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     0,     4,     0,     3,     0,     1,     3,
       1,     0,     1,     3,     1,     0,     3,     0,     1,     3,
       1,     4,     0,     1,     1,     1,     0,     3,     2,     3,
       0,     3,     0,     5,     5,     0,     7,     5,     0,     2,
       1,     1,     1,     3,     1,     3,     0,     1,     1,     1,
       1,     2,     1,     1,     3,     0,     2,     0,     2,     0,
       3,     0,     5,     0,     6,     0,     0,     8,     1,     0,
       2,     2,     2,     2,     0,     6,     2,     0,     2,     1,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     0,
       0,     0,     7,     0,     2,     2,     0,     5,     0,     1,
       0,     5,     4,     0,     0,     8,     0,     7,     1,     1,
       1,     1,     1,     2,     2,     2,     4,     4,     0,     4,
       0,     0,     5,     0,     7,     0,     0,     6,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     1,     1,     2,
       1,     0,     3,     0,     1,     1,     2,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     1,     1,     3,
       4,     4,     3,     4,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       2,     2,     6,     7,     8,     2,     2,     0,     1,     2,
       0,     1,     2,     0,     4,     3,     3,     3,     1,     4,
       1,     1,     5,     2,     5,     2,     4,     1,     5,     5,
       4,     3,     1,     1,     2,     1,     1,     2,     1,     1,
       1,     2,     3,     2,     3,     2,     2,     3,     3,     3,
       0,     6,     0,     6,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     0,     3,     1,     5,     0,     1,     2,     1,
       1,     1,     1,     0,     3,     0,     1,     0,     1,     2,
       1,     1,     2,     2,     4,     1,     3,     2,     1,     2,
       2,     2,     2,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     0,
       1,     0,     2,     1,     2,     3,     2,     0,     1,     0,
       1,     1,     2,     0,     1,     0,     4,     1,     4,     3,
       1,     0,     1,     2,     1,     3,     3,     2,     2,     2,
       1,     1,     2,     2,     2,     1,     2,     2,     2,     2,
       1,     1,     0,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     1,     1,     1,     4,     2,     1,
       4,     0,     1,     0,     2,     1,     3,     0,     6,     0,
       5,     0,     5,     0,     5,     0,    11,     0,     1,     0,
       2,     2,     1,     3,     2,     3,     2,     4,     0,     6,
       0,     0,     8,     4,     4,     3,     3,     2,     2,     6,
       5,     3,     5,     1,     1,     1,     0,     1,     0,     1,
       0,     1,     1,     0,     2,     1,     0,     1,     1,     1,
       0,     5,     3,     0,     5,     3,     3,     0,     3,     0,
       2,     1,     3,     0,     1,     1,     0,     2,     1,     3,
       0,     6,     0,     6,     0,     5,     0,     1,     1,     0,
       6,     0,     1,     1,     2,     1,     1,     1,     0,     6,
       0,     5,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     0,     6,     0,     1,     1,     0,     4,     4,
       3,     5,     1,     3,     3,     5,     1,     3,     2,     1,
       1,     0,     6,     1,     3,     3,     0,     2,     0,     4,
       0,     2,     1,     2,     4,     2,     3,     0,     3,     0,
       0,     6,     2,     1,     1,     2,     2,     8,     4,     0,
       1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     2,     4,     3,     1,     1,     4,
       0,     0,     1,     1,     0,     2,     2,     1,     1,     0,
       2,     0,     3,     0,     3,     3,     0,     3,     0,     3,
       2,     1,     3,     4,     3,     4,     3,     4,     1,     3,
       4,     3,     3,     6,     1,     5,     6,     5,     7,     6,
       8,     5,     6,     4,     4,     5,     3,     4,     1,     3,
       1,     3,     1,     3,     3,     1,     3,     3,     4,     4,
       1,     3,     3,     3,     3,     3,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     1,     3,     1,     1,
       1,     1,     3,     2,     2,     2,     2,     3,     3,     5,
       6,     4,     4,     7,     4,     2,     6,     6,     6,     6,
       4,     4,     3,     4,     6,     8,     6,     8,     6,     4,
       6,     4,     6,     4,     4,     4,     4,     6,     8,     2,
       2,     4,     2,     7,     7,     3,     4,     4,     6,     6,
       4,     6,     6,     6,     4,     6,     4,     6,     8,    10,
      12,     6,     4,     6,     6,     1,     6,     4,     8,    10,
       4,     1,     3,     4,     6,     6,     8,     6,     6,     4,
       6,     6,     8,     4,     4,     6,     4,     2,     4,     4,
       4,     6,     4,     4,     3,     8,     6,     4,     6,     3,
       6,     8,     4,     8,     6,     8,     6,     8,     2,     4,
       4,     4,     6,     8,     8,     4,     7,     7,     7,     6,
       6,     6,     6,     6,     6,     0,     5,    10,     3,     4,
       3,     2,     2,     2,     4,     6,     4,     4,     6,     6,
       6,     6,     4,     6,     4,     6,     4,     4,     4,     4,
       6,     4,     6,     4,     6,     4,     4,     6,     4,     6,
       4,     6,     4,     4,     6,     4,     6,     0,     3,     3,
       0,     1,     0,     2,     1,     3,     4,     4,     5,     4,
       4,     4,     5,     4,     0,     0,     7,    10,     4,     5,
       4,     5,     4,     4,     4,     4,     4,     5,     0,     8,
       0,     3,     3,     1,     4,     0,     1,     0,     2,     0,
       1,     0,     3,     2,     3,     2,     1,     2,     1,     2,
       1,     1,     1,     2,     0,     1,     0,     2,     1,     3,
       1,     3,     0,     2,     1,     3,     0,     1,     0,     2,
       0,     2,     3,     5,     1,     1,     1,     1,     3,     3,
       3,     0,     6,     0,     6,     0,     8,     4,     0,     8,
       0,    10,     6,     0,     8,     0,    10,     6,     1,     2,
       2,     0,     4,     0,    11,     3,     6,     0,     3,     0,
       0,     5,     0,     1,     0,     1,     0,     2,     2,     2,
       0,     5,     0,     1,     3,     1,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     0,     2,
       0,     1,     0,     0,     3,     0,     0,     3,     2,     0,
       0,     4,     4,     2,     0,     2,     2,     0,     1,     0,
       4,     4,     2,     0,     1,     1,     0,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     0,     6,     0,     1,     3,     1,     2,     0,
       2,     3,     1,     2,     1,     0,     3,     0,     5,     2,
       1,     0,     3,     6,     0,     6,     4,     4,     4,     4,
       5,     4,     1,     3,     1,     0,     2,     0,     1,     0,
       0,     8,     0,     0,     6,     0,     1,     1,     1,     1,
       1,     2,     1,     1,     1,     3,     4,     0,     3,     3,
       1,     2,     2,     0,     3,     0,     5,     3,     1,     3,
       1,     3,     1,     1,     0,     1,     0,     4,     0,     1,
       3,     1,     1,     1,     0,     0,     6,     0,     0,    11,
       3,     1,     3,     3,     1,     3,     0,     1,     0,     4,
       0,     6,     0,     5,     0,     6,     1,     3,     3,     5,
       0,     2,     0,     2,     1,     1,     1,     3,     0,     1,
       0,     3,     2,     4,     4,     4,     4,     0,     4,     6,
      16,     2,     2,     0,     6,     5,     2,     2,     2,     1,
       5,     5,     2,     2,     3,     2,     2,     2,     3,     2,
       2,     2,     1,     1,     3,     4,     3,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     2,     2,     0,     4,     0,     4,     1,
       1,     0,     1,     0,     1,     1,     0,     4,     3,     1,
       0,     3,     4,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     3,     3,     1,     1,     1,
       2,     0,     3,     3,     2,     2,     0,     4,     0,     1,
       1,     2,     0,     4,     5,     0,     0,     0,    16,     2,
       0,     1,     0,     1,     1,     0,     1,     1,     0,     2,
       2,     1,     3,     4,     3,     3,     0,     2,     2,     1,
       3,     3,     0,     3,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     1,
       3,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     0,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     0,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     1,     2,     4,
       5,     4,     6,     2,     3,     3,     3,     5,     1,     3,
       3,     2,     2,     2,     1,     1,     4,     4,     1,     1,
       1,     1,     1,     0,     4,     1,     1,     1,     3,     3,
       1,     1,     2,     2,     0,     3,     4,     3,     0,     7,
       1,     2,     1,     1,     1,     1,     1,     1,     0,     5,
       1,     1,     1,     1,     1,     3,     6,     6,     6,     7,
       3,     8,     8,     8,     0,     1,     1,     2,     0,     1,
       1,     3,     0,     3,     0,     3,     0,     3,     0,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     4,     5,
       1,     0,     3,     3,     1,     1,     0,     2,     2,     2,
       2,     0,     2,     2,     1,     2,     2,     2,     2,     2,
       0,     3,     0,     1,     0,     3,     2,     0,     1,     2,
       0,     1,     4,     4,     5,     2,     3,     0,     1,     0,
       4,     0,     1,     1,     0,     2,     2,     1,     0,     1,
       1,     4,     0,     7,     1,     0,     0,     2,     3,     1,
       1,     1,     0,     3,     1,     2,     1,     2,     3,     3,
       3,     0,     1,     0,     3,     3,     0,     8,     0,     3,
       1,     3,     0,     2,     3,     5,     0,     3,     4,     4,
       0,    14,     0,     6,     0,     0,     0,     0,    12,     4,
       4,     3,     4,     3,     2,     1,     3,     5,     1,     1,
       0,     1,     1,     0,     2,     0,     0,     3,     0,     2
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const unsigned short int yydefact[] =
{
       0,     2,  1961,   624,     0,  1910,     0,     0,     0,     0,
       0,  1912,    94,    54,  1258,  1349,  1350,  1181,  1197,     0,
     624,    97,     0,    66,  1199,  1386,     0,     0,   624,     0,
    1381,     0,     0,   624,  1202,  1374,     0,    97,  1912,     0,
     659,  1747,  1280,     0,     0,     0,  1278,  1804,  1247,     0,
       0,     0,     0,     0,     4,    15,     0,    32,    20,    24,
      10,    14,     9,     6,    46,    47,    39,     8,    12,    36,
       7,    11,    29,    35,    30,    31,    43,   652,    18,    19,
      25,    37,    50,    16,    48,    45,    17,  1351,    21,    38,
      33,    26,    51,    27,    44,    28,    49,    23,    40,    22,
       5,    13,    41,    42,    34,    52,     0,   527,     0,   559,
       0,     0,  1962,  1952,   626,   625,     0,  1796,  1795,   592,
    1912,     0,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1497,
    1540,  1541,  1542,  1498,  1499,  1543,  1544,  1545,  1547,  1546,
    1548,  1500,  1501,  1549,  1550,  1551,  1502,  1503,  1552,  1553,
    1504,  1554,  1555,  1556,  1505,  1557,  1506,  1558,  1559,  1560,
    1561,  1507,  1562,  1563,  1564,  1565,  1566,  1508,  1567,  1568,
    1569,  1570,  1585,  1571,  1509,  1572,  1573,  1574,  1586,  1510,
    1577,  1576,  1575,  1578,  1579,  1580,  1511,  1581,  1582,  1583,
    1588,  1589,  1590,  1512,  1584,  1591,  1587,  1730,  1593,  1592,
    1594,  1596,  1595,  1513,  1597,  1514,  1598,  1599,  1481,  1600,
    1482,  1602,  1603,  1606,  1607,  1601,  1604,  1605,  1515,  1609,
    1610,  1611,  1612,  1613,  1614,  1615,  1625,  1618,  1620,  1621,
    1623,  1619,  1624,  1628,  1627,  1629,  1630,  1631,  1626,  1617,
    1622,  1632,  1633,  1616,  1634,  1635,  1636,  1637,  1638,  1639,
    1640,  1641,  1643,  1642,  1644,  1645,  1646,  1647,  1648,  1650,
    1649,  1651,  1652,  1653,  1655,  1654,  1656,  1516,  1657,  1658,
    1659,  1660,  1661,  1517,  1662,  1663,  1664,  1665,  1666,  1667,
    1518,  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1608,  1684,  1519,
    1685,  1686,  1520,  1687,  1521,  1688,  1689,  1522,  1690,  1691,
    1692,  1693,  1694,  1695,  1523,  1696,  1524,  1698,  1697,  1699,
    1701,  1702,  1525,  1700,  1526,  1703,  1704,  1706,  1705,  1707,
    1708,  1527,  1709,  1528,  1710,  1711,  1712,  1713,  1714,  1715,
    1716,  1717,  1718,  1719,  1720,  1723,  1724,  1725,  1726,  1721,
    1722,  1529,  1727,  1728,  1729,  1731,  1732,  1530,  1733,  1734,
    1532,  1735,  1736,  1739,  1737,  1738,  1740,  1741,  1742,  1743,
    1531,  1744,   123,  1486,    99,  1487,  1496,     0,   594,   610,
    1913,  1914,   261,   499,   500,   260,   498,    97,  1952,     0,
     257,   258,     0,  1272,  1006,  1195,  1195,     0,  1195,  1198,
    1195,    97,  1195,     0,    59,  1356,     0,     0,     0,     0,
    1480,     0,  1205,  1388,  1392,     0,     0,  1793,     0,     0,
       0,     0,    97,   627,     0,  1256,     0,   590,     0,  1914,
    1925,   653,   657,   669,  1748,  1745,  1334,   579,   579,   579,
     577,   579,  1279,     0,     0,  1256,  1391,  1998,     0,     0,
       0,  1994,     0,  1999,     0,   659,     0,     0,     1,     3,
       0,  1582,  1347,  1345,  1477,     0,   519,   528,   523,   521,
       0,     0,  1963,   608,     0,  1911,     0,   636,   646,   125,
       0,    68,     0,     0,     0,  1917,     0,     0,     0,     0,
      95,   310,  1952,  1954,  1956,   261,   259,     0,  1276,  1275,
    1274,     0,  1272,  1182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1195,    61,     0,  1838,  1853,  1854,  1850,
    1855,  1856,  1860,     0,  1852,  1844,     0,  1859,  1848,  1857,
       0,  1842,     0,  1858,  1863,  1846,  1851,  1830,     0,  1836,
    1840,  1479,  1105,  1807,  1808,     0,  1492,  1483,  1491,  1490,
      67,  1207,  1208,  1206,   558,  1389,  1390,     0,  1402,     0,
       0,     0,   622,     0,  1329,  1328,     0,  1382,  1926,     0,
       0,   599,  1210,  1257,     0,  1209,  1379,     0,  1378,  1375,
    1377,     0,  1838,  1825,     0,  1920,  1917,  1927,   682,   675,
     674,   677,   678,   681,   679,   680,   676,   673,   690,   670,
     672,  1751,     0,     0,   435,     0,  1342,     0,     0,     0,
    1342,     0,  1136,  1335,     0,  1760,  1313,   496,   495,     0,
     494,  1761,  1312,  1328,     0,     0,     0,  1299,     0,  1762,
       0,  1331,     0,  1136,  1342,     0,  1281,     0,     0,     0,
       0,   573,   583,   575,   570,     0,   576,   572,  1277,  1194,
    1805,   558,  1439,  1438,  1484,  1995,  1437,  2003,  2005,  1991,
    1993,  2000,   655,     0,  1931,    53,     0,  1353,  1959,  1960,
    1958,   449,   107,   107,   517,     0,     0,     0,     0,     0,
    1192,     0,     0,   638,   648,   127,   124,    98,     0,   596,
     612,  1916,     0,     0,  1918,  1922,   764,   763,     0,    92,
     699,  1493,  1890,    96,  1886,  1957,   311,   690,   690,   690,
    1947,     0,  1949,  1950,  1951,  1963,  1955,     0,   501,     0,
    1259,  1262,  1266,  1270,  1273,  1534,  1497,     0,  1542,     0,
       0,  1450,     0,     0,     0,     0,  1502,     0,     0,  1555,
       0,     0,  1507,     0,     0,     0,   699,   699,   699,     0,
       0,     0,  1565,  1566,  1459,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1447,     0,  1460,     0,     0,
       0,     0,     0,     0,     0,  1593,     0,     0,  1594,     0,
       0,     0,  1449,  1599,     0,     0,     0,     0,     0,     0,
       0,  1612,     0,     0,  1457,     0,     0,  1012,     0,  1638,
    1640,     0,     0,     0,  1644,     0,     0,  1645,  1646,  1647,
    1434,   766,     0,   699,  1446,  1456,  1659,  1664,  1440,     0,
    1666,     0,  1667,     0,  1672,     0,     0,     0,     0,     0,
       0,  1694,  1696,     0,     0,  1712,     0,     0,     0,   699,
    1723,  1724,  1725,  1726,     0,  1448,  1529,  1458,     0,     0,
       0,  1735,   699,   699,   699,     0,     0,     0,  1741,     0,
    1744,  1016,     0,     0,     0,     0,   765,     0,   980,     0,
    1008,   701,   706,   711,   718,   724,   738,   740,   742,   745,
     750,   756,     0,   851,   758,   845,   781,   780,  1007,  1444,
     779,   778,  1445,   776,  1467,  1486,  1433,  1466,  1196,  1186,
    1187,     0,  1188,  1191,  1884,  1189,   560,     0,     0,    60,
    1370,  1364,  1366,  1369,  1365,     0,  1371,  1368,  1367,  1796,
    1357,  1359,  1360,  1839,  1837,  1871,  1870,     0,  1872,  1868,
    1861,  1891,  1865,  1891,  1867,  1866,  1891,  1862,  1869,  1891,
    1834,     0,  1106,  1107,     0,  1806,     0,  1478,     0,  1387,
    1403,     0,  1404,  1393,  1400,   641,     0,  1105,  1794,  1797,
       0,     0,    56,    57,     0,   629,     0,   628,   632,     0,
       0,     0,  1213,  1203,  1212,  1380,     0,     0,  1837,  1834,
    1921,     0,  1923,  1938,   658,  1928,   688,   660,   687,     0,
     671,  1746,  1749,  1757,  1311,  1338,   434,     0,     0,  1310,
    1296,     0,   261,     0,     0,     0,     0,  1282,  1287,   295,
       0,  1303,  1137,     0,  1342,     0,  1305,  1318,  1306,     0,
    1332,     0,  1342,  1292,  1319,  1332,  1297,  1302,  1309,  1336,
    1337,     0,  1291,  1298,     0,  1307,  1332,  1332,  1342,  1342,
     586,   585,   584,   580,   581,   586,     0,  1051,     0,     0,
    1992,  2006,  1990,  2001,  2002,  1989,   656,  1932,   654,  1933,
       0,  1348,  1346,  1354,  1355,   450,   520,   449,   252,   255,
     254,     0,   524,   522,   449,  1953,     0,     0,   612,     0,
       0,   640,   635,   639,   637,   491,   490,   493,     0,   647,
       0,   128,   130,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    69,    70,
      83,   598,   597,   595,   620,   619,   617,     0,   618,   616,
     611,   613,   614,  1915,  1919,   262,   449,     0,  1495,     0,
       0,     0,     0,     0,     0,     0,  1948,    88,     0,     0,
       0,  1264,  1260,  1270,     0,     0,     0,  1105,     0,     0,
       0,  1110,     0,   795,  1110,  1110,  1110,     0,     0,  1006,
    1006,     0,  1006,     0,     0,     0,     0,  1110,   819,   822,
       0,   820,     0,     0,     0,     0,     0,  1453,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,   985,     0,     0,     0,     0,   775,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,  1012,     0,  1010,
       0,  1110,     0,     0,  1110,     0,     0,     0,     0,     0,
    1006,  1006,  1006,   710,     0,   867,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1110,  1110,     0,     0,     0,  1110,     0,   888,
       0,  1455,     0,     0,     0,  1454,     0,     0,  1452,  1451,
    1435,     0,     0,     0,   911,   913,   912,  1110,     0,  1110,
       0,     0,     0,  1017,     0,   784,   783,   785,  1945,     0,
       0,     0,     0,     0,     0,     0,   703,   708,   767,     0,
     768,   769,     0,   770,   771,   772,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   786,  1080,  1081,  1082,  1083,
    1092,  1095,  1084,  1085,  1086,  1094,  1087,  1088,  1089,  1096,
    1097,  1098,  1090,  1099,  1093,  1091,  1100,     0,  1079,     0,
       0,     0,  1436,   905,     0,  1184,     0,   562,   561,  1190,
     560,     0,    62,    64,  1363,     0,     0,  1372,  1864,     0,
    1845,  1849,  1843,  1847,     0,     0,  1835,     0,  1841,  1109,
    1589,  1654,     0,  1112,  1810,  1200,  1399,  1401,     0,     0,
    1394,     0,     0,   612,    58,     0,     0,  1383,     0,     0,
       0,     0,   601,  1211,     0,  1376,     0,     0,     0,     0,
       0,  1924,  1940,  1939,  1929,   690,  1127,   691,   693,   692,
    1466,  1751,  1754,  1755,  1758,  1756,     0,  1753,  1752,  1767,
       0,  1340,  1343,  1344,     0,     0,  1321,  1320,  1316,  1317,
       0,  1146,  1147,  1145,  1140,  1141,  1144,  1325,  1323,  1314,
       0,  1342,     0,  1324,  1322,  1342,  1332,     0,  1342,  1342,
    1304,  1308,     0,   574,   583,   571,   578,  1063,  1062,     0,
    1027,     0,  1026,  1025,  1024,     0,  1062,  1996,  2004,  2008,
       0,  1136,  1937,  1935,   253,  1234,  1234,     0,     0,     0,
       0,     0,     0,     0,   108,   117,   556,   556,  1234,  1234,
     556,  1234,  1234,  1234,     0,     0,  1234,     0,     0,   556,
       0,  1234,   554,     0,     0,  1234,  1234,  1234,   556,  1234,
    1234,  1234,  1234,  1234,   566,  1234,  1234,  1234,   553,   265,
     287,   288,   518,     0,   532,   555,  1964,  1965,   525,   609,
     593,  1193,     0,   126,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   621,   615,    93,   700,  1494,     0,  1887,  1984,     0,
       0,  1966,   263,   504,   506,   505,   503,   502,     0,     0,
    1112,     0,  1267,  1051,  1271,  1270,  1268,     0,     0,     0,
    1111,  1110,     0,   991,  1154,  1155,  1151,  1152,  1150,  1153,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   964,     0,   991,     0,   825,     0,
       0,     0,     0,     0,     0,  1466,     0,     0,     0,     0,
       0,  1945,     0,     0,     0,     0,     0,     0,   802,     0,
       0,     0,     0,     0,     0,     0,  1103,  1101,  1104,  1102,
       0,     0,   986,   978,     0,     0,     0,     0,   852,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1110,     0,     0,     0,  1110,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   874,     0,     0,     0,     0,
       0,   879,     0,     0,     0,     0,     0,     0,     0,  1110,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   908,     0,   910,     0,     0,  1469,  1468,     0,
       0,     0,     0,  1020,   659,     0,   788,  1006,   787,     0,
    1763,   981,   983,     0,   705,   702,   707,   721,   714,   719,
     712,   716,     0,   773,  1539,   722,     0,     0,  1119,   736,
       0,     0,   739,     0,     0,     0,     0,   741,   743,   744,
     747,   851,   746,   851,   754,   755,   751,   752,   753,   757,
       0,   777,   782,  1009,   952,  1470,  1185,  1885,  1183,    65,
       0,     0,  1358,  1373,  1361,  1895,     0,  1894,  1880,  1883,
    1477,     0,     0,     0,  1820,  1814,  1821,  1823,  1817,  1822,
    1824,  1815,  1816,  1811,  1818,  1113,  1138,     0,     0,   642,
     643,   646,     0,  1800,  1801,  1799,  1798,   623,  1385,  1384,
       0,   630,   633,   634,   606,   605,   607,   600,   602,   603,
     245,  1217,     0,     0,     0,  1223,  1204,  1214,   591,     0,
       0,     0,     0,     0,   686,  1051,  1175,   683,   664,  1138,
    1128,   663,   694,     0,  1750,     0,  1721,  1778,     0,     0,
       0,     0,     0,  1768,  1339,     0,  1293,     0,  1315,  1327,
    1326,  1288,     0,     0,     0,  1286,  1333,  1285,  1112,  1332,
    1283,  1284,   588,   587,   582,  1062,  1051,     0,     0,  1048,
    1064,     0,  1064,  1051,  1051,     0,  1051,  1105,  1059,     0,
       0,  2007,  1129,  1936,  1232,  1233,  1235,     0,     0,   111,
     114,   112,     0,   113,     0,     0,   557,   511,   492,   492,
     536,     0,   327,   511,   485,   534,     0,     0,     0,     0,
       0,     0,     0,     0,  1234,     0,   547,   530,     0,     0,
       0,     0,   548,     0,   531,  1234,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   569,   568,   567,     0,     0,
       0,     0,   266,   449,   330,     0,   563,   327,   333,  1473,
    1968,  1076,     0,  1075,   129,    76,    72,    84,  1159,  1160,
    1158,  1156,  1157,    85,    74,    75,    79,    78,    80,    81,
      82,    77,    73,    86,    87,    71,     0,  1888,     0,   229,
     228,     0,  1982,  1968,     0,   330,    89,  1405,   264,   267,
      90,  1051,  1127,  1270,  1112,     0,  1105,     0,   794,   809,
       0,     0,   957,     0,     0,   959,   960,   961,     0,   813,
       0,   811,   814,   815,   816,  1006,     0,     0,     0,     0,
    1006,   963,     0,   821,     0,     0,   826,   827,     0,   800,
       0,   834,     0,   836,     0,  1006,     0,   830,     0,   791,
       0,     0,  1006,     0,   842,     0,   803,     0,     0,   943,
       0,   926,   922,     0,   924,     0,     0,  1006,  1006,     0,
     847,     0,     0,   853,  1006,     0,   945,     0,   927,     0,
     859,     0,  1006,     0,  1011,     0,     0,     0,   970,   863,
     864,     0,   968,   929,     0,     0,   866,   931,     0,   933,
       0,   928,   935,   936,   868,   870,   869,   938,     0,     0,
     940,     0,   942,     0,   872,   873,     0,     0,     0,   877,
       0,  1006,   882,   972,   974,     0,     0,     0,     0,     0,
     976,   889,   891,     0,     0,     0,   890,     0,     0,     0,
       0,     0,     0,     0,   895,     0,     0,   909,   975,   801,
     973,   914,     0,   917,     0,   916,  1018,     0,  1944,  1946,
       0,     0,   792,     0,     0,     0,     0,     0,  1471,   760,
     759,     0,   762,   761,     0,   715,   720,   713,   717,     0,
       0,     0,     0,   734,   733,     0,     0,  1119,   737,     0,
     749,   748,   850,     0,   951,   690,  1006,     0,    63,  1362,
    1892,     0,     0,     0,     0,     0,     0,     0,     0,  1809,
    1139,  1244,  1485,  1395,     0,   650,  1802,  1803,     0,   604,
     669,     0,  1236,  1221,  1228,  1222,     0,     0,     0,  1220,
    1462,  1461,  1468,  1927,     0,     0,     0,     0,  1930,  1112,
    1112,  1169,     0,     0,   661,   666,   662,   665,     0,   689,
     698,   697,  1463,  1470,     0,     0,     0,     0,   437,   439,
     438,   445,     0,   436,     0,     0,  1763,     0,   441,   443,
     442,  1773,   440,  1341,  1136,  1301,  1300,  1143,  1142,     0,
    1295,  1342,     0,  1934,  1057,     0,  1050,  1049,  1065,     0,
    1051,  1064,  1064,     0,  1030,  1029,  1248,  1251,     0,  1028,
    1066,  1055,   669,  1997,  2009,     0,   448,   447,   294,   444,
     293,   116,   115,   121,   122,   332,   512,   486,   487,     0,
       0,     0,   492,   326,   511,   325,   328,   501,     0,   277,
     274,   538,   280,   276,   292,     0,     0,   281,   511,   545,
     546,   560,   270,     0,   306,   307,   305,   289,   272,   273,
     540,   279,   278,   275,   284,   285,   303,   302,   283,   304,
     551,   301,   299,   296,   298,   297,   300,   282,   271,     0,
     533,     0,   316,   318,   319,  1476,     0,   565,   535,     0,
     320,   321,     0,     0,     0,     0,   649,     0,  1889,  1985,
     232,   230,   231,     0,     0,     0,   235,     0,   233,     0,
       0,  1407,  1406,   234,   248,   449,   268,     0,  1112,  1148,
    1263,  1269,     0,     0,     0,   958,   992,     0,   413,   413,
    1002,  1000,   402,   413,   996,  1001,   998,     0,     0,     0,
       0,     0,     0,     0,   965,   962,     0,     0,     0,  1470,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   989,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   947,  1015,
     971,   969,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     977,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,  1941,
    1942,   789,  1764,  1765,  1766,   513,   982,   704,   709,     0,
     727,  1006,   725,  1118,   731,     0,     0,   735,     0,   906,
       0,   953,   954,     0,  1005,  1472,  1893,  1882,  1881,  1896,
    1896,  1896,     0,  1114,     0,  1201,  1405,   644,     0,   645,
     631,   690,  1218,  1230,     0,  1238,     0,     0,  1215,  1225,
       0,     0,     0,  1224,     0,  1827,  1828,  1826,  1138,  1120,
       0,     0,  1180,     0,  1176,   684,     0,   696,   695,     0,
    1780,     0,  1779,  1791,  1792,  1789,  1790,  1788,  1769,     0,
    1775,  1774,     0,     0,     0,  1785,  1776,     0,     0,  1294,
       0,  1289,   589,     0,  1051,  1064,  1051,  1037,     0,     0,
    1051,  1033,  1031,  1035,     0,  1112,     0,     0,     0,     0,
    1052,   690,  1465,  1130,  1133,   329,   511,   488,   489,   501,
       0,     0,     0,     0,   445,   290,   544,   543,   291,     0,
       0,   537,   330,   564,   465,   398,   347,   338,   413,   341,
     340,   384,   355,   352,   402,   400,   370,   402,   402,   377,
     376,   394,   380,   360,   451,   451,   359,   397,   451,   381,
     379,   383,     0,   385,   402,   390,   378,   382,   399,   375,
     372,   396,   413,   413,   353,   356,   395,   451,     0,   388,
     413,   417,   358,   451,   457,     0,     0,   413,   415,  1475,
    1970,     0,  1972,  1074,   142,   690,     0,   101,  1983,  1972,
       0,   238,   263,   249,     0,   269,     0,  1265,     0,  1261,
     775,   806,   810,   919,     0,   993,   451,     0,  1003,   404,
     995,   997,   999,   796,   812,   817,   921,   799,   798,     0,
       0,     0,     0,   832,   835,   837,   828,   833,   831,     0,
     920,   844,   841,   843,   804,     0,   944,   923,   925,   846,
     857,   987,   990,     0,     0,     0,   858,   854,   946,   855,
       0,   860,   829,   861,     0,     0,     0,     0,   930,   865,
     932,   934,   939,   937,   941,   871,   808,     0,   876,   878,
     790,   775,   880,     0,   886,   884,     0,     0,   892,     0,
       0,   901,     0,   899,     0,   900,     0,   902,   903,     0,
     915,   918,  1019,   797,     0,     0,  1927,     0,   984,   723,
       0,   729,  1006,   726,   732,   691,   690,   904,     0,  1901,
    1901,  1901,  1243,  1242,     0,  1241,  1245,     0,   651,   246,
       0,     0,     0,  1239,  1227,  1931,  1216,  1219,  1470,  1829,
     668,     0,  1115,  1179,  1177,     0,  1170,  1172,  1174,     0,
    1464,     0,     0,  1784,  1770,   446,     0,     0,     0,     0,
    1771,     0,  1105,  1058,     0,     0,  1024,  1051,  1051,     0,
    1024,     0,     0,     0,  1250,  1127,  1252,  1070,  1068,  1069,
    1067,  1060,     0,  1134,  1135,  1132,     0,     0,     0,   550,
       0,   563,   552,   417,   286,   317,   471,     0,     0,   357,
     406,   401,     0,   406,   406,   457,   459,   453,   457,     0,
     366,   384,   361,     0,   451,   374,   365,   386,   389,   391,
     393,   406,     0,   451,   354,   363,     0,   406,   425,     0,
       0,     0,   421,     0,   464,     0,   428,   334,   418,   420,
       0,     0,   387,     0,   343,   458,     0,   345,     0,     0,
     406,     0,   416,   406,     0,  1969,     0,  1976,     0,   145,
     143,   144,     0,   138,   140,   135,     0,   314,   315,   313,
     312,     0,   131,  1976,   236,  1931,  1405,     0,   241,     0,
    1133,   509,  1149,     0,     0,   994,     0,     0,   966,   823,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   793,     0,     0,     0,     0,     0,     0,     0,
     898,   896,   897,     0,  1022,     0,  1946,   514,   728,     0,
     694,   955,     0,     0,  1900,  1898,     0,  1899,  1897,  1873,
       0,  1832,  1833,  1831,  1819,     0,     0,  1396,  1138,  1229,
    1231,  1237,  1226,     0,  1116,  1127,  1408,  1173,     0,   685,
    1782,  1781,  1783,  1777,     0,     0,     0,     0,  1056,  1051,
    1038,     0,  1042,  1047,  1043,     0,  1034,  1032,     0,  1148,
       0,  1138,  1133,     0,     0,     0,     0,     0,     0,     0,
       0,   549,  1441,   539,   541,     0,     0,     0,   466,   467,
     472,   474,     0,     0,   410,   411,   412,   367,   407,   409,
       0,   369,   337,   452,   460,   461,     0,   456,   454,   457,
     362,   392,   368,     0,   364,     0,   351,   431,   430,   699,
     423,   433,     0,     0,   429,   419,   427,   422,     0,     0,
       0,     0,   335,     0,   336,  1474,  1971,     0,   526,   690,
     690,  1973,  1986,   142,     0,     0,     0,     0,   132,   134,
     135,  1967,   239,   237,     0,  1927,    91,     0,   508,     0,
     807,   414,   403,     0,   818,   838,     0,   805,   988,   979,
    1110,   848,     0,   856,   862,   949,   948,   875,   881,   885,
     883,   887,   893,   894,  1006,     0,  1943,   730,   956,  1879,
    1878,  1877,  1874,     0,     0,     0,     0,     0,     0,  1902,
    1904,  1240,     0,     0,   247,   683,   308,  1124,  1133,     0,
    1138,     0,  1416,  1171,  1787,  1786,  1772,     0,     0,     0,
       0,     0,     0,     0,  1077,  1249,  1072,  1061,  1131,     0,
       0,   322,  1443,  1442,   563,   477,   478,   479,     0,     0,
       0,   470,   473,   346,   339,   408,     0,   515,   462,   455,
       0,   350,   432,   699,   426,   451,   457,   451,   457,     0,
       0,     0,   659,     0,   109,   139,     0,   690,   100,   102,
       0,     0,   243,   242,  1133,     0,     0,     0,     0,     0,
       0,  1023,  1875,  1905,  1908,  1906,  1907,  1909,  1903,     0,
       0,   309,     0,     0,  1121,  1123,  1117,  1161,     0,     0,
       0,     0,  1409,  1411,     0,  1178,     0,  1053,  1039,     0,
    1044,     0,  1036,     0,     0,  1073,     0,   323,   542,   481,
       0,   480,     0,   475,   476,   471,     0,   451,     0,   451,
     424,   342,   344,   348,   349,     0,  1977,     0,  1974,     0,
    1987,   141,     0,     0,   133,   136,  1931,   507,   510,   405,
     839,     0,   967,   849,   907,  1246,  1254,     0,  1397,  1125,
    1126,  1133,     0,   667,     0,     0,     0,     0,  1410,     0,
       0,  1417,  1419,     0,     0,     0,     0,  1078,  1071,   324,
     483,   484,   482,   468,   469,   371,   516,   373,  1978,  1979,
    1931,   119,   118,   110,     0,   177,     0,   103,   244,     0,
       0,     0,  1408,  1122,  1162,  1414,  1415,     0,  1412,     0,
       0,  1418,     0,     0,  1041,  1046,  1975,   120,     0,   197,
     181,     0,     0,     0,   179,   185,  1988,     0,     0,   188,
    1488,     0,  1489,  1980,     0,   840,  1253,  1255,  1416,     0,
    1413,  1421,  1420,     0,  1054,   196,   199,     0,     0,   202,
     192,   191,   193,     0,   183,     0,   178,   220,   177,   177,
     223,   190,   216,   177,   104,  1422,   690,     0,   198,     0,
       0,     0,   180,   209,     0,   150,   177,     0,   177,     0,
       0,  1981,   109,     0,  1424,     0,     0,  1165,  1167,     0,
     194,     0,     0,     0,     0,   186,   146,     0,     0,   148,
     226,     0,   218,   105,     0,     0,  1431,  1168,  1163,   690,
    1290,     0,   182,   203,     0,     0,   209,     0,   177,     0,
     222,   149,     0,   224,   217,   219,   177,  1423,  1426,     0,
       0,  1428,  1429,     0,  1398,  1166,   195,   200,   177,   184,
     210,     0,   161,   160,     0,   152,   173,   221,     0,   151,
       0,   177,   106,  1430,  1425,     0,  1432,     0,   177,   177,
       0,     0,     0,     0,     0,     0,   147,     0,   177,  1427,
     201,   206,   177,   187,   155,   174,   175,     0,   158,   227,
       0,   202,   177,   205,   213,     0,     0,   153,   166,   154,
     164,   157,     0,   225,   207,   177,   209,   177,   212,   172,
     170,   177,   168,   162,     0,   169,   176,   167,     0,   159,
     215,   177,     0,   156,   171,   165,   163
};

/* YYDEFGOTO[NTERM-NUM]. */
static const short int yydefgoto[] =
{
      -1,    52,    53,    54,    55,    56,    57,   962,    58,   514,
     909,  1362,  1363,    59,   411,    60,   688,  1108,  1109,  1110,
      61,  1572,  2427,  1126,   388,   406,   372,  2728,  3002,  3373,
    3464,  3512,  3556,  1072,  3370,  1494,  3423,  1495,    62,   479,
     686,  1090,  1091,  3177,  3178,  3174,  3179,  2992,  2993,  2994,
    2995,  3548,  3506,  3526,  3549,  3593,  3615,  3621,  3622,  3574,
    3631,  3632,  3638,  3633,  3575,  3617,  3507,  3457,  3483,  3479,
    3503,  3485,  3546,  3458,  3541,  3478,  3566,  3500,  3501,  3568,
    3601,  3613,  3523,  3524,  3589,  3614,  3628,  3459,  3510,  3554,
    3491,  3505,  3509,  3581,  3552,  2011,  2413,  2016,  2418,  3005,
    2423,  3185,  3376,  1845,  2240,  3068,  2734,  1066,  1067,  1068,
     389,   390,   391,   487,  2017,  1528,  2018,  2019,  1530,  1531,
    1008,  2387,  2378,  2367,  3234,   709,  3001,  2391,  2392,  2393,
    2394,  2345,  2346,  1931,  1932,  1977,  2402,  2711,  2932,  2952,
    2712,  2713,  2714,  2715,  2716,  2717,  2718,  2748,  2749,  3127,
    3128,  3129,  2745,  2983,  2967,  2968,  2969,  3150,  2939,  2280,
    2281,  2290,  2291,  2327,  2610,  2328,  1071,  2940,  2977,  3137,
    2970,  2401,  2926,  3118,  3270,  3119,  3120,  3121,  3353,  1933,
    2344,  1087,  1088,   635,   392,  1140,  1576,  3009,  3010,  2335,
    2838,  3276,    63,  1074,   671,   673,   672,  1980,   466,  1532,
    1533,  1534,  2653,  2659,  3264,  1935,   111,  1359,  2398,  1968,
      64,  1045,  1040,    65,   646,   641,   642,  1043,  1044,  1463,
    1893,    66,   581,    67,   474,    68,   482,  1113,    69,   970,
    1837,  1838,  1839,    70,   678,    71,   483,  1120,  1121,  1122,
      72,   960,   116,    73,   570,   965,   967,   968,    74,   476,
     477,  1082,    75,  1389,  1819,  1820,   683,   684,  1089,  2569,
      76,    77,   457,   431,   587,   432,   433,  1416,  1857,  3235,
     598,   599,   600,  2264,   987,   988,   989,  1862,  1417,  2269,
    1128,  2853,  1296,  1745,   871,  1297,  1746,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,  2191,  2194,  2971,
     882,  1306,  1756,   883,   884,  1784,   885,  2797,  2213,  2214,
    2215,  2551,  2552,   886,  2050,  2760,  2088,   887,  1293,  1741,
    1653,  3024,  2781,  1592,  2033,  2447,  2553,   503,   504,   888,
    1218,  1219,  1220,  1670,  1284,  2526,  2176,  2177,  2528,  1470,
    1471,  1472,  1473,  2902,  2901,  2903,  3249,  3091,  3251,  3095,
    1904,  1474,  1475,  3404,  2303,  2624,  2321,  2322,  3101,  1895,
    1476,  2309,  2640,  2908,  3100,  3344,  1982,  3253,  1347,  1348,
    1650,   944,   945,  1593,  1816,  2228,  3075,  3239,  2203,  2872,
    3237,  3324,  1859,  1860,  2325,  2643,  2915,  1011,  3236,  2230,
    1444,  1445,  2739,  3620,  1993,  3393,  3469,  3516,  3517,  3518,
    2592,  2593,  2876,  2877,  1861,  2261,  2594,  3076,    78,   394,
      79,  1786,   679,   680,   506,   403,    80,   412,  1817,    81,
     425,  1404,   554,   574,   973,   974,  1846,  2241,  2248,  1847,
    2253,  2865,  2243,  2572,  2573,  1916,  1917,  2244,  2575,  2862,
    2854,  2855,  2565,  3066,    82,   445,  2635,  2316,  2317,  3385,
    3386,   575,    83,   393,   720,  1580,  1145,  1579,   721,   722,
    1147,   501,   502,    84,   443,    85,   436,   636,  1440,  2294,
    1881,   566,   638,  1451,   639,  1452,  1431,  1876,   999,    86,
     667,   666,    87,   462,  1062,    88,   515,   920,   921,  1367,
    1794,    89,   426,   579,   580,    90,   420,   567,  1397,    91,
     413,   557,    92,    93,   558,   953,  2566,  3233,  3432,  1388,
     954,  2424,  3242,  3332,  3333,  3335,  3401,  3402,  3514,  3536,
    3560,  3561,  3564,   889,   655,   890,  3111,   891,   892,  2249,
    2250,  2644,   893,  3387,   894,  1978,   649,   409,   895,   548,
     896,  2233,   897,  3461,   701,   702,   375,   376,    94,   601,
     435,   991,   992,   993,  1426,  1427,   640,  2186,  1428,  1429,
    1873,  1868,  2884,  2616,  2608,    95,   561,   922,   958,   959,
    1825,    96,   444,    97,   946,  1383,  1384,  1813,  2227,  1814,
      98,   583,    99,   537,  1377,   538,   924,   539,   540,   936,
     931,   939,   933,  3223,  3058,  3059,  1801,   905,   703,   704,
    1370,  1796,  1797,  2849,  3061,  3229,  3230,   100,   120,   381,
     485,   695,   981,   101,   102,   103,   104,   984,  1057,  1853,
    1058,  1059,  1060,  1483,  1414,  1291,  2836,  2179,  1735,  2529,
     490,   710,   472,   492,   493,   112,   113,   711,   712,  2013,
    2405,  2721,  2987,  2988,  3171,  3168,   713,  3493,   714,  2414,
    2008,  2724,  3294,  3425,   105,   657,   454,  1055,  1050,  1052,
    1479,  1911
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3178
static const int yypact[] =
{
    2568, -3178,   171,   805,   744, -3178,   152, 42079,   485,   744,
     744,   282,   670, -3178, -3178, -3178, -3178, -3178,   721, 42079,
     805, -3178, 21601, -3178, -3178, -3178,    96,   744,   805, 42079,
   -3178,   366,   720,   805, -3178, -3178,   744, -3178,   282, 42079,
   -3178,   548, -3178,  -115,   -99,   406,   413, -3178, -3178, 42079,
     673,  -129,   916,   952, -3178, -3178,   639, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, 22141, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178,   896, 42079, 42079, -3178,
   42079,   477, -3178,   985, -3178, -3178,   744, -3178, -3178, -3178,
     282, 21601, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178,   586, -3178, -3178,   675, -3178, -3178,
   -3178,  1156,  1057, -3178, -3178, -3178, -3178, -3178,   411,   713,
   -3178,   770,  1012,    86, -3178,  1083,  1083, 42079,  1083, -3178,
    1083, -3178,  1083,   744, -3178, -3178,  1056, 42079,   868,   185,
     -71, 37246,   219,   187, -3178,  1015, 21601, -3178,   744,  1126,
     241, 42079, -3178, -3178,   744,   683,   524, -3178,  2295,   127,
   -3178, -3178, -3178,   332, -3178, -3178,  3999, -3178, -3178, -3178,
     772, -3178, -3178, 21601,   744,  1041, -3178, -3178,   139,   139,
     139, -3178,   139, -3178,   139, -3178,  -129,   756, -3178, -3178,
   42079,  -114, -3178, -3178,   754,   572, -3178, -3178, -3178, -3178,
   21601,  1181,   885, -3178, 21601, -3178,     9, -3178, -3178,   777,
   42079, -3178, 21601, 21601,   409,   808,   933, 42079, 35098,   945,
   -3178,   151,   985,  1332, -3178,  1057, -3178, 42079, -3178, -3178,
   -3178, 38857,    86, -3178, 13888,  1196, 42079, 42079,  1011, 42079,
   42079, 35098, 21601,  1083,   834,   979,   991,   949,   765, -3178,
   -3178, -3178, -3178,  1021, -3178, -3178,   899, -3178, -3178, -3178,
     144, -3178,    67, -3178, -3178, -3178, -3178, -3178,  1049,   809,
   -3178, -3178,    95, -3178, -3178, 42079, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178,  1171, -3178, -3178, 13888,   722,  1353,
    1233, 21601, -3178,  -174, -3178, -3178,  1152, -3178, -3178, 35098,
   21601, -3178, -3178, -3178, 19431, -3178, -3178,  1366, -3178,   855,
   -3178, 21601,   991, -3178,  1096,  1004,   808,   923, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,   890,   332,
   -3178, -3178,  1222,  1306, -3178,  1029,     1,  1017,   937,   165,
       1, 37246,  1257, -3178,   199, -3178,  1349, -3178, -3178,  1064,
   -3178, -3178, -3178,  1092,  1103,  1251,  1080, -3178,   236, -3178,
      51, -3178,  -120,  1257,     1,   160, -3178,  1307,  1421,   246,
     637, -3178,   -54, -3178, -3178,  1489, -3178, -3178, -3178, -3178,
   -3178,  1171, -3178, -3178, -3178,  1008, -3178,  1244,  1125, -3178,
   -3178,   499, -3178,  1039,    13, -3178,   371, 35635, -3178, -3178,
   -3178,   113, -3178, -3178, -3178, 35098,  1183,  1081, 21601,   650,
   -3178, 39394, 21601, -3178,   -14, 13888, -3178, -3178,  1787,    80,
     115, -3178,  1574,  1239, -3178, -3178, -3178, -3178,  1481, -3178,
    1086,  1074,  1441,  1098, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,  1133, -3178, -3178, -3178,   885, -3178, 21601,  -157, 21601,
   -3178,  1102, -3178,  1099, -3178,  1108,  1112,  1117,  1119,  1130,
   16703, -3178,  1137,  1138,  1139,  1140,  1142,  1147,  1150,  1153,
    1154,  1155,  1157,  1160,  1165,  1166,  1086,  1086,  1167,  1168,
    1169,  1175,   -41,  1184, -3178,  1185,  1186,  1188,  1189,  1190,
    1191,  1192,  1194,  1199,  1201, -3178,  1202, -3178,  1205,  1207,
    1208,  1209,  1210,  1211,  1214,  1216,  1217,  1219,  1220,  1225,
    1227,  1229, -3178,  1231,  1234,  1235, 13888,  1236,  1237,  1238,
    1241,  1242,  1243,  1245, -3178,  1246,  1248,  1249,  1252,  1254,
    1256,  1258,  1259,  1261,  1262,  1263,  1265,  1267,  1271,  1272,
   -3178, -3178, 13888,  1274, -3178, -3178,  1275,  1276, -3178,  1278,
    1280,  1281,  1282,  1283,  1284,  1288,  1289,  1290,  1291,  1293,
    1294,  1297,  1298,  1300,  1301,  1308,  1309,  1311,  1315,  1316,
     435,  1317,  1318,   602,  1319, -3178,  1321, -3178,   154,  1322,
    1323,  1324,  1086,  1086,  1086,  1325,  1327,  1328,  1329,  1330,
    1331, 13888, 16703, 16703, 16703,  9384, -3178, 42079, -3178, 42079,
   -3178,  1172, -3178, -3178,  1465, -3178,   733,  1180,   843,   735,
     191,  1247, 16703,  2334,   379, -3178, -3178, -3178,  1179,  1335,
   -3178, -3178, -3178, -3178, -3178,  1333, -3178,  1176, -3178, -3178,
   -3178, 21601, -3178, -3178, -3178,  1226,    85, 21601,  1326, -3178,
   -3178, -3178, -3178, -3178, -3178,  1710, -3178, -3178, -3178,  1223,
    1255, -3178, -3178, -3178, -3178, -3178, -3178,  1397, -3178, -3178,
   -3178,  1334, -3178,  1334, -3178, -3178,  1334, -3178, -3178,  1334,
     551,  2009, -3178, -3178, 42079, -3178, 42616, -3178, 19431, -3178,
   -3178,  1492, -3178, -3178,  1530, -3178,  1512,   130,  1310, -3178,
   21601, 37246, -3178, -3178,   128,  1339,  1410,  1340, -3178,  1411,
   21601, 21601, -3178, -3178, -3178, -3178,   524,    10,  1341,   610,
   -3178, 42079, -3178,   285, -3178, -3178, -3178,  1342, -3178, 13888,
   -3178,  1343, -3178,    64, -3178,  1672, -3178,  1430, 13888, -3178,
   -3178,  1354,  1057, 42079, 42079, 21601, 21601, -3178, -3178, -3178,
     582, -3178, -3178, 42079,     1, 35098, -3178, -3178, -3178,  1741,
     160, 42079,     1, -3178, -3178,   160, -3178, -3178, -3178, -3178,
   -3178, 21601, -3178, -3178,   160, -3178,   160,   160,     1,     1,
    1404, -3178, -3178,  1355, -3178,  1404,  1478,   348,   139,  1561,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
     501, -3178, -3178, -3178, -3178, -3178, -3178,   114, -3178, -3178,
   -3178,   314,   716,   716,  1613, -3178,   277, 21601,   115,  1430,
   21601, -3178, -3178, -3178, -3178, -3178, -3178, -3178,  1362, -3178,
    1363,  1365, -3178,  1783,  1788,  1789,  1791,  1792,  1793,  1794,
    1796,  1797,  1798,  1799,  1800,  1803,  1805,  1806,  1392, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178,  1444, -3178, -3178,
   -3178, -3178,   909, -3178, -3178, -3178,   113,  1396, -3178, 37246,
    1915, 35098, 42079, 42079,  1785, 21601, -3178, -3178,   166,   166,
    1625,  1102, -3178,    83, 42079,  1802, 25916,   116, 13888, 13888,
   13888,   785,   729,  1906,  1958,  1958,  1958, 13888, 13888, -3178,
   -3178, 13888, -3178, 13888, 13888, 13888, 13888,   912, -3178, -3178,
    9947, -3178,  1415, 13888, 13888,  1495, 13888,  1335, 13888, 13888,
   22681, 13888, 13888, 13888, 13888, 13888,   380, 13888,  2334, 13888,
   13888, 13888,  1418, 13888, 13888, 13888, 13888, -3178, 13888, 13888,
     221, 13888,  1858,   -51, 13888, 13888, 13888, -3178, 10510, 13888,
   13888, 13888, -3178, 13888, 13888, 13888, 13888, -3178,  1972, -3178,
   22681,   999, 13888, 13888,  1001, 13888, 13888, 13888, 13888, 13888,
   -3178, -3178, -3178, -3178,  9947, -3178, 13888, 13888, 13888, 13888,
   13888, -3178, 16703, 13888, 11073, 13888, 13888, 13888, 13888,  1422,
   13888, 13888,  1958,  1958, 13888, 13888, 13888,  1095,  9947, -3178,
   13888,  1335,   557,   557, 13888,  1335,  8258, 13888, -3178, -3178,
   -3178,   -51, 11636,  1423, -3178, -3178, -3178,  1958, 22681,  1958,
   13888, 13888, 13888, -3178,  1450,  1906,  1906,  1906, -3178,  9384,
     739,  1425, 13888, 23761,  1424, 13888, -3178, -3178, -3178, 16703,
   -3178, -3178,   647, -3178, -3178, -3178, 14451,  1432, 16703, 16703,
    1747, 16703, 16703,     2, 16703, 16703, 16703, 16703, 16703, 16703,
   16703, 16703, 16703, 16703, 16703,  1906, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178,  1442, -3178, 37246,
   16703, 13888, -3178, -3178, 42079, -3178, 35098, -3178, -3178, -3178,
      85, 37246,  1435, -3178, -3178,  1614,   979, 21601, -3178, 42079,
   -3178, -3178, -3178, -3178, 19971, 19971, -3178, 19971, -3178, -3178,
     108,   129,  1467,  1468, -3178, -3178, -3178, -3178,  1784, 21601,
   -3178,   526, 21601,   115, -3178, 13888,  1430, -3178, 35098, 35098,
   21601, 21601,   192, -3178,   767, -3178,  1430,  1812, 19971, 19971,
   19971, -3178, -3178, -3178, -3178, -3178,   807, -3178, -3178, -3178,
    1438, -3178, -3178, -3178, -3178, -3178, 39931,    98, -3178, -3178,
    1430,  1831, -3178, -3178,  1445, 42079, -3178, -3178, -3178, -3178,
      22, -3178, -3178, -3178, -3178,   -93, -3178, -3178, -3178, -3178,
    1575,     1, 42079, -3178, -3178,     1,   160, 21601,     1,     1,
   -3178, -3178,   746, -3178,   -54, -3178, -3178, -3178, -3178, 42079,
    1228,  1586,  1452, -3178, -3178, 21601, -3178,  1453, -3178,  1848,
    1973,  1257, -3178, -3178, -3178,   222,   222,  1430,  1568,  1569,
    1570,  1573,  1579,  1606, -3178, -3178,   134,  1964,   222,   222,
    1964,   222,   222,   222,  1546,  1913,   222,  1807,  1563,   697,
    1808,   222, -3178,  1565,  1922,   222,   222,   222,  1964,   222,
     222,   222,   222,   222,   132,   222,   222,   222, -3178,  2834,
   -3178, -3178,  1480, 20511, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, 40468, -3178, 13888,   729,  1430,  1430,   218,  1430,
     729,  1430,  1430,  1430,  1430,  1430,   729,  1430,  1430,   729,
    1787, -3178, -3178, -3178, -3178, -3178,   -52, -3178, -3178,   340,
   42079, -3178,  1600, -3178, -3178, -3178, -3178, -3178, 21601,  1526,
    1468, 25916, -3178,   348, -3178,  1477, -3178,  1483,  1485,   749,
   -3178,  1958,  1487, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
    1499,  1488,  1490,  1507,  2029,  1509,   281,  1510,  1511,  1514,
    1516,  1517,   317,  1518, -3178,  1520,  1528,  1524, -3178,  1529,
    1533,  1539,  1540,  1542,  1541,  1538,   764,   804,  1544,  1547,
     818, -3178,  1549,  1551,  1937,  1552,  1553,   822, -3178,  1550,
    1555,  1557,   844,  1559,   846,   854, -3178, -3178, -3178, -3178,
    1560,  1562, -3178, -3178,  -191,  1564,  1566,  1571, -3178,  1576,
    1572,  1577,   874,  1580,  1581,   886,  1582,  1583,  1585,  1567,
    1587, -3178,  1958,  1589,  1590,  1591,  1958,  1592,   898,  1593,
    1595,   908,   911,  1597,  1598,  1601,  1602,  1603,  1604,   913,
    1599,   920,  1605,    34,  1608, -3178,  1609,  1615,  1616,  1618,
     924, -3178,  1621,  1623,  1624,  1628,  1629,    69,  1630,  1958,
    1633,  1634,   928,  1636,  1637,  1635, 12199, 12762, 13325,    25,
    1638,  -144, -3178,  1640, -3178,  1642,  1644, -3178,  1538,  1645,
     938,   946,  1647, -3178, -3178,   380, -3178, -3178, -3178,  1558,
     587, -3178,  1703, 42079, -3178,   503,  1486, -3178, -3178, -3178,
   -3178, -3178,   248, -3178,  1578, -3178,  1588,  9384,   180,  1617,
   16703,    79,  1180,  1594, 16703, 16703, 16703,   843,   735,   735,
     191,  2334,   191,  2334,  1247,  1247,  1247,  1247,  1247,  1906,
   13888, -3178,  1906, -3178,  1650,   425, -3178, -3178, -3178, -3178,
    1326,  1875, -3178,  1651, -3178, -3178,   953, -3178,  1653, -3178,
    1654,  1691,  1705,  1727, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178,  1257,   767,  1660,  1661,
   -3178, -3178,  1687,  1974, -3178, -3178, -3178, -3178, -3178, -3178,
    1744, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,   417,
   -3178, -3178,  1670,  1670, 18346, -3178, -3178, -3178, -3178,  1890,
    2062,  2064,  2065,   371, -3178,   157, -3178,   142,  2015,  1257,
   -3178,  2067, 37783, 26455, -3178,  1673,  2012,  1676,   222, 33487,
     591, 24298, 34024, -3178, -3178,   218, -3178,    53, -3178, -3178,
   -3178, -3178,   582,   582,  1711, -3178, -3178, -3178,  1468,   160,
   -3178, -3178, -3178,  1683, -3178, -3178,   348,  2021,  2022, -3178,
    1905,    62,  1905,   348,   348, 22681,   348,  1312, -3178,   729,
    1962, -3178, -3178, -3178, -3178, -3178, -3178, 36172, 34561, -3178,
   -3178, -3178,  2161, -3178,  2166,   694, -3178, 23221,   625,   625,
   -3178,    84,   175, 23221, -3178, -3178, 23221,   218,   729, 23221,
     729,  1430,  1430,  1466,   222,   729, -3178, -3178,  2028,  2030,
   23221, 23221, -3178, 37246, -3178,   222,   105,   218,   218, 23221,
     217,  1430,   729,   729,   660, -3178, -3178, -3178, 21601,  1059,
   37246,  1704, -3178,  2930, 17806, 42079,   267,   339, -3178,  1701,
    1712, -3178,   963, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178,  1795, -3178,  1713, -3178,
   -3178,   176, -3178,  1712, 21601, 17266, -3178,   117, -3178,  1198,
   -3178,   348,  1925,   102,  1468,  1720,   116, 15014, -3178, -3178,
   13888,  1714, -3178, 13888, 13888, -3178, -3178, -3178,   223, -3178,
   36709, -3178, -3178, -3178, -3178, -3178, 13888, 36709,   223, 13888,
   -3178, -3178,  1718, -3178,  2059,  2059, -3178, -3178,  1335, -3178,
   42079, -3178, 13888, -3178, 13888, -3178,  1335, -3178, 13888, -3178,
   13888, 13888, -3178,  1950, -3178, 13888, -3178, 13888, 13888, -3178,
   13888, -3178, -3178, 13888, -3178, 13888, 13888, -3178, -3178,  1951,
   -3178, 13888, 13888, -3178, -3178, 13888, -3178, 13888, -3178, 13888,
   -3178, 13888, -3178, 13888, -3178, 16703, 22681,  1722, -3178, -3178,
   -3178,  1724, -3178, -3178, 13888, 13888, -3178, -3178, 13888, -3178,
   13888, -3178, -3178, -3178, -3178, -3178, -3178, -3178, 13888, 13888,
   -3178, 13888, -3178, 13888, -3178, -3178, 13888, 13888, 13888, -3178,
   13888, -3178, -3178, -3178, -3178, 15577, 13888, 13888, 13888,  1725,
   -3178, -3178, -3178, 13888, 13888, 13888, -3178, 13888,  2116, 13888,
    2117, 13888,  2118, 13888, -3178, 13888,  1959, -3178, -3178, -3178,
   -3178, -3178, 13888, -3178, 13888, -3178,  1745, 13888, -3178, -3178,
    1731,  1732, -3178,  1728,  1729,  1730, 37246, 13888, -3178, -3178,
   -3178, 13888, -3178, -3178, 13888, -3178, -3178, -3178, -3178,   380,
     967,  1733, 16703, -3178,  1617, 16703,  9384,   180,  1617,   123,
   -3178, -3178, -3178,  1738, -3178, -3178,  1739, 42079, -3178, -3178,
   -3178, 42079,  1748, 26994, 35098, 35098, 35098,  1743, 13888, -3178,
   -3178,  1968, -3178, -3178, 21601,  2091, -3178, -3178, 35098, -3178,
     332, 22681, -3178,  1749, -3178,  1749,  -139,  1751,   969, -3178,
   -3178, -3178,  1742,   923,  2135, 35098, 35098, 35098, -3178,  1468,
    1468,   136,  1804,  2085, -3178, -3178, -3178, -3178, 41005, -3178,
   -3178, -3178, -3178,   552, 42079,  2069, 42079,  8821, -3178, -3178,
   -3178,  2254, 13888, -3178, 35098,   -46,   587,   222, -3178, -3178,
   -3178, -3178, -3178, -3178,  1257, -3178, -3178, -3178, -3178,  2051,
   -3178,     1,   746,   598, -3178,  1303, -3178, -3178, -3178,  2092,
     348,  1905,  1905,  2093,  1984,   747,  1762, -3178,   222,  1228,
      36, -3178,   332, -3178, -3178, 13888, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, 13888,
    2095,  2097,   625, -3178, 23221, -3178, -3178,  -157,   110, -3178,
   -3178, -3178, -3178, -3178, -3178, 34561,  1430, -3178, 23221, -3178,
   -3178,   196, -3178,  1430, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, 21601,
   -3178,   975, -3178, -3178, -3178, -3178, 42079, -3178, -3178, 21601,
   -3178, -3178,  3865, 42079, 42079,  2307, -3178, 42079, -3178, -3178,
   -3178, -3178, -3178,  1993,  -110,  2313, -3178, 21601, -3178,  1771,
     977, -3178, -3178, -3178,  2315,  1699, -3178,  1774,  1468,  2088,
   -3178, -3178, 13888,  1775,  1777, -3178, -3178,  1778,  1780,  1780,
   -3178, -3178,  1786,  1780,  2121, -3178,  2122,  1801,  1809,  1810,
    1811,  1813,  1814,  1779, -3178, -3178,  2334,  2334,  1816,  1790,
    1817,  1820,  1822,  1823,  1824,  1826,  1825,  1829,  1830,  1833,
    1834,  1836,  1840,  1841,  1842,  1843,  1845,  1925,  1846,  1847,
    1849,  1851,  1852,  1853,   982,  1854,  1855,   992,   201, -3178,
   -3178, -3178,  1856,  1857,  1861,  1862,  1863,  1864,  1865,  1866,
    1867,  1868,  1870,  1876,  1878, 13888,  1881,   135,   995,  1882,
   -3178,  1884,  1885,  1886,  1888, 13888,  1889, 13888,  1891, 13888,
    1892,  1894,  1895,  1897,  1898, 13888,  2209,  1821,  1818, -3178,
   -3178, -3178, -3178, -3178, -3178,  1879, -3178,  1172, -3178,  1899,
   -3178, -3178, -3178,   379, -3178,  1000,  1900, -3178, 16703, -3178,
   13888,  1901, -3178,  1903, -3178, -3178, -3178, -3178, -3178,  -121,
    -121,  -121, 16140, -3178,  2223, -3178,    44, -3178,  2112, -3178,
   -3178,   890,  1907, -3178,   222, 16140,  1670,  1934, -3178, -3178,
    -139, 22681, 26455, -3178, 35098,  1098,  1098,  1098,  1257,  2164,
    1660,  1660, -3178, 24835, -3178, -3178,  1928, -3178, -3178, 27533,
   -3178,   826, -3178, -3178, 16703,  1186, -3178, -3178, -3178, 36172,
   -3178, -3178,   222,  1908,  1912, -3178, -3178, 41542, 13888, -3178,
    2216, -3178, -3178,  1919,   348,  2011,   348, -3178,  2130,  2131,
     348, -3178, -3178, -3178, 22681,  1468, 16140,   625,   625,   625,
   -3178,   890, -3178,  1911,   791, -3178, 23221, -3178, -3178,  -157,
    1921,  2255,  2261, 23221,  2254, -3178, -3178, -3178, -3178,  3865,
    1016, -3178, 17806, -3178, -3178, -3178,  1926,  1929,  1780, -3178,
   -3178, -3178, -3178, -3178,  1786,  2090, -3178,  1786,  1786, -3178,
   -3178, -3178, -3178, -3178,   170,   184, -3178, -3178,   170, -3178,
   -3178, -3178,    82,   742,  1786, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178,  1780,  1780, -3178, -3178, -3178,   170,  1930, -3178,
    1780,   490, -3178,   138,    74,  1940,  1945,  1780,  1946,  1918,
   -3178,  1018, -3178, -3178,    32, -3178,   638, -3178, -3178, -3178,
    1927, -3178,  2834, -3178,   428, -3178, 42079, -3178,   582, -3178,
    2334, -3178, -3178, -3178,  2042, -3178,   170,  2136, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, 13888,
    1933,  1949,  1952, -3178, -3178, -3178, -3178, -3178, -3178, 13888,
   -3178, -3178, -3178, -3178, -3178, 13888, -3178, -3178, -3178, -3178,
   -3178,  2089, -3178,  2176, 13888, 13888, -3178, -3178, -3178, -3178,
   13888, -3178, -3178, -3178, 13888,  2472,  2144,  1955, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, 13888, -3178, -3178,
   -3178,  2334, -3178, 13888, -3178, -3178, 13888, 13888, -3178, 13888,
   13888, -3178,  1956, -3178,  1957, -3178,  1960, -3178, -3178,  2188,
   -3178, -3178, -3178, -3178, 13888, 13888,   923, 42079, -3178, -3178,
    1963, -3178, -3178, -3178, -3178, -3178, -3178, -3178,   237,  1988,
    1988,  1988,  1186, -3178,  1020, -3178, -3178,  2303, -3178,  1342,
   22681, 16140,  1965,  1966, -3178,    13, -3178, -3178,  1975,  1098,
   -3178,  2483,  2332, -3178, -3178, 37246,  1969, -3178, -3178,  2227,
   -3178,   126,  2152, -3178, -3178, -3178,   -46,  2057,  2068,   222,
   -3178,  1430,  1781,  1452,  2305,   940,  2023,   348,   348,   981,
    2024, 13888, 13888,  1983, -3178,  1925, -3178, -3178, -3178, -3178,
   -3178,  1342, 13888, -3178, -3178, -3178,  1985,  1987, 42079, -3178,
    1766,   267, -3178,   490, -3178, -3178,   -13,  2217,  2218, -3178,
    -134, -3178,  1990,  -134,  -134,  2520,   159, -3178,  2520, 36709,
   -3178,  1029, -3178,  2027,   170, -3178, -3178,  2031, -3178, -3178,
   -3178,  -134,  1996,   170, -3178, -3178,  2226,  -134, -3178, 37246,
    1430,   710, -3178,  2047, -3178,  2452,  2329, -3178,   490, -3178,
    2330,  2233, -3178,  2234, -3178, -3178,  2235, -3178,  2236,  2237,
    -134,  2238, -3178,  -134, 42079, -3178, 42079,  2035,   447, -3178,
   -3178, -3178,  2003,  2010, -3178, -3178, 21601, -3178, -3178, -3178,
   -3178,  2077, 42079,  2035, -3178,    13,   117,  1934, -3178,  1024,
     791,  2016, -3178,  2017,  2018, -3178,  1028,  2019, -3178, -3178,
   -3178,  1030,  2026,   139,  2034,  2037,  2036,  2038,  2040,  2043,
    2280,  2433, -3178,  2045,  2046,  2048,  2050,  2052,  2055,  2056,
   -3178, -3178, -3178,  2041, -3178,  2044, -3178, -3178, -3178,  2058,
   37783, -3178,  2109,  2113, -3178, -3178,  2114, -3178, -3178,   122,
    1044, -3178, -3178, -3178, -3178, 16140,  2356, -3178,   585, -3178,
   -3178, -3178, -3178, 13888, -3178,  1925,  2543, -3178, 24835, -3178,
   -3178, -3178, -3178, -3178,  2060,  2061,  8821,  2596, -3178,   348,
   -3178,  2101, -3178, -3178, -3178,  2106, -3178, -3178, 42079,  2088,
    2066,   585,   791, 42079, 42079,  1034,   -51,   -51,   -51,   607,
     607, -3178, -3178, -3178, -3178,   532,   177, 42079, -3178, -3178,
     543, -3178,  2073,  2074, -3178, -3178, -3178, -3178,  -134, -3178,
     139, -3178, -3178, -3178, -3178, -3178, 36709, -3178, -3178,  2520,
   -3178, -3178, -3178,   139, -3178,  2075, -3178, -3178, -3178,  1086,
   -3178, -3178,  2301,  2107, -3178, -3178, -3178, -3178,  2079,  2081,
    2082,  2083, -3178,  2076, -3178, -3178, -3178,   737, -3178, -3178,
   -3178, -3178, -3178,   880, 42079,  2477,  1430,  2086,  2087, -3178,
   -3178, -3178, -3178, -3178,  2096,   923, -3178, 42079, -3178,  2317,
   -3178, -3178, -3178,  2319, -3178, -3178, 13888, -3178, -3178, -3178,
    1958, -3178, 13888, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, 13888, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178,   195,  2309,   729,   729,   729,   729,  1044,
   -3178, -3178,  2142,  2182, -3178,   142, -3178,   579,   791, 13888,
    1257,   376,  2407, -3178, -3178, -3178, -3178,  2388,  1146, 13888,
    2099, 13888,  2100,  1036, -3178, -3178, 40468, -3178, -3178,  1043,
    1051, -3178, -3178, -3178,   267, -3178, -3178, -3178,   444,   444,
    1053, -3178, -3178, -3178, -3178, -3178,  1060, -3178, -3178, -3178,
    1070, -3178, -3178,  1086, -3178,   170,  2520,   170,  2520,  2604,
    2321,  2607, -3178,  -129, -3178, -3178,  3865, -3178, -3178, -3178,
   42079,  3865, -3178, -3178,   791,  2104,  2105,  1077,  2108,  2115,
    2123, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, 22681,
   21601, -3178,   133, 13888, -3178, -3178, -3178,  2302,  2623,  2626,
    2539,  2631,   376, -3178,   752, -3178,  2535, -3178, -3178, 42079,
   -3178, 42079, -3178, 42079,  2125,  2126,  2294, -3178, -3178, -3178,
    2678, -3178,   620, -3178, -3178,   543, 42079,   170,   139,   170,
   -3178, -3178, -3178, -3178, -3178,  2345, -3178,  2347, -3178,  2129,
     914, -3178,  2561,  2292, -3178, -3178,    13, -3178, -3178, -3178,
   -3178, 13888, -3178, -3178, -3178,  2134, -3178,   222, -3178, -3178,
   -3178,   791, 42079, -3178,   139,   139,  2653,   139, -3178,  2654,
    2656,   752, -3178,   218, 13888,  1082,  1089, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
      13, -3178, -3178, -3178,  2583, 31866,  2289, -3178, -3178,  2145,
   22681, 16140,  2543, -3178, -3178, -3178, -3178,   139, -3178,   139,
     139, -3178,  2691,  2143, -3178, -3178, -3178, -3178, 42079,   111,
   -3178, 43153, 43153, 42079, -3178,  2177, -3178,  3463,   150, -3178,
   -3178,  2141, -3178, -3178,  3865, -3178, -3178, -3178,  2407,  2151,
   -3178, -3178, -3178,  2438, -3178, -3178, -3178,  2542, 42079, -3178,
   -3178, -3178, -3178, 13888, -3178, 13888, -3178, -3178, 31866, 31866,
   -3178, -3178, -3178, 31866, -3178,  2509,  2159,  2579, -3178,  2500,
    2585, 13888, -3178, -3178,  2193, -3178, 29156,  2160, 32408, 13888,
     150, -3178, -3178,  2399,  2173, 13888,  2178,  2175, -3178,   729,
   -3178,  2531,  2194,  2605, 13888, -3178,  2636,  2482,  2179, -3178,
    2180,  2621, 43153,   914,  2499, 18886,  2324, -3178, -3178, -3178,
   -3178, 42079, -3178, -3178,  2205,  2207, -3178, 38320, 29698,  2187,
   -3178, -3178, 13888, -3178, -3178, -3178, 31866, -3178, -3178, 37246,
    1091, -3178, -3178, 22681, -3178, -3178,  2195, -3178, 31866, -3178,
   -3178,  2620, -3178, -3178,  2564,  2198,  1069, -3178,  2196, -3178,
    2627, 31866, -3178, -3178, -3178, 21056,  2134, 42079, 28072, 31866,
    2213,  2599, 42079,  3865,  2600,  2601, -3178,  2376, 30240, -3178,
   -3178,    99, 28614, -3178, -3178, -3178,  2663,   588, -3178, -3178,
    2239, -3178, 31866, -3178,   649, 32950, 13888, -3178,  2249, -3178,
   -3178, -3178,  3463, -3178, -3178, 30782, -3178, 31866, -3178, -3178,
   -3178, 25372, -3178, -3178,  2606, -3178, -3178, -3178,  1335, -3178,
   -3178, 31324, 32950, -3178, -3178, -3178, -3178
};

/* YYPGOTO[NTERM-NUM].  */
static const short int yypgoto[] =
{
   -3178, -3178, -3178, -3177, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178,   984, -3178, -3178, -3178, -3178, -3178,  1224, -1377,
   -3178, -3178, -3178, -3178, -3178,   319,    18, -3178, -3178, -3178,
   -3178, -3178, -3178,  2103,  -735, -3000, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178,  -401,  -517, -3178, -3178,  -388,
   -3178, -3178, -2313, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,  -821, -3178,  -854, -3178, -3178, -1416, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178,  -822, -3178, -3178,
   -3178, -3178, -2693, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
    -720, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
    -215, -3178, -3178, -1804, -3178, -3178, -3178,  1667, -3178,  1737,
   -3178,  2403, -3178,  -319,    63,  1268, -1799, -1005,  -527,  -507,
   -1596, -3178, -3178, -3178,  -305, -3178, -3178,   783,   137,  1277,
    1304,   830,   878, -3178, -3178,   158, -3178, -2583, -3178, -3178,
   -3178,   140, -3178,   141, -3178, -3178, -3178, -1358,    94, -1649,
   -3178,  -315, -1278, -3178,  -109, -3178,  -153, -3178,  -427, -1991,
   -1747, -3178, -3178,  -142,   164,   211, -3178, -2592, -2178, -3178,
   -3178,  -525, -3178, -3178, -3178,  -533, -3178,  -297,  -442, -3178,
   -3178, -1439, -1721, -3178, -3178, -2142,  1689, -2632,  -358, -1815,
   -3178,  -312, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,   859, -3178, -3178, -3178, -1146,  -250, -1289, -2698, -3178,
   -3178, -3178, -3178, -3178, -3178,   652, -3178, -3178,  1369,  1815,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,   997, -3178, -3178, -3178, -3178, -3178,  -848,  1715, -3178,
   -3178, -3178,  1213, -3178, -3178, -3178, -3178,  1434, -3178, -3178,
    2156, -3178, -3178, -3178, -3178,   606,  1022, -3178, -3178, -3178,
    2181,   988,  -454, -1698, -3178,  2387, -3178, -3178, -3178, -1239,
   -1917, -3178,  2245,  -390, -1736,  1431,  -704,     3, -3178,  -201,
    -730,  4727, -3178, -3178, -1222, -3178, -3178,  -767, -3178, -3178,
   -1253, -1160,  1543,  1536,   225,   300,   172, -3178, -3178,  -485,
   -3178, -3178, -3178, -1226,  -697, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178,     5, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -1117, -3178,   806, -3178, -1085, -3178, -3178,
   -3178,  1639, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -1842,
   -1426,   228, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -1822, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -1292,
   -3178, -1722, -3178,  -968, -3178, -3178,  -397, -2061, -1153,   412,
   -3178, -3178,  -937,  1694, -1529, -3178, -3178, -3178,   655, -3178,
   -3178, -3178, -1959, -1016, -3178, -3178, -2135,  -607, -1775,  -578,
   -3178, -1795,  -236, -1139, -1827, -3178, -3178, -3178, -3178,  -675,
   -3178, -3178, -3178,  -212,  1009, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178,  -452,  -346,   715, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178,  1923,  1902,  1052, -3178, -3178, -2011,
   -3178, -3178,  1027, -3178,    12, -1803,   976,   298, -3178, -3178,
     303, -2542, -3178, -3178, -3178, -3178, -3178, -3178,   245,  -688,
    -550,  2436, -3178, -3178, -3178, -3178, -3178, -3178,  2163,  1740,
   -1387,  2381, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,  2450, -3178,  -947, -3178,  -369, -3178, -3178,  -582, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,  1521, -3178,
   -3178, -3178, -3178, -3178,  1916, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178,   325,  -539, -3178,  -438,  -573, -3178,  -505, -3178, -3178,
   -3178,  -687, -3178,  -741,  -659,  -996,   -62, -2090, -1428,   321,
    1914, -2695, -1101, -1257, -1259, -1764,    21, -3178,    -7,  -504,
    -425,  -907,  2695, -3139,  -405,  -501, -3178,  -173, -3178, -3178,
   -3178, -3178,  1479, -3178, -3178, -3178, -3178,   618, -3178, -3178,
   -3178,   288, -3178,    20,  -179, -3178, -3178,   434, -3178,  1522,
   -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178,  1936,  2480,  2331, -3178,  1971, -3178,
   -3178, -3178, -3178, -3178,  -307, -3178,   -36, -3178, -1078,  1819,
     312, -3178,   696,  -875, -1155, -3178,  -311, -3178, -3178,   295,
    2490,  2335, -3178, -3178, -3178, -3178, -3178, -2181,  -580, -3178,
   -2256, -3178, -3178, -3178, -3178, -1125, -3178, -3178,  1641,  -124,
   -3178, -3178,   431, -3178, -3178,   -94, -3178,  2451,  2210, -3178,
     915, -3178,   197, -3178, -3178,   -79, -3178, -3178, -3178, -3178,
   -3178, -3178, -3178, -3178, -3178,   903, -3178, -3178, -3178, -3178,
   -3178, -3178
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1964
static const short int yytable[] =
{
     373,   698,   663,  1132,  1133,  1134,   550,   985,  1063,   634,
     904,  1177,   373,  1600,  1446,   373,  1168,  1169,  1171,  1727,
    1391,  1726,   373,   656,   656,   656,  1027,   656,  1007,   656,
     689,   690,   373,  1153,  1012,  1634,  2178,  1601,  1602,  1603,
    2247,  2229,   373,   408,  1481,  1233,  1747,  2623,  2293,  2448,
    1615,  2022,  1028,  1755,  2305,  1012,  2451,  1934,  1535,   963,
     906,  1632,  2315,  2429,  2319,  2277,  2282,  2285,   966,  1529,
    1950,  1788,  2583,  1744,  1606,  1607,  2923,  1609,  1455,  1624,
     373,  2314,  1693,  1235,  2266,  1892, -1477,  2297,  2298,  1458,
    1459,  1771,  1773,  2945,  2906,  2205,  2946,   648, -1108,  1261,
     373,   373,  1265,   373,  1673, -1478,  2975,  1677,   463,  1259,
    2349, -1812,  1643,   942,   373,  2955,  -250,  -251,  2347,  1671,
    -240,  2974,  1274,  1275,  1276, -1876,   468,  1663,   469,   977,
    2368,  2369, -1813,  1357,   942,  1704,  1705,  2947,  3222,  2548,
    1710,  2339,   478,   484,  1069,  1683,  1684,  1685,   942,  1759,
    1965,  1761,   604,   605,  3015,  1395,  1692,  2024,  2935,   937,
    1725,   706,  1729,  2336,  1070,  1285,  1286,  1287,  1114,  2336,
    2936,  2330,  2348,   652,  1075,  2351,   717,  1858,  3487,  3134,
    2313,  1406,   106,  2937,  1908,  1325,  2360,  2361,  1268,   414,
    2935,  -330,   604,   605,  3080,  2370,  2163,  2295,  2026,  1085,
    1926,  2637,  2936,   934,  2935,  2650,  1009,  2337,  2338,  1573,
    1586,  2419,  1927,   604,   605,  2937,  2936,  3102,  1086,  3389,
    2426,  1065,  1065,  3113,   604,   605,  1078,  1763,   972,  2937,
    1539,  3611,  2339,  1111,   681,  2578,  2651,   943,   604,  2941,
    2146,  1882,   656,  1349,  1357,   543,  2638,   997,  1764,  2989,
    2340,  1422,  1023,  3052,  2421,  2438,  1002,  2990,   943,  2133,
   -1934,  1013,   107,   555,  2590,  2364,  1031,   810,  1115, -1477,
    3115,  1116,   943,   564,  1966,  2396,  2848,   810,  2439,  1879,
    3486,  1840,  3476,  1117,  2259,   654,  3105, -1108,  2410,  3268,
    2613,   455,  2310,  2726,   494,  3052,   498,  1412,  1021,  3124,
    -330,  2006,   547,  2813,   948,  2311, -1352,  2614,  1928,   415,
    2262,  1034,  3480,  3481,  1319,  1646,  1423,  2440,  1647,  3070,
    2441,  1594,  1988,  2571,  3116,  2371,  2202,  2421,  2442,   551,
   -1477,  1029,   654,   429,  1041,  1025,   439,  1138,   653,   437,
    1003,  -331,  2365,   438,   588,  1834,   108,  1085,  2009, -1478,
     499,  1936,  3140,  1269,  1939, -1812,   428,  2362, -1934,  2300,
    1139,  3144,  1574,  1951,  1914,   121,  1086,  2010,   604,   605,
    3422,  2089,  1959,  1026,  2388,  3125, -1813,  1485,  3238,  1595,
    1989,   109,  2991,  1842,  1843,  1030,  1536,  1765,   440,  1477,
     373,  1313,   961,  3555, -1108,  2411,  2339,  1042,  2263,   716,
     373,  1047,  1424,  2195,   373,  2641,  1985,  1413,  1118,   373,
    3126,  1995,  1869,  3488,   373,   475,  1596,  2001,  2166,   552,
    2004,  2577,   106,  3053,  2007,   654,  2795,  2397, -1477,  2260,
    2615,   456,  1448,  2366,  3477,   654,   373,   560,   119,  2422,
    1454,  1131,  1349,   378,   379,  3639, -1352, -1478,  2341,  1175,
    2727,  1870,  1112,   373,   589,  1360,  1460,  1461,   500,  1175,
     691,   417,  1654,   373,  1352,  3053,   423,   373,  2312,  1883,
     427,  3259,  3260,   373,  2031,   373,   373,  1880,  1597,  1990,
     373,   373,  1482,   553,  2618,  2591,  1358,  1119,  2627,  1425,
     373,   674,  3349,  1432,   373,  2430,   545,  1320,  -330,   373,
     373,  1537,   373,   373,   373,   373,  1024,  2917,  1393,  1888,
   -1108,  3328,  2422,  2958,  1449,  2636,   983,   707,  1402,  1176,
     471,  3329,   565,  3231,  1529,   900,  1350,   902,   903,  2649,
    1721,  1004,   590,  3422,   998,  1934,  2652,   110,   373,  -331,
    1069,  3390,  2443,  2656,  3489,  1827,  -492,  3117,  1598,  1991,
     473,  1766,  2639,  2959,   373,  2107,  1394,  2960,   556,  2111,
    1070,  3054,   373,   373,  1835,   544,  3348,   373,   416,  2866,
    1834,   682,  1080,  1929,   373,  1540,  1934,  1467,  2196,   935,
    2336,  1575,   957,  2296,  1312,  1727,  2164,  2251,  2342,  2628,
    2629,   969,  2149,  -137,  2336,  2428,   938,  1358,  2961,  1069,
    2204,   676,   972,  2304,   373,  2208,  2209,  2948,  2654,  3072,
    2180,  1758,   585,  1396,  1035,   654, -1477,  1967,  2210,  1070,
    2211,  2648,  2267,   656,  3081,   972,  2735,  1779,  3391,  1312,
    1270,  2147,  2201, -1108,  2976, -1478,  2026,  1005,  -330,   708,
    2938, -1812,  1080,  -558,  1486,  3612,  1727,  1080,  2318,  1915,
    1581, -1477,  2181,  1782,  1014,  3046,  2444, -1876,  3056,  1330,
     373,  3135, -1813, -1108,  1871,  1457,  2972, -1108,   373,  2025,
   -1478,   373,  2938,  1312,   373,   373, -1812,  1080, -1108,  -331,
   -1963,  -250,  -251,  1435,  3490,  -240,  2938,  2412,  3269,  3055,
   -1876,  1022,  1594,  3361,  1006,  3363,  2814, -1813,  2973,  1648,
    3056,   447,  1649,   478,  2445,  3265,   488,  1836,  2942,  2709,
     373,   754,   373,  3371,  1599,  1992,  1036,  1468,  3375,  3330,
     511,  1469,  -463,  2399,  1565,  1350,  1374,  1331,  3411,  1053,
    2588,  2589,  2446,  1914,  1541,  1037,  2796,   692,  1137,  2197,
    1142,   569,   448,  2997,   731,  1321,  1322,  1323,  1010,  3182,
    1595,  1312,  1352,   810,  1080,  2198,  1855,  3133,   489,  2284,
    3138,   382,  1335,  1926,  1594,  3415,   377,  3417,  1467,   767,
    2323,  2861,  3350,  2247,  2183,  3057,   591,   592,   593,   594,
     595,   596,   421,  1487,  2895,  1408,  3289,  1596,  2899,  1835,
    1822,    40,   597,   572,  3290,  1488,   950,  1590,  2040,  2350,
    1288,  2352,  1748,  2333,  2896,   576,  2357,  3106,  2900,  2886,
    2913,   449,   395,  2870,   754,   696,   697,  1752,   380,   491,
    2962,  2372,  1595,  2374,  2375,  2379,  3115,  2963,  2456,  2457,
    3112,  2916,  1010,  1594,  2047,  2859,  1352,   513,  1085,  2184,
    1352,   441,  2041,  1441,   383,  3351,  1480,  2189,  1840,  1597,
    2190,  3331,   562,  3571,  2964,  1787,  1339,  1086,   571,  1596,
     373,  2998,   373,  1948,  1340,   765,   668,  3169,   794,  1885,
    3352,  3112,   767,  1887,  1913,  3188,  1890,  1891,   650,  2048,
    3116,  3494,  2336,  -497,  3266,   442,  1446,  1446,  1742,  3467,
     434,  1595,  1829,   951,   373,   577,   396,  1830,  1831,  2737,
     373,  1054,  1848,  1012,  2914,  2911,  1823,  1591,  1468,   782,
    1085,   654,  1469,  1442,  2965,  1793,   458,  1375,  2334,  1598,
     810,  1597,  1355,   715,  1590,  2622,  1874,  1341,  1596,  1086,
    3008,    51,  1836,  3640,   397,  1175,   818,   373,   815,   373,
    1631,   373,  2301,  3012,  1781,  2488,  3099,   573,  3139,   470,
    3412,  1489,  2544,   373,   373,   459,  1789,  1535,  1307,   578,
    2449,  3279,  1114,   373,   373,  2454,  3267,  3258,  1529,  2537,
    2320,   794,   696,   697,   373,  1343,  1409,  1749,  1855,  1308,
    2462,  1487,  1727,  1919,  2574,  2216,   952,  2467,  3007,  3291,
    1597,  1598,  2217,  1488,  2966,  1260,   373,   373,   373,   373,
    1872,   460,  2476,  2477,  3303,  2489,   373,  3170,   373,  2481,
    3606,  1590,  2185,  1590,   373,  1095,  1096,  2486,  1915,  2999,
    1490,  1436,  1437,  1376,   373,  1897,  1438,  1439,   810,  1856,
    3618,  1447,  3421,  2376,  1614,   450,  2377,  3149,   465,  1453,
     814,   815,  1986,  1987,  1491,  1994,   669,  1996,  1997,  1998,
    1999,  2000,  1456,  2002,  2003,   451,  2504,   114,   696,   697,
    1598,  1949,  1115,  1824,  1901,  1116,  1897,  2207,   516,   517,
     373,   670,  2657,   373,  2539,  3092,  3093,  1117,   654,  1443,
     452,  2546,  1376,   -55,  2632,  1599,  3086,   398,  1344,  2431,
     643,   644,  1038,   647,   471,  1492,   910,  2989,  1538,  3000,
    1346,   983,  1175,  3325,   847,  2990,  2905,  1590,  3362,   384,
    3364,   507,  2216,   509,  3322,   510,  3240,   512,  1309,  2599,
    3428,  1672,   373,  1676,   373,   373,   373,   453,   373,  2381,
    2382,  2554,  1106,  1107,   115,  1079,   693,   373,  1750,   373,
     518,  3323,  -256,   385,  3594,  3278,  2559,  2560,  2561,  1489,
    1568,  1569,  1480,   480,  1751,  1898,  1571,  1599,  3595, -1931,
     481,  2746,  1264,  1039,  3446,  2750,  1493,  2383,   519,  3377,
    1899,  1310,   484,   373,   386,   926,  3508,  2585,  2586,  2587,
     911,  3626,   520,  1900,   387,   495,   654,  1840,  3107,  2384,
     117,  3108,   118,  1841,   399,  3627,  1898,   694,  2907,  2907,
    2907,   845,  1118,  3184,   521,  3399,  2881,   847,   542,   400,
     848,  1899,  1080,   373,   117,   522,   118,  1709,  1490,  2882,
    2385,  1498,  1499,  1934,  1900,   497,  1599,  3400,   907,  1352,
    2991,  1897,  3224,   405,   422,   401,   912,   559,   927,   696,
     697,   418,  1491,   385,   523,  1371,   424,  3248,  1372,  2883,
     402,  1373,  -449,  -449,  1501,  3588,  3433,  1901,   696,   697,
     913,  -449,  3109,  3110,  2633,  1502,   486,  2949,  3598,   524,
    2950,   373,  1315,  1316,  1503,   525,  3602,  3090,  3405,   928,
    3406,  1119,  1311,  1312,  3131,  3132,   373,  1317,  1318,  1842,
    1843,  1505,   505,  1492,   929,  2844,  1352,   563,  1901,  3625,
    1736,  1737,  3142,  2761,  2762,   573,  1065,   645,  3146,  1506,
    2029,  2030,   526,  1897,  3641, -1108,  2930,   664,  3094,  2933,
    2934,   545,  1727,   675,  2251,  2061,  2062,  1844,  3225,  3226,
     942,  3162,  3227,  3228,  3164,   676,  2951,   685,  1511,  1802,
     705,  1803,   373,   106,   914,   898,  1902,   373,   901,   373,
     915,   908,   658,   659,   373,   660,   923,   661,  2270,   925,
     373,  1898,   373,   930,  1493,  2063,  2064,   373,   373,   932,
     373,   941,  1850,  1851,  1852,  1727,  1899,  2318,   916,  2067,
    2068,   109,   373,  2074,  2075,   373,   940,  1902,  1897,  1900,
    2929,   373,   373,   373,   373,  1799,  1799, -1108,  1799,   955,
    1903,   373,   373,   373,   956,  2079,  2080,  2082,  2083,   964,
    1821,  1514,   975,   957,   917,  2084,  2085,   976,  1515,   373,
     980,   969,  1833,   527,  2953,  2954,   983,  2538,   373,  1799,
    1799,  1799,  2957,   979,   918,  2096,  2097,  2353,  2354,  2980,
     528,  1903,  2386,  1898,   986,   373,   529,  2100,  2101,   919,
     373,   118,   530,   995,   943,   996,  2840,  2373,  1899,  2113,
    2114,  2782,   373,  1901,  2283,  3327,  2287,  2292,   373,  2117,
    2118,  1900,  2119,  2120,  2127,  2128,   531, -1108,  1889,   994,
   -1108,  2130,  2131,  3337,  1516,  2139,  2140,   532,   533,  2152,
    2153,  1774,  1775,  1776,  1777,  1778,  1907,  1001,  1517,  2171,
    2172,  2192,  2193, -1108,  1010,  2543,  2869,  2173,  2174, -1108,
    1000,  2550,  2329,  2283,  2220,  2221,  2355,  1015,  1898,  1016,
     604,   605, -1108,   534,  2406,  2407,   373, -1108,  2540,  2541,
    2580,  2581,  1019,  1899, -1108,   373,  2661,  2662,  2732,  2662,
    1768,  1769, -1108,  2789,  2790,  1901,  2625,  1017,  1009,  1519,
    1020,  1520,  1902,  2793,  2794, -1108,  2815,  2816,  1018, -1108,
    1033,  2841,  2842,   373,  1032,  1009,  1046,   535, -1108,   536,
    1048,   373,  1521,  1522,   373,  1523,  3442,  2924,  1080,  2985,
    2986,  3064,  3065,  1049,  3431,  3186,  3187,  3013,  2012,  3192,
    3193,  3195,  3196,  1051,  3368,  3261,  3187,  3342,  3343,  2020,
    1056,  1727,  1076,  2574,  3346,  3187,  1903,  1298,  1299,  1804,
    1077,  1525,  3347,  3187,  3355,  3356,  -529,  1770,  1772,  1496,
    1901,  3357,  3358,  1498,  1499,  1123,  1497,  1805,  1124, -1108,
    1125,  3359,  3358,  2458,  1902,  2283,  1498,  1499,  3380,  3381,
    1129,  2463,  2283,  3444,  3343,  1300,  1127,  1806,  1130, -1108,
    3445,  3343,  3584,  3585,  -449,  -449,  1501, -1108,  3034,  1301,
    1131,  1807,  1135,  -449,  1144,  1500,  1146,  1502,  1148,  1501,
    2909,  2910,  1149,   985,  1713,  1714,  1503,  1150, -1108,  1151,
    1502,  3262,  3263,  2873,  2874,  2850,  2851,  2619,  1903,  1503,
    1152,  1302,  1526,  1505,  1504,  3062,  3063,  1154,  1155,  1156,
    1157,  1527,  1158,  1303,  1808,  1809,  1505,  1159,  1065,  1902,
    1160,  1506,  1295,  1161,  1162,  1163,  1012,  1164, -1108,  2621,
    1165,  1065,  1498,  1499,  1506,  1166,  1167,  1170,  1172,  1173,
    1304,  1314,  1810,  1507,  1508,  1174,   373,  2570, -1108,  1509,
    1511,  1351,  1446,  1354,  1178,  1179,  1180,  1510,  1181,  1182,
    1183,  1184,  1185,  1511,  1186,  1501,  1364,  3049,  1365,  1187,
    2425,  1188,  1189,  1903,  2597,  1190,  1502,  1191,  1192,  1193,
    1194,  1195, -1108,  1386,  1196,  1503,  1197,  1198,  1512,  1199,
    1200,  2535,  1387,  2612, -1108,  1201,  1305,  1202,  1356,  1203,
    1811,  1204,  1505,  1390,  1205,  1206,  1208,  1209,  1210,   942,
     731,  1211,  1212,  1213,  1324,  1214,  1215,  1065,  1216,  1217,
    1506,   654,  1221,  1514,  1222, -1108,  1223,  1366,  1224,  1225,
    1515,  1226,  1227,  1228,  1513,  1229,  1514,  1230, -1108, -1108,
    1812,  1231,  1232,  1515,  1234,  1236,  1237,   373,  1238,  1511,
    1239,  1240,  1241,  1242,  1243, -1108,  2014, -1108,  1244,  1245,
    1246,  1247,  2655,  1248,  1249,   373,   373,  1250,  1251,  2658,
    1252,  1253,   373,  3106,   373,   373, -1108,  1368,  1254,  1255,
     754,  1256,  1392, -1108, -1108,  1257,  1258,  1262,  1263,  1266,
   -1108,  1267,  1271,  1272,  1273,  1277,  1516,  1278,  1279,  1280,
    1281,  1282,  1361,  1353,  1369,  1399,  1401,  1430,   373,  1516,
    1517,  1398,  1400,  1407,  1415,  1421,   547,  1153,  1434,  1450,
     373,   373,  1514,  1517,  1462,  1466,  1478,  1464,  1518,  1515,
     373,   765,  1542,   943,  1543,  1545,   373,  1544,   767,   373,
    1546,  1547,   373,  1548,  1549,  1550,  1551,  2660,  1552,  1553,
    1554,  1555,  1556,   373,   373,  1557,   373,  1558,  1559, -1108,
    2283,  1519,   373,  1520,  1560,  3088,  1561,  1564,  1480,  1566,
    1570,   373,  1578,   373,  1519,   782,  1520,   373,   373,  1349,
    1590,  1270, -1108,  1583,  1521,  1522,  1618,  1523, -1108,  1638,
    1652,  1669,  1733,  1701,  1724,  1516,  1738,  1521,  1522,  2380,
    1523,  1743,  1757,  1760,  1791,  1780, -1108,  1790,  1818,  1517,
    1849,  1815,  1875, -1108,  1524,  1863,  1877,   373,   373,  3456,
    1884, -1108,  1905,  1525,  1906,  1909,  1910,  1912,  1920,  1921,
    1922,  2996,   517,  1923, -1108,  1925,  1525,   794, -1108,  1924,
    1926,  1943,  1944,   373,  1947,  2416,  1954, -1108,  1946,  1952,
     373,  1955,  1973,  2021,  2025,  2027,  2028,  2038,  2032,  2035,
    1519,  2036,  1520,   373,  1093,  1094,  1095,  1096,  1097,  1098,
    1727,  2034,  1099,  1100,  1101,  1102,  1103,  1104,  2037,  1105,
    2039,  2042,  2043,  1521,  1522,  2044,  1523,  3511,  2045,  2046,
    2049,  2051,  2052,  3308,   810,  2053,  3314,  3315,  3316,  3317,
    3528,  2054,  3528,   518,  1526,  2055,   814,   815, -1108,   373,
    2056,  2057,  2059,  1527,  2058,  2060,  2065,  1526,  2071,  2066,
    2069,  2076,  1525,  2070,  2072,  2073,  1527,  2077, -1108,  2078,
    2081,   519,  2086,  2182,  2087,  2090, -1108,  2105,  2091,  3310,
    2187,  2219,  3578,  2092,  2094,   520,  2232,  2093,  -774,  2095,
    3582,  2098,  2550,  2099,  2102,  2103,  2104, -1108,  2199,  2106,
    2108,  2109,  2110,  2112,  2206,  2115,  2116,   521,  2121,  2122,
    2015,  2129,  2123,  2124,  2125,  2126,  2132,  1312,   522,  2134,
    2135,  1727,  3528,  1106,  1107,  -529,  2224,  2136,  2137,   373,
    2138,  -529,  3528,  2141,  2142,  2143,  3528, -1108,  2878,  2144,
    2225,  2145,  2148,  1526,  2150,  2151,  2156,   523,  2154,  2155,
    2165,  2167,  1527,  2168,  2329,  2169,  2170, -1108,  2175,  3528,
     373,  -950,  2226,  1080,   373,  3643,   373,   373,   373,   373,
    2222,  2223,   524,  2234,  2236,  3528,  2237,   373,   525,  2238,
    2242,   373,  2254,  2255,   373,  2256,  2257,  1856,  1855,  2275,
    2274, -1108,   654,  2276,  3107,  2302,  2299,  3108,   373,   373,
     373,  2306,  2307,  2308,  2331,  1821,   985,   845,  2324,  2332,
    2358,   373,  2359,   847,  2389,   526,   848,   373,  2403,   373,
    1480,  2408,  2404,  2409,  1584,  2435,  1727,   373,  3562,  2455,
     786,  2468,  2478,  2490, -1108,  2491,  2510,  2515,  2517,  2519,
    2522,  2525,  2530,  2531,  2542,  2532,  2533,  2534, -1108,  2549,
   -1004,  2568,  2557,  2562,  1727,  2564,  2584,   582,   517,  2582,
    2596,  2576,  2579,  2601, -1108,  2595, -1108,  2609,  3109,  3110,
    2620,  2631,  2626,  2630,  2634,  2722,  1727,  2646,  3562,  2647,
    2725,  2729,  2731,  2733,  2736,  2738,  2741,   373,  2742,  2743,
    2744,  2759, -1108, -1108,  2751,  2752,  2747,  2833,   373, -1108,
    2835,   373,  2856,  2858,  1840,  2871,  2879,  2217,  2891,  2894,
    2897,  2898,  2753,  2919,  3198,  1177,  1261,  1265,  2834,  2920,
    2754,  2755,  2756,  3014,  2757,  2758,   527,  2763,  2764,   518,
    3540,  2765,   373,  2766,  2767,  2768,  2770,  3087,  2769,   373,
    2771,  2772,   373,   528,  2773,  2774,   373,   373,  2775,   529,
     373,  2776,  2777,  2778,  2779,   530,  2780,   519,  2783,  2784,
     373,  2785,  2786,  2787,  2788,  2791,  2792,  2798,  2799,  3282,
    2664,   520,  2800,  2801,  2802,  2803,  2804,  2805,  2806,   531,
    2807,  2808,  1326,  1327,  1328,  1329,  1330,  2809,  2730,  2810,
     532,   533,  2812,   521,  2817,  2818,  2837,  2819,  2820,  2821,
    2823,  2931,  2825,  2827,   522,  2828,  3148,  2829,  2830,  2831,
    2839,  2843,  1918,  2846,  2847,  3292,  3293,  3016,  2887,  2860,
    3077,  3277,  2888,  2912,  1937,  1938,   534,  1940,  1941,  1942,
    2892,  2918,  1945,   523,  3277,  2984,  2927,  1953,  3004,  2928,
    2956,  1956,  1957,  1958,  3018,  1960,  1961,  1962,  1963,  1964,
    2978,  1969,  1970,  1971,  1331,  2979,  2981,  3025,   524,  3136,
    3019,  3023,  3030,  3020,   525,  3031,  3032,  3040,  3041,  3043,
     535,  3042,   536,  3060,  3048,  3067,  3071,  3073,  3065,  3074,
    3079,  3078,  3082,  3084,  2283,  3089,  1332,  1333,  1334,  1335,
   -1040, -1045,  2599,  3098,  3085,  3103,  2270,  3104,  3122,  3123,
    3130,   526,  2975,  3360,  2329,  2972,  3143,  3145,  3152,  3141,
    3153,  3154,  3156,  3157,  3172,  3158,  3159,  3160,  3161,  3163,
    3167,     1,  3173,  3176,   373,   373,  3189,   373,  3190,  3191,
    3194,     2,     3,  3205,  3206,  3219,   373,  3197,  3232,  3220,
    3221,  3215,   373,  3372,     4,  3199,     5,  3201,   656,  3200,
    3202,  3203,   373,  3214,  3204,   985,  3207,  3208,  3241,  3209,
     373,  3210,  3247,  3211,     6,     7,  3212,  3213,  3250,  3217,
       8,  3244,  3245,  3252,     9,    10,  3256,   373,  3283,  1336,
    3284,  1337,  1338,  1339,  3273,  3274,  3281,    11,  3193,   373,
    3285,  1340,  3286,  3287,  3288,  3297,   373,  3299,  3305,  3300,
    3306,  3313,    12,  3319,  3320,   373,  3334,  3302,  3336,  3339,
    3341,  3365,   527,  3366,  3367,  3378,  3379,  3394,  3392,  3382,
    3395,    13,  3298,  2878,  3396,  3397,  3383,  3403,  2399,   528,
      14,    15,    16,  3410,  3384,   529,  3408,  3418,  2407,  3419,
    3420,   530,  3426,    17,    18,  3427,  3430,  3437,  3439,  3416,
    3440,  3447,   374,  3463,  1341,   656,  3465,  3473,  3474,  3484,
    3492,  3496,  3497,  3498,   404,   531,    19,   410,   656,  3513,
   -1164,  3519,  3520,  3521,   419,  3525,   532,   533,  3529,   373,
    3534,  2283,    20,  3535,   430,  3435,  3436,  3539,  3438,  3538,
    3542,  3543,  3547,  3544,   446,  3550,  3553,  3551,  3557, -1734,
    3563,  1342,  1343,  3569,  3570,  3579,    21,  3587,  3590,  3591,
    3592,  3603,   534,    22,  3596,  3597,    23,  3604,  3607,  3608,
    3609,  3616,  3637,  3623,  2218,  3644,  1073,  3533,  3470,  3301,
    3471,  3472,   464,  3374,  2005,  3295,  3619,    24,  3646,  3624,
    3532,  3183,  3515,  1563,   496,  3006,  3257,  1972,  2420,  2925,
    1930,    25,   467,   374,  1484,   374,   535,  2400,   536,  2343,
    1976,  2921,  2982,  3275,  3114,  3155,   464,  3147,  2922,    26,
    2885,  3409,  3413,  3272,    27,  2943,  2944,  3354,  1577,  3304,
     373,  3280,  2390,  1894,  1832,  3515,  2239,  1562,  1084,  3369,
    2567,  2258,   662,  2235,   990,  3321,  1854,  1061,  3050,  3218,
    1767,  3051,  2893,   373,  2452,  1762,  1668,  1498,  1499,  3345,
    1465,  1616,  2547,  3255,  3565,  1344,  3243,  2265,   373,  2231,
    2245,  1385,  3069,  1403,  2864,  3586,  1345,  1346,  2863,  2904,
    3466,   651,  1141,   724,  1582,  3424,   637,  1792,  -449,  -449,
    1501,  2857,  1405,  3468,  3398,  3495,  3441,  -449,  3599,  3151,
    1864,  1502,  2867,  1419,  2617,  2889,  3083,  3246,   584,    28,
    1503,   373,  1378,   978,  1826,  1410,  3312,  2556,  3318,   586,
    2356,   982,  3216,   677,  3181,  1136,  3003,  1505,  2415,  1734,
      29,  2363,   373,   656,     0,     0,  1496,    30,     0,     0,
       0,     0,  1065,  1497,     0,  1506,     0,     0,     0,     0,
    1567,     0,   373,  1498,  1499,     0,     0,    31,     0,    32,
      33,     0,     0,    34,     0,     0,    35,     0,    36,   656,
     656,     0,   656,    37,  1511,    38,     0,   373,     0,   373,
       0,     0,  1500,     0,    39,     0,  1501,     0,    40,   373,
       0,     0,     0,     0,    41,   373,     0,  1502,     0,    42,
       0,     0,     0,    43,     0,     0,  1503,     0,     0,     0,
       0,  1504,   656,     0,   656,   656,     0,  3175,     0,     0,
       0,     0,    44,  1505,     0,     0,    45,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1065,     0,
       0,  1506,     0,   373,     0,     0,     0,  1514,  3424,     0,
    1507,     0,     0,     0,  1515,     0,  1509,     0,     0,     0,
      46,     0,     0,     0,  1510,     0,     0,     0,     0,     0,
    1511,   373,     0,     0,     0,     0,    47,     0,     0,    48,
       0,     0,     0,     0,    49,     0,     0,     0,     0,     0,
       0,   373,   508,     0,     0,  1512,   373,   373,     0,     0,
       0,     0,   541,     0,     0,     0,   549,    50,     0,     0,
     373,   464,     0,     0,     0,     0,   568,     0,     0,     0,
    1516,     0,     0,     0,     0,     0,     0,     0,    51,   373,
    3634,     0,     0,     0,  1517,     0,     0,     0,   464,     0,
       0,     0,     0,  1514,     0,     0,     0,     0,     0,     0,
    1515,     0,     0,     0,  3583,   665,     0,  3634,     0,     0,
       0,     0,     0,     0,     0,   464,     0,   373,     0,   464,
       0,     0,     0,     0,     0,   687,     0,   464,   464,     0,
     373,     0,   699,   549,     0,  1519,     0,  1520,     0,     0,
       0,     0,   718,     0,     0,     0,   723,     0,     0,     0,
       0,   899,   374,     0,   374,   374,   549,   464,  1521,  1522,
       0,  1523,     0,  3645,     0,     0,  1516,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1517,     0,     0,     0,     0,  1518,     0,     0,     0,     0,
     947,     0,     0,     0,     0,     0,     0,  1525,     0,   373,
       0,     0,  3462,     0,     0,     0,   464,     0,     0,     0,
       0,     0,     0,     0,   549,   464,     0,     0,     0,   464,
       0,     0,     0,     0,     0,  1480,   464,     0,  3462,  3462,
       0,  1519,     0,  1520,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   373,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1521,  1522,   549,  1523,     0,     0,
       0,     0,   373,   373,     0,  3462,  3462,     0,     0,     0,
    3462,  1524,     0,     0,     0,     0,     0,     0,  1526,     0,
       0,     0,   373,  3462,   373,  3462,   373,  1527,     0,     0,
       0,  3388,     0,  1525,     0,     0,     0,     0,     0,   373,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3462,
       0,     0,  1064,     0,     0,     0,     0,     0,     0,     0,
     549,     0,     0,   464,     0,  3462,  1083,   464,     0,     0,
       0,     0,     0,  3462,     0,   373,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3462,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3462,     0,
       0,     0,   464,     0,  1143,  3462,  3462,     0,  3460,     0,
       0,     0,     0,   373,  1526,  3462,     0,     0,     0,  3462,
       0,     0,     0,  1527,     0,     0,     0,     0,     0,  3462,
       0,   373,     0,     0,  3460,  3460,   373,     0,     0,     0,
       0,     0,  3462,     0,  3462,     0,     0,     0,  3462,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3462,     0,
       0,   373,     0,     0,     0,     0,     2,     3,     0,     0,
       0,  3460,  3460,     0,     0,     0,  3460,     0,     0,     4,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3460,
       0,  3460,     0,     0,     0,     0,     0,     0,     0,     6,
       7,     0,     0,     0,     0,     8,     0,     0,     0,     9,
      10,     0,     0,     0,     0,  3460,     0,     0,   373,     0,
       0,     0,    11,     0,   373,     0,     0,     0,     0,     0,
     373,  3460,     0,     0,     0,     0,     0,    12,     0,  3460,
       0,     0,   373,     0,     0,     0,   373,     0,     0,     0,
       0,  3460,  1292,     0,  1294,     0,    13,     0,     0,     0,
       0,     0,     0,     0,  3460,    14,    15,    16,   373,     0,
     373,  3460,  3460,     0,     0,   373,     0,     0,    17,    18,
       0,  3460,     0,     0,     0,  3460,   464,     0,     0,     0,
       0,     0,   464,     0,     0,  3460,     0,     0,   373,     0,
       0,    19,     0,     0,     0,     0,     0,     0,  3460,     0,
    3460,     0,     0,     0,  3460,     0,     0,    20,     0,     0,
       0,     0,     0,     0,  3460,   373,     0,     0,     0,  1379,
       0,  1382,     0,   464,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,   464,   549,     0,    22,     0,
       0,    23,     0,     0,     0,   464,   464,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1411,     0,     0,     0,
       0,     0,    24,     0,  1420,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    25,     0,   374,   374,
     464,   464,     0,     0,     0,     0,     0,     0,   374,     0,
     549,     0,     0,     0,    26,     0,   374,     0,     0,    27,
       0,     0,     0,     0,     0,     0,   464,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   464,     0,     0,   464,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,    29,   549,   374,   374,     0,
     464,     0,    30,     0,     0,     0,     0,     0,     0,   723,
       0,  1585,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,    32,    33,     0,     0,    34,     0,
       0,    35,     0,    36,     0,     0,     0,     0,    37,     0,
      38,     0,     0,     0,     0,  1625,     0,     0,     0,    39,
       0,     0,     0,    40,     0,     0,     0,     0,     0,    41,
       0,     0,     0,     0,    42,     0,  2665,  2666,    43,     0,
       0,     0,  2667,     0,  2668,  2669,  2670,     0,     0,     0,
       0,     0,     0,     0,     0,  1625,     0,    44,     0,     0,
    2671,    45,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    46,     0,     0,     0,  2672,
       0,     0,  2673,     0,     0,     0,     0,     0,     0,     0,
    2674,    47,     0,  1728,    48,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,   549,  2675,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    50,     0,     0,     0,  2676,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,     0,     0,  2677,     0,  2678,   602,
       0,   564,   603,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,     0,     0,  2679,  2680,  1785,
       0,   549,     0,   604,   605,     0,   549,     0,     0,     0,
       0,     0,   464,   606,  1795,   607,     0,     0,     0,  1800,
    1800,     0,  1800,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   608,   609,   464,     0,     0,   464,  2681,     0,
       0,   610,     0,   549,   549,   464,   464,     0,     0,     0,
       0,     0,     0,  1800,  1800,  1800,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2682,     0,     0,     0,     0,
       0,  1867,     0,     0,  2683,  2684,     0,  2685,     0,     0,
    1878,     0,     0,     0,     0,     0,     0,     0, -1330,   611,
       0,     0,     0,   612,     0,     0,     0,  1886,     0,     0,
       0,     0,   464,     0,     0,  2686,  2687,  2688,     0,     0,
       0,     0,     0,     0,  1896,     0,     0,     0,     0,     0,
     464,     0,   613,     0,   614,  2689,  2690,  2691,     0,     0,
       0,  2692,     0,     0,  2693,     0,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,  2694,  2695,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,     0,     0,   619,     0,     0,     0,     0,
       0,     0,  2696,     0,  2697,     0,     0,     0,  1979,     0,
     620,     0,     0,     0,     0,     0,     0,  1983,     0,     0,
       0,     0,     0,     0,     0,     0,  2698,     0,     0,     0,
       0,   621,     0,     0,     0,     0,   622,     0,     0,     0,
       0,     0,     0,     0,     0,   374,     0,     0,     0,     0,
       0,     0,     0,   464,     0,     0,  2023,     0,     0,     0,
     623,     0,     0,     0,     0,     0,     0,     0,     0,  2699,
       0,  2700,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2701,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   624,     0,     0,     0,     0,     0,     0,     0,
       0,   625,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   626,
       0,     0,  2702,  2703,     0,     0,  2704,  2705,  2706,  2707,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   627,   628,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2708,
    2709,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2710,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   629,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   630,     0,     0,     0,  2188,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1759,     0,     0,     0,   631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   632,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1759,     0,     0,     0,   633,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2252,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2271,  2273,     0,
       0,     0,     0,     0,   549,     0,   549,   549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   549,   549,     0,     0,     0,     0,     0,     0,
       0,     0,  1979,     0,     0,     0,     0,     0,  1979,     0,
       0,  1979,     0,     0,  1979,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1979,  1979,     0,   549,     0,
       0,     0,     0,     0,  1979,     0,     0,     0,     0,     0,
       0,     0,     0,   464,     0,   549,     0,     0,     0,  1979,
    2395,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   464,
    1979,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   549,     0,     0,     0,     0,
       0,     0,   549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2459,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1625,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   549,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2555,     0,     0,     0,  1795,     0,   947,   549,
     549,   549,     0,     0,     0,     0,     0,     0,     0,   464,
       0,     0,     0,   549,     0,     0,  1728,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     549,   549,   549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2598,     0,     0,     0,     0,     0,  2600,
       0,  2602,     0,     0,     0,     0,     0,     0,     0,   549,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1979,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     549,     0,     0,  1979,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   464,     0,     0,     0,     0,     0,
       0,  2663,     0,     0,   464,     0,     0,     0,  2719,  2720,
       0,     0,  2723,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   464,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   870,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2252,  2868,     0,   549,
       0,     0,     0,     0,   949,     0,     0,     0,   549,     0,
       0,     0,     0,     0,  2555,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,     0,     0,     0,     0,     0,
       0,     0,  1867,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1728,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1979,     0,     0,     0,     0,     0,     0,  1979,     0,
       0,     0,     0,     0,     0,     0,     0,  1979,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1092,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3011,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1207,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3047,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1728,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1283,     0,
       0,     0,  1290,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3011,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3165,
       0,  3166,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   464,     0,     0,     0,     0,     0,  3180,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1418,     0,     0,     0,
       0,     0,     0,     0,     0,  1433,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2271,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3254,     0,     0,     0,     0,  3011,  3011,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3271,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   549,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3296,
       0,     0,     0,     0,     0,  1587,  1588,  1589,     0,     0,
       0,     0,  3011,     0,  1604,  1605,     0,     0,  1608,     0,
    1610,  1611,  1612,  1613,     0,     0,     0,  1617,     0,     0,
    1619,  1620,     0,  1621,     0,  1622,  1623,     0,  1626,  1627,
    1628,  1629,  1630,     0,  1633,     0,  1635,  1636,  1637,     0,
    1639,  1640,  1641,  1642,     0,  1644,  1645,     0,  1651,     0,
       0,  1655,  1656,  1657,     0,  1659,  1660,  1661,  1662,     0,
    1664,  1665,  1666,  1667,     0,     0,     0,     0,     0,  1674,
    1675,  1983,  1678,  1679,  1680,  1681,  1682,     0,     0,     0,
       0,  1686,     0,  1687,  1688,  1689,  1690,  1691,     0,     0,
    1694,  1696,  1697,  1698,  1699,  1700,     0,  1702,  1703,     0,
       0,  1706,  1707,  1708,     0,  1711,     0,  1712,     0,     0,
       0,  1715,     0,  1719,  1720,  3180,     0,     0,     0,  1723,
       0,     0,     0,     0,     0,     0,     0,  1730,  1731,  1732,
       0,     0,     0,     0,  1728,   464,  1290,     0,     0,  1739,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3254,     0,  3254,     0,  3407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3414,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1783,     0,
       0,     0,     0,     0,     0,     0,     0,  3434,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1828,     0,     0,  1728,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3475,     0,     0,     0,     0,  3482,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1728,     0,     0,     0,     0,     0,  3567,     0,     0,     0,
       0,     0,  3576,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   549,     0,     0,     0,  1728,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1984,     0,     0,     0,     0,     0,     0,     0,     0,
    1728,     0,  3600,     0,     0,     0,     0,  3605,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3635,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3635,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2158,  2160,  2162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2200,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2212,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2433,     0,     0,  2434,     0,     0,
    2436,  2437,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2450,     0,     0,  2453,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2460,
       0,  2461,     0,     0,     0,  2464,     0,  2465,  2466,     0,
       0,     0,  2469,     0,  2470,  2471,     0,  2472,     0,     0,
    2473,     0,  2474,  2475,     0,     0,     0,     0,  2479,  2480,
       0,     0,  2482,     0,  2483,     0,  2484,     0,  2485,     0,
    2487,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2492,  2493,     0,     0,  2494,     0,  2495,     0,     0,
       0,     0,     0,     0,     0,  2496,  2497,     0,  2498,     0,
    2499,     0,     0,  2500,  2501,  2502,     0,  2503,     0,     0,
       0,     0,  2506,  2507,  2508,  2509,     0,     0,     0,     0,
    2511,  2512,  2513,     0,  2514,     0,  2516,     0,  2518,     0,
    2520,     0,  2521,     0,     0,     0,     0,     0,     0,  2523,
       0,  2524,     0,     0,  2527,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2536,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2545,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2563,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2607,     0,     0,     0,     0,  2611,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2642,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2645,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2740,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2811,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2822,     0,  2824,     0,  2826,     0,     0,     0,
       0,     0,  2832,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2845,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2890,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3017,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3021,     0,     0,     0,
       0,     0,  3022,     0,     0,     0,     0,     0,     0,     0,
       0,  3026,  3027,     0,     0,     0,     0,  3028,     0,     0,
       0,  3029,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3033,     0,     0,     0,     0,     0,
    3035,     0,     0,  3036,  3037,     0,  3038,  3039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3044,  3045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3096,  3097,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2642,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2642,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2607,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3307,     0,     0,     0,     0,     0,  3309,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3326,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3338,     0,  3340,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2642,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3429,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3443,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3502,     0,  3504,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3522,     0,
       0,     0,     0,     0,     0,     0,  3531,     0,     0,     0,
       0,     0,  3537,     0,     0,     0,     0,     0,     0,     0,
       0,  3545,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   122,     0,   725,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   726,  3580,
     727,   130,   131,   728,   133,     0,   134,   729,   135,     0,
     730,   136,   731,   732,   733,   137,   734,     0,   138,   139,
    1716,   140,     0,   141,   142,     0,     0,   143,   735,   144,
       0,   145,   736,   737,   147,     0,   148,   149,   150,   738,
     151,     0,   739,   153,     0,   154,   155,   156,   157,   158,
     740,   741,   159,     0,     0,   160,     0,   742,     0,   743,
     744,   745,     0,  3636,   162,   746,   747,     0,   748,   749,
       0,   163,   164,   750,   751,   752,     0,     0,     0,     0,
     753,   167,   754,     0,     0,   755,   756,   168,     0,   169,
       0,     0,     0,   757,   758,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,   759,   178,     0,   760,   761,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,   762,     0,   187,
     763,   188,   764,   765,   189,     0,   766,   190,   191,   192,
     767,     0,   193,     0,     0,   768,     0,   194,   195,     0,
     769,   196,     0,   197,   770,   771,   772,   773,     0,   774,
     775,   199,   776,   777,   778,   201,     0,   202,   779,     0,
     780,   781,     0,   203,   204,     0,   205,   782,     0,   206,
       0,     0,     0,   783,   208,   209,   210,   784,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   785,   214,   786,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   787,   219,     0,  1717,   788,   220,
       0,   789,   221,     0,     0,     0,   790,     0,   791,     0,
     223,   792,     0,   224,     0,   225,   793,     0,     0,   794,
       0,     0,     0,     0,   795,   226,   227,   228,   229,   230,
     231,   796,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   797,   241,   242,   243,   798,   244,   245,     0,     0,
       0,   246,   247,   799,   249,     0,     0,   800,   251,   801,
     802,   252,     0,   253,   803,   804,   805,   806,   807,   808,
     809,   258,   259,   260,   261,     0,   810,   262,   263,     0,
     264,   265,   266,   811,   812,   813,   267,     0,   814,   815,
       0,   268,   269,     0,   816,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   817,   818,   277,   819,   820,   821,   822,   823,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   824,   286,
     287,   288,   289,   290,   291,   292,   825,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,   826,   827,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,   828,   307,   308,   829,   309,   310,
     830,   311,   831,   313,   314,     0,   832,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,   833,   834,   333,   334,     0,   335,
     835,   337,   836,   837,   838,   338,   339,   839,   340,   341,
       0,   342,   343,     0,   654,   344,   840,   841,   842,   843,
       0,     0,     0,     0,  1718,   349,     0,   350,   844,   845,
     846,   352,   353,   354,     0,   847,   355,   356,   848,     0,
     357,     0,     0,   849,   850,   358,     0,     0,   359,     0,
     360,     0,   851,   362,     0,     0,   852,   853,   854,   855,
     856,   363,     0,     0,   364,   857,     0,   365,   366,   858,
       0,     0,     0,     0,   368,     0,   369,   370,     0,   859,
       0,   860,     0,     0,     0,     0,   861,     0,     0,     0,
     862,   863,     0,     0,     0,     0,   864,     0,   865,     0,
       0,   866,   867,     0,   868,   869,   122,     0,   725,   124,
     125,   126,   127,  2603,     0,     0,     0,     0,   128,     0,
       0,   726,     0,   727,   130,   131,   728,   133,     0,   134,
     729,   135,     0,  2604,   136,   731,   732,   733,   137,   734,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   735,   144,     0,   145,   736,   737,   147,     0,   148,
     149,   150,   738,   151,     0,   739,   153,     0,   154,   155,
     156,   157,   158,   740,   741,   159,     0,     0,   160,     0,
     742,     0,   743,   744,   745,     0,     0,   162,   746,   747,
       0,   748,   749,     0,   163,   164,   750,   751,   752,     0,
       0,     0,     0,   753,   167,   754,     0,     0,   755,  2605,
     168,     0,   169,     0,     0,     0,   757,   758,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   759,   178,     0,   760,   761,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     762,     0,   187,   763,   188,   764,   765,   189,     0,   766,
     190,   191,   192,   767,     0,   193,     0,     0,   768,     0,
     194,   195,     0,   769,   196,     0,   197,   770,   771,   772,
     773,     0,   774,   775,   199,   776,   777,   778,   201,     0,
     202,   779,     0,   780,   781,     0,   203,   204,     0,   205,
     782,     0,   206,     0,     0,     0,   783,   208,   209,   210,
     784,     0,   211,   212,     0,     0,     0,   213,     0,     0,
     785,   214,   786,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,   787,   219,     0,
       0,   788,   220,     0,   789,   221,     0,     0,     0,   790,
       0,   791,     0,   223,   792,     0,   224,     0,   225,   793,
       0,     0,   794,     0,     0,     0,     0,   795,   226,   227,
     228,   229,   230,   231,   796,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   797,   241,   242,   243,   798,   244,
     245,     0,     0,     0,   246,   247,   799,   249,     0,     0,
     800,   251,   801,   802,   252,     0,   253,   803,   804,   805,
     806,   807,   808,   809,   258,   259,   260,   261,     0,   810,
     262,   263,     0,   264,   265,   266,   811,   812,   813,   267,
       0,   814,   815,     0,   268,   269,     0,   816,  2606,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   817,   818,   277,   819,   820,   821,
     822,   823,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   824,   286,   287,   288,   289,   290,   291,   292,   825,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   826,   827,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   828,   307,   308,
     829,   309,   310,   830,   311,   831,   313,   314,     0,   832,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   833,   834,   333,
     334,     0,   335,   835,   337,   836,   837,   838,   338,   339,
     839,   340,   341,     0,   342,   343,     0,   654,   344,   840,
     841,   842,   843,     0,     0,     0,     0,     0,   349,     0,
     350,   844,   845,   846,   352,   353,   354,     0,   847,   355,
     356,   848,     0,   357,     0,     0,   849,   850,   358,     0,
       0,   359,     0,   360,     0,   851,   362,     0,     0,   852,
     853,   854,   855,   856,   363,     0,     0,   364,   857,     0,
     365,   366,   858,     0,     0,     0,     0,   368,     0,   369,
     370,     0,   859,     0,   860,     0,     0,     0,     0,   861,
       0,     0,     0,   862,   863,     0,     0,     0,     0,   864,
       0,   865,     0,     0,   866,   867,     0,   868,   869,   122,
       0,   725,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   726,     0,   727,   130,   131,   728,
     133,     0,   134,   729,   135,     0,   730,   136,   731,   732,
     733,   137,   734,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,   735,   144,     0,   145,   736,   737,
     147,     0,   148,   149,   150,   738,   151,     0,   739,   153,
       0,   154,   155,   156,   157,   158,   740,   741,   159,     0,
       0,   160,     0,   742,     0,   743,   744,   745,     0,     0,
     162,   746,   747,     0,   748,   749,     0,   163,   164,   750,
     751,   752,     0,     0,     0,     0,   753,   167,   754,     0,
       0,   755,   756,   168,     0,   169,     0,     0,     0,   757,
     758,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,   759,   178,     0,
     760,   761,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,   762,     0,   187,   763,   188,   764,   765,
     189,     0,   766,   190,   191,   192,   767,     0,   193,     0,
       0,   768,     0,   194,   195,     0,   769,   196,     0,   197,
     770,   771,   772,   773,     0,   774,   775,   199,   776,   777,
     778,   201,     0,   202,   779,     0,   780,   781,     0,   203,
     204,     0,   205,   782,     0,   206,     0,     0,     0,   783,
     208,   209,   210,   784,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   785,   214,   786,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     787,   219,     0,     0,   788,   220,     0,   789,   221,     0,
       0,     0,   790,     0,   791,     0,   223,   792,     0,   224,
       0,   225,   793,     0,     0,   794,     0,     0,     0,     0,
     795,   226,   227,   228,   229,   230,   231,   796,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   797,   241,   242,
     243,   798,   244,   245,     0,     0,     0,   246,   247,   799,
     249,     0,     0,   800,   251,   801,   802,   252,     0,   253,
     803,   804,   805,   806,   807,   808,   809,   258,   259,   260,
     261,     0,   810,   262,   263,     0,   264,   265,   266,   811,
     812,   813,   267,     0,   814,   815,     0,   268,   269,     0,
     816,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   817,   818,   277,
     819,   820,   821,   822,   823,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   824,   286,   287,   288,   289,   290,
     291,   292,   825,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,   826,   827,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
     828,   307,   308,   829,   309,   310,   830,   311,   831,   313,
     314,     0,   832,   316,  1288,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
     833,   834,   333,   334,     0,   335,   835,   337,   836,   837,
     838,   338,   339,   839,   340,   341,     0,   342,   343,     0,
     654,   344,   840,   841,   842,   843,     0,     0,     0,     0,
       0,   349,     0,   350,   844,   845,   846,   352,   353,   354,
       0,   847,   355,   356,   848,     0,   357,     0,     0,   849,
     850,   358,     0,     0,   359,     0,   360,     0,   851,   362,
       0,     0,   852,   853,   854,   855,   856,   363,     0,     0,
     364,   857,     0,   365,   366,   858,     0,     0,     0,     0,
     368,     0,   369,   370,     0,   859,     0,   860,     0,     0,
       0,     0,   861,     0,     0,     0,   862,   863,     0,     0,
       0,     0,   864,     0,  1289,     0,     0,   866,   867,     0,
     868,   869,   122,     0,   725,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   726,     0,   727,
     130,   131,   728,   133,     0,   134,   729,   135,     0,   730,
     136,   731,   732,   733,   137,   734,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   735,   144,     0,
     145,   736,   737,   147,     0,   148,   149,   150,   738,   151,
       0,   739,   153,     0,   154,   155,   156,   157,   158,   740,
     741,   159,     0,     0,   160,     0,   742,     0,   743,   744,
     745,     0,     0,   162,   746,   747,     0,   748,   749,     0,
     163,   164,   750,   751,   752,     0,     0,     0,     0,   753,
     167,   754,     0,     0,   755,   756,   168,     0,   169,     0,
       0,     0,   757,   758,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     759,   178,     0,   760,   761,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   762,     0,   187,   763,
     188,   764,   765,   189,     0,   766,   190,   191,   192,   767,
       0,   193,     0,     0,   768,     0,   194,   195,     0,   769,
     196,     0,   197,   770,   771,   772,   773,     0,   774,   775,
     199,   776,   777,   778,   201,     0,   202,   779,     0,   780,
     781,     0,   203,   204,     0,   205,   782,     0,   206,     0,
       0,     0,   783,   208,   209,   210,   784,     0,   211,   212,
       0,     0,     0,   213,     0,     0,   785,   214,   786,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,   787,   219,     0,     0,   788,   220,     0,
     789,   221,     0,     0,     0,   790,     0,   791,     0,   223,
     792,     0,   224,     0,   225,   793,     0,     0,   794,     0,
       0,     0,     0,   795,   226,   227,   228,   229,   230,   231,
     796,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     797,   241,   242,   243,   798,   244,   245,     0,     0,     0,
     246,   247,   799,   249,     0,     0,   800,   251,   801,   802,
     252,     0,   253,   803,   804,   805,   806,   807,   808,   809,
     258,   259,   260,   261,     0,   810,   262,   263,     0,   264,
     265,   266,   811,   812,   813,   267,     0,   814,   815,     0,
     268,   269,     0,   816,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     817,   818,   277,   819,   820,   821,   822,   823,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   824,   286,   287,
     288,   289,   290,   291,   292,   825,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   826,   827,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   828,   307,   308,   829,   309,   310,   830,
     311,   831,   313,   314,     0,   832,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   833,   834,   333,   334,     0,   335,   835,
     337,   836,   837,   838,   338,   339,   839,   340,   341,     0,
     342,   343,     0,   654,   344,   840,   841,   842,   843,     0,
       0,     0,     0,     0,   349,     0,   350,   844,   845,   846,
     352,   353,   354,     0,   847,   355,   356,   848,     0,   357,
       0,     0,   849,   850,   358,     0,     0,   359,     0,   360,
       0,   851,   362,     0,     0,   852,   853,   854,   855,   856,
     363,     0,     0,   364,   857,     0,   365,   366,   858,     0,
       0,     0,     0,   368,     0,   369,   370,     0,   859,     0,
     860,     0,     0,     0,     0,   861,     0,     0,     0,   862,
     863,     0,     0,     0,     0,   864,     0,   865,  1564,     0,
     866,   867,     0,   868,   869,   122,     0,   725,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     726,     0,   727,   130,   131,   728,   133,     0,   134,   729,
     135,     0,   730,   136,   731,   732,   733,   137,   734,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
     735,   144,     0,   145,   736,   737,   147,     0,   148,   149,
     150,   738,   151,     0,   739,   153,     0,   154,   155,   156,
     157,   158,   740,   741,   159,     0,     0,   160,     0,   742,
       0,   743,   744,   745,     0,     0,   162,   746,   747,     0,
     748,   749,     0,   163,   164,   750,   751,   752,     0,     0,
       0,     0,   753,   167,   754,     0,     0,   755,   756,   168,
       0,   169,     0,     0,     0,   757,   758,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,   759,   178,     0,   760,   761,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,   762,
       0,   187,   763,   188,   764,   765,   189,     0,   766,   190,
     191,   192,   767,     0,   193,     0,     0,   768,     0,   194,
     195,     0,   769,   196,     0,   197,   770,   771,   772,   773,
       0,   774,   775,   199,   776,   777,   778,   201,     0,   202,
     779,     0,   780,   781,     0,   203,   204,     0,   205,   782,
       0,   206,     0,     0,     0,   783,   208,   209,   210,   784,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   785,
     214,   786,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   787,   219,     0,     0,
     788,   220,     0,   789,   221,     0,     0,     0,   790,     0,
     791,     0,   223,   792,     0,   224,     0,   225,   793,     0,
       0,   794,     0,     0,     0,     0,   795,   226,   227,   228,
     229,   230,   231,   796,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   797,   241,   242,   243,   798,   244,   245,
       0,     0,     0,   246,   247,   799,   249,     0,     0,   800,
     251,   801,   802,   252,     0,   253,   803,   804,   805,   806,
     807,   808,   809,   258,   259,   260,   261,     0,   810,   262,
     263,     0,   264,   265,   266,   811,   812,   813,   267,     0,
     814,   815,     0,   268,   269,     0,   816,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   817,   818,   277,   819,   820,   821,   822,
     823,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     824,   286,   287,   288,   289,   290,   291,   292,   825,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,   826,   827,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,   828,   307,   308,   829,
     309,   310,   830,   311,   831,   313,   314,     0,   832,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,   833,   834,   333,   334,
       0,   335,   835,   337,   836,   837,   838,   338,   339,   839,
     340,   341,     0,   342,   343,     0,   654,   344,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   349,     0,   350,
     844,   845,   846,   352,   353,   354,     0,   847,   355,   356,
     848,     0,   357,     0,     0,   849,   850,   358,     0,     0,
     359,     0,   360,     0,   851,   362,     0,     0,   852,   853,
     854,   855,   856,   363,     0,     0,   364,   857,     0,   365,
     366,   858,     0,     0,     0,     0,   368,     0,   369,   370,
       0,   859,     0,   860,     0,     0,     0,     0,   861,     0,
       0,     0,   862,   863,     0,     0,     0,     0,   864,     0,
     865,  1658,     0,   866,   867,     0,   868,   869,   122,     0,
     725,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   726,     0,   727,   130,   131,   728,   133,
       0,   134,   729,   135,     0,   730,   136,   731,   732,   733,
     137,   734,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   735,   144,     0,   145,   736,   737,   147,
       0,   148,   149,   150,   738,   151,     0,   739,   153,     0,
     154,   155,   156,   157,   158,   740,   741,   159,     0,     0,
     160,     0,   742,     0,   743,   744,   745,     0,     0,   162,
     746,   747,     0,   748,   749,     0,   163,   164,   750,   751,
     752,     0,     0,     0,     0,   753,   167,   754,     0,     0,
     755,   756,   168,     0,   169,     0,     0,     0,   757,   758,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   759,   178,     0,   760,
     761,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   762,     0,   187,   763,   188,   764,   765,   189,
       0,   766,   190,   191,   192,   767,     0,   193,     0,     0,
     768,     0,   194,   195,     0,   769,   196,     0,   197,   770,
     771,   772,   773,     0,   774,   775,   199,   776,   777,   778,
     201,     0,   202,   779,     0,   780,   781,     0,   203,   204,
       0,   205,   782,     0,   206,     0,     0,     0,   783,   208,
     209,   210,   784,     0,   211,   212,     0,     0,     0,   213,
       0,     0,   785,   214,   786,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,   787,
     219,     0,     0,   788,   220,     0,   789,   221,     0,     0,
       0,   790,     0,   791,     0,   223,   792,     0,   224,     0,
     225,   793,     0,     0,   794,     0,     0,     0,     0,   795,
     226,   227,   228,   229,   230,   231,   796,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   797,   241,   242,   243,
     798,   244,   245,     0,     0,     0,   246,   247,   799,   249,
       0,     0,   800,   251,   801,   802,   252,     0,   253,   803,
     804,   805,   806,   807,   808,   809,   258,   259,   260,   261,
       0,   810,   262,   263,     0,   264,   265,   266,   811,   812,
     813,   267,     0,   814,   815,     0,   268,   269,     0,   816,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   817,   818,   277,   819,
     820,   821,   822,   823,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   824,   286,   287,   288,   289,   290,   291,
     292,   825,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   826,   827,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   828,
     307,   308,   829,   309,   310,   830,   311,   831,   313,   314,
       0,   832,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   833,
     834,   333,   334,     0,   335,   835,   337,   836,   837,   838,
     338,   339,   839,   340,   341,     0,   342,   343,     0,   654,
     344,   840,   841,   842,   843,     0,     0,     0,     0,     0,
     349,     0,   350,   844,   845,   846,   352,   353,   354,     0,
     847,   355,   356,   848,     0,   357,     0,     0,   849,   850,
     358,     0,     0,   359,     0,   360,     0,   851,   362,     0,
       0,   852,   853,   854,   855,   856,   363,     0,     0,   364,
     857,     0,   365,   366,   858,     0,     0,     0,     0,   368,
       0,   369,   370,     0,   859,     0,   860,     0,     0,     0,
       0,   861,     0,     0,     0,   862,   863,     0,     0,     0,
       0,   864,     0,   865,  1695,     0,   866,   867,     0,   868,
     869,   122,     0,   725,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   726,     0,   727,   130,
     131,   728,   133,     0,   134,   729,   135,     0,   730,   136,
     731,   732,   733,   137,   734,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,   735,   144,     0,   145,
     736,   737,   147,     0,   148,   149,   150,   738,   151,     0,
     739,   153,     0,   154,   155,   156,   157,   158,   740,   741,
     159,     0,     0,   160,     0,   742,     0,   743,   744,   745,
       0,     0,   162,   746,   747,     0,   748,   749,     0,   163,
     164,   750,   751,   752,     0,     0,     0,     0,   753,   167,
     754,     0,     0,   755,   756,   168,     0,   169,     0,     0,
       0,   757,   758,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,   759,
     178,     0,   760,   761,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,   762,     0,   187,   763,   188,
     764,   765,   189,     0,   766,   190,   191,   192,   767,     0,
     193,     0,     0,   768,     0,   194,   195,     0,   769,   196,
       0,   197,   770,   771,   772,   773,     0,   774,   775,   199,
     776,   777,   778,   201,     0,   202,   779,     0,   780,   781,
       0,   203,   204,     0,   205,   782,     0,   206,     0,     0,
       0,   783,   208,   209,   210,   784,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   785,   214,   786,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   787,   219,     0,     0,   788,   220,     0,   789,
     221,     0,     0,     0,   790,     0,   791,     0,   223,   792,
       0,   224,     0,   225,   793,     0,     0,   794,     0,     0,
       0,     0,   795,   226,   227,   228,   229,   230,   231,   796,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   797,
     241,   242,   243,   798,   244,   245,     0,     0,     0,   246,
     247,   799,   249,     0,     0,   800,   251,   801,   802,   252,
       0,   253,   803,   804,   805,   806,   807,   808,   809,   258,
     259,   260,   261,     0,   810,   262,   263,     0,   264,   265,
     266,   811,   812,   813,   267,     0,   814,   815,     0,   268,
     269,     0,   816,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   817,
     818,   277,   819,   820,   821,   822,   823,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   824,   286,   287,   288,
     289,   290,   291,   292,   825,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
     826,   827,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,   828,   307,   308,   829,   309,   310,   830,   311,
     831,   313,   314,     0,   832,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,   833,   834,   333,   334,     0,   335,   835,   337,
     836,   837,   838,   338,   339,   839,   340,   341,     0,   342,
     343,     0,   654,   344,   840,   841,   842,   843,     0,     0,
       0,     0,     0,   349,     0,   350,   844,   845,   846,   352,
     353,   354,     0,   847,   355,   356,   848,     0,   357,     0,
       0,   849,   850,   358,     0,     0,   359,     0,   360,     0,
     851,   362,     0,     0,   852,   853,   854,   855,   856,   363,
       0,     0,   364,   857,     0,   365,   366,   858,     0,     0,
       0,     0,   368,     0,   369,   370,     0,   859,     0,   860,
       0,     0,     0,     0,   861,     0,     0,     0,   862,   863,
       0,     0,     0,     0,   864,     0,   865,  1722,     0,   866,
     867,     0,   868,   869,   122,     0,   725,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   726,
       0,   727,   130,   131,   728,   133,     0,   134,   729,   135,
       0,   730,   136,   731,   732,   733,   137,   734,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   735,
     144,     0,   145,   736,   737,   147,     0,   148,   149,   150,
     738,   151,     0,   739,   153,     0,   154,   155,   156,   157,
     158,   740,   741,   159,     0,     0,   160,     0,   742,     0,
     743,   744,   745,     0,     0,   162,   746,   747,     0,   748,
     749,     0,   163,   164,   750,   751,   752,     0,     0,     0,
       0,   753,   167,   754,     0,     0,   755,   756,   168,     0,
     169,     0,     0,     0,   757,   758,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   759,   178,     0,   760,   761,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   762,     0,
     187,   763,   188,   764,   765,   189,     0,   766,   190,   191,
     192,   767,     0,   193,     0,     0,   768,     0,   194,   195,
    2157,   769,   196,     0,   197,   770,   771,   772,   773,     0,
     774,   775,   199,   776,   777,   778,   201,     0,   202,   779,
       0,   780,   781,     0,   203,   204,     0,   205,   782,     0,
     206,     0,     0,     0,   783,   208,   209,   210,   784,     0,
     211,   212,     0,     0,     0,   213,     0,     0,   785,   214,
     786,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,   787,   219,     0,     0,   788,
     220,     0,   789,   221,     0,     0,     0,   790,     0,   791,
       0,   223,   792,     0,   224,     0,   225,   793,     0,     0,
     794,     0,     0,     0,     0,   795,   226,   227,   228,   229,
     230,   231,   796,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   797,   241,   242,   243,   798,   244,   245,     0,
       0,     0,   246,   247,   799,   249,     0,     0,   800,   251,
     801,   802,   252,     0,   253,   803,   804,   805,   806,   807,
     808,   809,   258,   259,   260,   261,     0,   810,   262,   263,
       0,   264,   265,   266,   811,   812,   813,   267,     0,   814,
     815,     0,   268,   269,     0,   816,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   817,   818,   277,   819,   820,   821,   822,   823,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   824,
     286,   287,   288,   289,   290,   291,   292,   825,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   826,   827,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   828,   307,   308,   829,   309,
     310,   830,   311,   831,   313,   314,     0,   832,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   833,   834,   333,   334,     0,
     335,   835,   337,   836,   837,   838,   338,   339,   839,   340,
     341,     0,   342,   343,     0,   654,   344,   840,   841,   842,
     843,     0,     0,     0,     0,     0,   349,     0,   350,   844,
     845,   846,   352,   353,   354,     0,   847,   355,   356,   848,
       0,   357,     0,     0,   849,   850,   358,     0,     0,   359,
       0,   360,     0,   851,   362,     0,     0,   852,   853,   854,
     855,   856,   363,     0,     0,   364,   857,     0,   365,   366,
     858,     0,     0,     0,     0,   368,     0,   369,   370,     0,
     859,     0,   860,     0,     0,     0,     0,   861,     0,     0,
       0,   862,   863,     0,     0,     0,     0,   864,     0,   865,
       0,     0,   866,   867,     0,   868,   869,   122,     0,   725,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   726,     0,   727,   130,   131,   728,   133,     0,
     134,   729,   135,     0,   730,   136,   731,   732,   733,   137,
     734,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,   735,   144,     0,   145,   736,   737,   147,     0,
     148,   149,   150,   738,   151,     0,   739,   153,     0,   154,
     155,   156,   157,   158,   740,   741,   159,     0,     0,   160,
       0,   742,     0,   743,   744,   745,     0,     0,   162,   746,
     747,     0,   748,   749,     0,   163,   164,   750,   751,   752,
       0,     0,     0,     0,   753,   167,   754,     0,     0,   755,
     756,   168,     0,   169,     0,     0,     0,   757,   758,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,   759,   178,     0,   760,   761,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,   762,     0,   187,   763,   188,   764,   765,   189,     0,
     766,   190,   191,   192,   767,     0,   193,     0,     0,   768,
       0,   194,   195,  2159,   769,   196,     0,   197,   770,   771,
     772,   773,     0,   774,   775,   199,   776,   777,   778,   201,
       0,   202,   779,     0,   780,   781,     0,   203,   204,     0,
     205,   782,     0,   206,     0,     0,     0,   783,   208,   209,
     210,   784,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   785,   214,   786,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   787,   219,
       0,     0,   788,   220,     0,   789,   221,     0,     0,     0,
     790,     0,   791,     0,   223,   792,     0,   224,     0,   225,
     793,     0,     0,   794,     0,     0,     0,     0,   795,   226,
     227,   228,   229,   230,   231,   796,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   797,   241,   242,   243,   798,
     244,   245,     0,     0,     0,   246,   247,   799,   249,     0,
       0,   800,   251,   801,   802,   252,     0,   253,   803,   804,
     805,   806,   807,   808,   809,   258,   259,   260,   261,     0,
     810,   262,   263,     0,   264,   265,   266,   811,   812,   813,
     267,     0,   814,   815,     0,   268,   269,     0,   816,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   817,   818,   277,   819,   820,
     821,   822,   823,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   824,   286,   287,   288,   289,   290,   291,   292,
     825,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,   826,   827,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,   828,   307,
     308,   829,   309,   310,   830,   311,   831,   313,   314,     0,
     832,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,   833,   834,
     333,   334,     0,   335,   835,   337,   836,   837,   838,   338,
     339,   839,   340,   341,     0,   342,   343,     0,   654,   344,
     840,   841,   842,   843,     0,     0,     0,     0,     0,   349,
       0,   350,   844,   845,   846,   352,   353,   354,     0,   847,
     355,   356,   848,     0,   357,     0,     0,   849,   850,   358,
       0,     0,   359,     0,   360,     0,   851,   362,     0,     0,
     852,   853,   854,   855,   856,   363,     0,     0,   364,   857,
       0,   365,   366,   858,     0,     0,     0,     0,   368,     0,
     369,   370,     0,   859,     0,   860,     0,     0,     0,     0,
     861,     0,     0,     0,   862,   863,     0,     0,     0,     0,
     864,     0,   865,     0,     0,   866,   867,     0,   868,   869,
     122,     0,   725,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   726,     0,   727,   130,   131,
     728,   133,     0,   134,   729,   135,     0,   730,   136,   731,
     732,   733,   137,   734,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   735,   144,     0,   145,   736,
     737,   147,     0,   148,   149,   150,   738,   151,     0,   739,
     153,     0,   154,   155,   156,   157,   158,   740,   741,   159,
       0,     0,   160,     0,   742,     0,   743,   744,   745,     0,
       0,   162,   746,   747,     0,   748,   749,     0,   163,   164,
     750,   751,   752,     0,     0,     0,     0,   753,   167,   754,
       0,     0,   755,   756,   168,     0,   169,     0,     0,     0,
     757,   758,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   759,   178,
       0,   760,   761,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   762,     0,   187,   763,   188,   764,
     765,   189,     0,   766,   190,   191,   192,   767,     0,   193,
       0,     0,   768,     0,   194,   195,  2161,   769,   196,     0,
     197,   770,   771,   772,   773,     0,   774,   775,   199,   776,
     777,   778,   201,     0,   202,   779,     0,   780,   781,     0,
     203,   204,     0,   205,   782,     0,   206,     0,     0,     0,
     783,   208,   209,   210,   784,     0,   211,   212,     0,     0,
       0,   213,     0,     0,   785,   214,   786,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,   787,   219,     0,     0,   788,   220,     0,   789,   221,
       0,     0,     0,   790,     0,   791,     0,   223,   792,     0,
     224,     0,   225,   793,     0,     0,   794,     0,     0,     0,
       0,   795,   226,   227,   228,   229,   230,   231,   796,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   797,   241,
     242,   243,   798,   244,   245,     0,     0,     0,   246,   247,
     799,   249,     0,     0,   800,   251,   801,   802,   252,     0,
     253,   803,   804,   805,   806,   807,   808,   809,   258,   259,
     260,   261,     0,   810,   262,   263,     0,   264,   265,   266,
     811,   812,   813,   267,     0,   814,   815,     0,   268,   269,
       0,   816,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   817,   818,
     277,   819,   820,   821,   822,   823,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   824,   286,   287,   288,   289,
     290,   291,   292,   825,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   826,
     827,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   828,   307,   308,   829,   309,   310,   830,   311,   831,
     313,   314,     0,   832,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   833,   834,   333,   334,     0,   335,   835,   337,   836,
     837,   838,   338,   339,   839,   340,   341,     0,   342,   343,
       0,   654,   344,   840,   841,   842,   843,     0,     0,     0,
       0,     0,   349,     0,   350,   844,   845,   846,   352,   353,
     354,     0,   847,   355,   356,   848,     0,   357,     0,     0,
     849,   850,   358,     0,     0,   359,     0,   360,     0,   851,
     362,     0,     0,   852,   853,   854,   855,   856,   363,     0,
       0,   364,   857,     0,   365,   366,   858,     0,     0,     0,
       0,   368,     0,   369,   370,     0,   859,     0,   860,     0,
       0,     0,     0,   861,     0,     0,     0,   862,   863,     0,
       0,     0,     0,   864,     0,   865,     0,     0,   866,   867,
       0,   868,   869,   122,     0,   725,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   726,     0,
     727,   130,   131,   728,   133,     0,   134,   729,   135,     0,
     730,   136,   731,   732,   733,   137,   734,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,   735,   144,
       0,   145,   736,   737,   147,     0,   148,   149,   150,   738,
     151,     0,   739,   153,     0,   154,   155,   156,   157,   158,
     740,   741,   159,     0,     0,   160,     0,   742,     0,   743,
     744,   745,     0,     0,   162,   746,   747,     0,   748,   749,
       0,   163,   164,   750,   751,   752,     0,     0,     0,     0,
     753,   167,   754,     0,     0,   755,   756,   168,     0,   169,
       0,     0,     0,   757,   758,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,   759,   178,     0,   760,   761,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,   762,     0,   187,
     763,   188,   764,   765,   189,     0,   766,   190,   191,   192,
     767,     0,   193,     0,     0,   768,     0,   194,   195,     0,
     769,   196,     0,   197,   770,   771,   772,   773,     0,   774,
     775,   199,   776,   777,   778,   201,     0,   202,   779,     0,
     780,   781,     0,   203,   204,     0,   205,   782,     0,   206,
       0,     0,     0,   783,   208,   209,   210,   784,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   785,   214,   786,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   787,   219,     0,     0,   788,   220,
       0,   789,   221,     0,     0,     0,   790,     0,   791,     0,
     223,   792,     0,   224,     0,   225,   793,     0,     0,   794,
       0,     0,     0,     0,   795,   226,   227,   228,   229,   230,
     231,   796,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   797,   241,   242,   243,   798,   244,   245,     0,     0,
       0,   246,   247,   799,   249,     0,     0,   800,   251,   801,
     802,   252,     0,   253,   803,   804,   805,   806,   807,   808,
     809,   258,   259,   260,   261,     0,   810,   262,   263,     0,
     264,   265,   266,   811,   812,   813,   267,     0,   814,   815,
       0,   268,   269,     0,   816,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   817,   818,   277,   819,   820,   821,   822,   823,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   824,   286,
     287,   288,   289,   290,   291,   292,   825,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,   826,   827,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,   828,   307,   308,   829,   309,   310,
     830,   311,   831,   313,   314,     0,   832,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,   833,   834,   333,   334,     0,   335,
     835,   337,   836,   837,   838,   338,   339,   839,   340,   341,
       0,   342,   343,     0,   654,   344,   840,   841,   842,   843,
       0,     0,     0,     0,     0,   349,     0,   350,   844,   845,
     846,   352,   353,   354,     0,   847,   355,   356,   848,     0,
     357,     0,     0,   849,   850,   358,     0,     0,   359,     0,
     360,     0,   851,   362,     0,     0,   852,   853,   854,   855,
     856,   363,     0,     0,   364,   857,     0,   365,   366,   858,
       0,     0,     0,     0,   368,     0,   369,   370,     0,   859,
       0,   860,     0,     0,     0,     0,   861,     0,     0,     0,
     862,   863,     0,     0,     0,     0,   864,     0,   865,     0,
       0,   866,   867,     0,   868,   869,   122,     0,   725,   124,
     125,   126,   127,  1753,     0,     0,     0,     0,  1754,     0,
       0,   726,     0,   727,   130,   131,   728,   133,     0,   134,
     729,   135,     0,   730,   136,   731,   732,   733,   137,   734,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   735,   144,     0,   145,   736,   737,   147,     0,   148,
     149,   150,   738,   151,     0,   739,   153,     0,   154,   155,
     156,   157,   158,   740,   741,   159,     0,     0,   160,     0,
     742,     0,   743,   744,   745,     0,     0,   162,   746,   747,
       0,   748,   749,     0,   163,   164,   750,   751,   752,     0,
       0,     0,     0,   753,   167,   754,     0,     0,   755,   756,
     168,     0,   169,     0,     0,     0,   757,   758,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   759,   178,     0,   760,   761,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     762,     0,   187,   763,   188,   764,   765,   189,     0,   766,
     190,   191,   192,   767,     0,   193,     0,     0,   768,     0,
     194,   195,     0,   769,   196,     0,   197,   770,   771,   772,
     773,     0,   774,   775,   199,   776,   777,   778,   201,     0,
     202,   779,     0,   780,   781,     0,   203,   204,     0,   205,
     782,     0,   206,     0,     0,     0,   783,   208,   209,   210,
     784,     0,   211,   212,     0,     0,     0,   213,     0,     0,
     785,   214,   786,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,   787,   219,     0,
       0,   788,   220,     0,   789,   221,     0,     0,     0,   790,
       0,   791,     0,   223,   792,     0,   224,     0,   225,   793,
       0,     0,   794,     0,     0,     0,     0,   795,   226,   227,
     228,   229,   230,   231,   796,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   797,   241,   242,   243,   798,   244,
     245,     0,     0,     0,   246,   247,   799,   249,     0,     0,
     800,   251,   801,   802,   252,     0,   253,   803,   804,   805,
     806,   807,   808,   809,   258,   259,   260,   261,     0,   810,
     262,   263,     0,   264,   265,   266,   811,     0,   813,   267,
       0,   814,   815,     0,   268,   269,     0,   816,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   817,   818,   277,   819,   820,   821,
     822,   823,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   824,   286,   287,   288,   289,   290,   291,   292,   825,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   826,   827,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   828,   307,   308,
     829,   309,   310,   830,   311,   831,   313,   314,     0,   832,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   833,   834,   333,
     334,     0,   335,   835,   337,   836,   837,   838,   338,   339,
     839,   340,   341,     0,   342,   343,     0,   654,   344,   840,
     841,   842,   843,     0,     0,     0,     0,     0,   349,     0,
     350,   844,   845,   846,   352,   353,   354,     0,   847,   355,
     356,   848,     0,   357,     0,     0,   849,   850,   358,     0,
       0,   359,     0,   360,     0,   851,   362,     0,     0,   852,
     853,   854,   855,   856,   363,     0,     0,   364,   857,     0,
     365,   366,   858,     0,     0,     0,     0,   368,     0,   369,
     370,     0,   859,     0,   860,     0,     0,     0,     0,   861,
       0,     0,     0,   862,   863,     0,     0,     0,     0,   864,
       0,   865,     0,     0,   866,   867,     0,   868,   869,   122,
       0,   725,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   726,     0,   727,   130,   131,   728,
     133,     0,   134,   729,   135,     0,   730,   136,   731,   732,
     733,   137,   734,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,   735,   144,     0,   145,   736,   737,
     147,     0,   148,   149,   150,   738,   151,     0,   739,   153,
       0,   154,   155,   156,   157,   158,   740,   741,   159,     0,
       0,   160,     0,   742,     0,   743,   744,   745,     0,     0,
     162,   746,   747,     0,   748,   749,     0,   163,   164,   750,
     751,   752,     0,     0,     0,     0,   753,   167,   754,     0,
       0,   755,   756,   168,     0,   169,     0,     0,     0,   757,
     758,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,   759,   178,     0,
     760,   761,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,   762,     0,   187,   763,   188,   764,   765,
     189,     0,   766,   190,   191,   192,   767,     0,   193,     0,
       0,   768,     0,   194,   195,     0,   769,   196,     0,   197,
     770,   771,   772,   773,     0,   774,   775,   199,   776,   777,
     778,   201,     0,   202,   779,     0,   780,   781,     0,   203,
     204,     0,   205,   782,     0,   206,     0,     0,     0,   783,
     208,   209,   210,   784,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   785,   214,  2432,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     787,   219,     0,     0,   788,   220,     0,   789,   221,     0,
       0,     0,   790,     0,   791,     0,   223,   792,     0,   224,
       0,   225,   793,     0,     0,   794,     0,     0,     0,     0,
     795,   226,   227,   228,   229,   230,   231,   796,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   797,   241,   242,
     243,   798,   244,   245,     0,     0,     0,   246,   247,   799,
     249,     0,     0,   800,   251,   801,   802,   252,     0,   253,
     803,   804,   805,   806,   807,   808,   809,   258,   259,   260,
     261,     0,   810,   262,   263,     0,   264,   265,   266,   811,
     812,   813,   267,     0,   814,   815,     0,   268,   269,     0,
     816,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   817,   818,   277,
     819,   820,   821,   822,   823,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   824,   286,   287,   288,   289,   290,
     291,   292,   825,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,   826,   827,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
     828,   307,   308,   829,   309,   310,   830,   311,   831,   313,
     314,     0,   832,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
     833,   834,   333,   334,     0,   335,   835,   337,   836,   837,
     838,   338,   339,   839,   340,   341,     0,   342,   343,     0,
     654,   344,   840,   841,   842,   843,     0,     0,     0,     0,
       0,   349,     0,   350,   844,   845,   846,   352,   353,   354,
       0,   847,   355,   356,   848,     0,   357,     0,     0,   849,
     850,   358,     0,     0,   359,     0,   360,     0,   851,   362,
       0,     0,   852,   853,   854,   855,   856,   363,     0,     0,
     364,   857,     0,   365,   366,   858,     0,     0,     0,     0,
     368,     0,   369,   370,     0,   859,     0,   860,     0,     0,
       0,     0,   861,     0,     0,     0,   862,   863,     0,     0,
       0,     0,   864,     0,   865,     0,     0,   866,   867,     0,
     868,   869,   122,     0,   725,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   726,     0,   727,
     130,   131,   728,   133,     0,   134,   729,   135,     0,   730,
     136,   731,   732,   733,   137,   734,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   735,   144,     0,
     145,   736,   737,   147,     0,   148,   149,   150,   738,   151,
       0,   739,   153,     0,   154,   155,   156,   157,   158,   740,
     741,   159,     0,     0,   160,     0,   742,     0,   743,   744,
     745,     0,     0,   162,   746,   747,     0,   748,   749,     0,
     163,   164,   750,   751,   752,     0,     0,     0,     0,   753,
     167,   754,     0,     0,   755,   756,   168,     0,   169,     0,
       0,     0,   757,   758,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     759,   178,     0,   760,   761,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   762,     0,   187,   763,
     188,   764,   765,   189,     0,   766,   190,   191,   192,   767,
       0,   193,     0,     0,   768,     0,   194,   195,     0,   769,
     196,     0,   197,   770,   771,   772,   773,     0,   774,   775,
     199,   776,   777,   778,   201,     0,   202,   779,     0,   780,
     781,     0,   203,   204,     0,   205,   782,     0,   206,     0,
       0,     0,   783,   208,   209,   210,   784,     0,   211,   212,
       0,     0,     0,   213,     0,     0,   785,   214,  2505,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,   787,   219,     0,     0,   788,   220,     0,
     789,   221,     0,     0,     0,   790,     0,   791,     0,   223,
     792,     0,   224,     0,   225,   793,     0,     0,   794,     0,
       0,     0,     0,   795,   226,   227,   228,   229,   230,   231,
     796,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     797,   241,   242,   243,   798,   244,   245,     0,     0,     0,
     246,   247,   799,   249,     0,     0,   800,   251,   801,   802,
     252,     0,   253,   803,   804,   805,   806,   807,   808,   809,
     258,   259,   260,   261,     0,   810,   262,   263,     0,   264,
     265,   266,   811,   812,   813,   267,     0,   814,   815,     0,
     268,   269,     0,   816,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     817,   818,   277,   819,   820,   821,   822,   823,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   824,   286,   287,
     288,   289,   290,   291,   292,   825,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   826,   827,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   828,   307,   308,   829,   309,   310,   830,
     311,   831,   313,   314,     0,   832,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   833,   834,   333,   334,     0,   335,   835,
     337,   836,   837,   838,   338,   339,   839,   340,   341,     0,
     342,   343,     0,   654,   344,   840,   841,   842,   843,     0,
       0,     0,     0,     0,   349,     0,   350,   844,   845,   846,
     352,   353,   354,     0,   847,   355,   356,   848,     0,   357,
       0,     0,   849,   850,   358,     0,     0,   359,     0,   360,
       0,   851,   362,     0,     0,   852,   853,   854,   855,   856,
     363,     0,     0,   364,   857,     0,   365,   366,   858,     0,
       0,     0,     0,   368,     0,   369,   370,     0,   859,     0,
     860,     0,     0,     0,     0,   861,     0,     0,     0,   862,
     863,     0,     0,     0,     0,   864,     0,   865,     0,     0,
     866,   867,     0,   868,   869,   122,     0,   725,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     726,     0,   727,   130,   131,   728,   133,     0,   134,   729,
     135,     0,   730,   136,   731,   732,   733,   137,   734,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
     735,   144,     0,   145,   736,   737,   147,     0,   148,   149,
     150,   738,   151,     0,   739,   153,     0,   154,   155,   156,
     157,   158,   740,   741,   159,     0,     0,   160,     0,   742,
       0,   743,   744,   745,     0,     0,   162,   746,   747,     0,
     748,   749,     0,   163,   164,   750,   751,   752,     0,     0,
       0,     0,   753,   167,   754,     0,     0,   755,  2852,   168,
       0,   169,     0,     0,     0,   757,   758,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,   759,   178,     0,   760,   761,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,   762,
       0,   187,   763,   188,   764,   765,   189,     0,   766,   190,
     191,   192,   767,     0,   193,     0,     0,   768,     0,   194,
     195,     0,   769,   196,     0,   197,   770,   771,   772,   773,
       0,   774,   775,   199,   776,   777,   778,   201,     0,   202,
     779,     0,   780,   781,     0,   203,   204,     0,   205,   782,
       0,   206,     0,     0,     0,   783,   208,   209,   210,   784,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   785,
     214,   786,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   787,   219,     0,     0,
     788,   220,     0,   789,   221,     0,     0,     0,   790,     0,
     791,     0,   223,   792,     0,   224,     0,   225,   793,     0,
       0,   794,     0,     0,     0,     0,   795,   226,   227,   228,
     229,   230,   231,   796,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   797,   241,   242,   243,   798,   244,   245,
       0,     0,     0,   246,   247,   799,   249,     0,     0,   800,
     251,   801,   802,   252,     0,   253,   803,   804,   805,   806,
     807,   808,   809,   258,   259,   260,   261,     0,   810,   262,
     263,     0,   264,   265,   266,   811,   812,   813,   267,     0,
     814,   815,     0,   268,   269,     0,   816,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   817,   818,   277,   819,   820,   821,   822,
     823,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     824,   286,   287,   288,   289,   290,   291,   292,   825,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,   826,   827,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,   828,   307,   308,   829,
     309,   310,   830,   311,   831,   313,   314,     0,   832,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,   833,   834,   333,   334,
       0,   335,   835,   337,   836,   837,   838,   338,   339,   839,
     340,   341,     0,   342,   343,     0,   654,   344,   840,   841,
     842,   843,     0,     0,     0,     0,     0,   349,     0,   350,
     844,   845,   846,   352,   353,   354,     0,   847,   355,   356,
     848,     0,   357,     0,     0,   849,   850,   358,     0,     0,
     359,     0,   360,     0,   851,   362,     0,     0,   852,   853,
     854,   855,   856,   363,     0,     0,   364,   857,     0,   365,
     366,   858,     0,     0,     0,     0,   368,     0,   369,   370,
       0,   859,     0,   860,     0,     0,     0,     0,   861,     0,
       0,     0,   862,   863,     0,     0,     0,     0,   864,     0,
     865,     0,     0,   866,   867,     0,   868,   869,   122,     0,
     725,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   726,     0,   727,   130,   131,   728,   133,
       0,   134,   729,   135,     0,   730,   136,   731,   732,   733,
     137,   734,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   735,   144,     0,   145,   736,   737,   147,
       0,   148,   149,   150,   738,   151,     0,   739,   153,     0,
     154,   155,   156,   157,   158,   740,   741,   159,     0,     0,
     160,     0,   742,     0,   743,   744,   745,     0,     0,   162,
     746,   747,     0,   748,   749,     0,   163,   164,   750,   751,
     752,     0,     0,     0,     0,   753,   167,   754,     0,     0,
     755,   756,   168,     0,   169,     0,     0,     0,   757,   758,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   759,   178,     0,   760,
     761,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   762,     0,   187,   763,   188,   764,   765,   189,
       0,   766,   190,   191,   192,   767,     0,   193,     0,     0,
     768,     0,   194,   195,     0,   769,   196,     0,   197,   770,
     771,   772,   773,     0,   774,   775,   199,   776,   777,   778,
     201,     0,   202,   779,     0,   780,   781,     0,   203,   204,
       0,   205,   782,     0,   206,     0,     0,     0,   783,   208,
     209,   210,   784,     0,   211,   212,     0,     0,     0,   213,
       0,     0,   785,   214,   786,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,   787,
     219,     0,     0,   788,   220,     0,   789,   221,     0,     0,
       0,   790,     0,   791,     0,   223,   792,     0,   224,     0,
     225,   793,     0,     0,   794,     0,     0,     0,     0,   795,
     226,   227,   228,   229,   230,   231,   796,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   797,   241,   242,   243,
     798,   244,   245,     0,     0,     0,   246,   247,   799,   249,
       0,     0,   800,   251,   801,   802,   252,     0,   253,   803,
     804,   805,   806,   807,   808,   809,   258,   259,   260,   261,
       0,   810,   262,   263,     0,   264,   265,   266,   811,     0,
     813,   267,     0,   814,   815,     0,   268,   269,     0,   816,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   817,   818,   277,   819,
     820,   821,   822,   823,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   824,   286,   287,   288,   289,   290,   291,
     292,   825,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   826,   827,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   828,
     307,   308,   829,   309,   310,   830,   311,   831,   313,   314,
       0,   832,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   833,
     834,   333,   334,     0,   335,   835,   337,   836,   837,   838,
     338,   339,   839,   340,   341,     0,   342,   343,     0,   654,
     344,   840,   841,   842,   843,     0,     0,     0,     0,     0,
     349,     0,   350,   844,   845,   846,   352,   353,   354,     0,
     847,   355,   356,   848,     0,   357,     0,     0,   849,   850,
     358,     0,     0,   359,     0,   360,     0,   851,   362,     0,
       0,   852,   853,   854,   855,   856,   363,     0,     0,   364,
     857,     0,   365,   366,   858,     0,     0,     0,     0,   368,
       0,   369,   370,     0,   859,     0,   860,     0,     0,     0,
       0,   861,     0,     0,     0,   862,   863,     0,     0,     0,
       0,   864,     0,   865,     0,     0,   866,   867,     0,   868,
     869,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,  1927,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
    1928,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,  1085,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,  1086,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,  2417,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,  1840,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,  1929,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,  1975,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,  1927,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
    1928,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,  1085,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,  1086,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,  1929,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,  1975,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,  1840,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,  2246,     0,   130,
     131,   132,   133,   869,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
       0,     0,     0,     0,     0,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,  3558,   128,     0,
       0,   129,  3559,   869,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,   971,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   407,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,  1798,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   407,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,     0,     0,     0,     0,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,  1974,     0,   128,     0,     0,   129,     0,  1975,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
       0,     0,     0,     0,     0,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,  3559,   869,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   407,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   461,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   407,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   869,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,     0,   371,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,  1975,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   546,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,   547,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,   122,   371,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,  1740,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,   546,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,   547,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
     360,     0,   361,   362,     0,     0,     0,     0,     0,     0,
       0,   363,     0,     0,   364,     0,     0,   365,   366,   367,
       0,     0,     0,     0,   368,     0,   369,   370,     0,     0,
     122,   371,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,  2286,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
     546,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,   547,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,   360,     0,   361,
     362,     0,     0,     0,     0,     0,     0,     0,   363,     0,
       0,   364,     0,     0,   365,   366,   367,     0,     0,     0,
       0,   368,     0,   369,   370,     0,     0,   122,   371,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,     0,     0,     0,   130,   131,   132,     0,     0,
    -189,  2875,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,     0,     0,     0,
       0,   143,     0,   144,     0,   145,     0,     0,     0,     0,
     148,   149,  3448,     0,   151,     0,   152,   153,     0,     0,
     155,     0,   157,   158,     0,     0,   159,     0,     0,   160,
       0,     0,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,     0,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,     0,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
       0,   180,   181,   182,     0,     0,   183,     0,   184,   185,
       0,     0,     0,   187,     0,   188,     0,     0,   189,  3449,
       0,   190,   191,   192,     0,     0,     0,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,     0,   204,     0,
       0,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,  3450,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,  3451,     0,     0,     0,     0,     0,     0,     0,   219,
       0,     0,     0,   220,  3452,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,  -189,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
       0,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,  3453,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,     0,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,     0,   300,  -189,     0,   301,     0,
       0,   303,     0,     0,   305,   306,  3454,     0,     0,     0,
     308,     0,   309,   310,     0,   311,   312,   313,     0,     0,
     315,     0,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,     0,   323,     0,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,     0,   332,     0,     0,
       0,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,     0,   352,   353,   354,     0,     0,
     355,   356,     0,     0,     0,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,     0,   361,   362,     0,     0,
       0,     0,     0,     0,     0,   363,     0,     0,   364,     0,
       0,   365,   366,   367,     0,     0,  -189,     0,   368,     0,
     369,     0,     0,     0,     0,   371,     0,     0,     0,     0,
    3455,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,  3642,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,     0,   371,
     122,     0,   123,   124,   125,   126,   127,     0,     0,     0,
    1584,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,   360,     0,   361,
     362,     0,     0,     0,     0,     0,     0,     0,   363,     0,
       0,   364,     0,     0,   365,   366,   367,     0,     0,     0,
       0,   368,     0,   369,   370,     0,     0,     0,   371,   122,
       0,   123,   124,   125,   126,   127,     0,     0,     0,  2272,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,   360,     0,   361,   362,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
     364,     0,     0,   365,   366,   367,     0,     0,     0,     0,
     368,     0,   369,   370,     0,     0,     0,   371,   122,     0,
     123,   124,   125,   126,   127,     0,     0,     0,  2558,     0,
     128,     0,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,   360,     0,   361,   362,     0,
       0,     0,     0,     0,     0,     0,   363,     0,     0,   364,
       0,     0,   365,   366,   367,     0,     0,     0,     0,   368,
       0,   369,   370,     0,     0,     0,   371,   122,     0,   123,
     124,   125,   126,   127,     0,     0,     0,  2880,     0,   128,
       0,     0,     0,     0,     0,   130,   131,   132,     0,     0,
    -189,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,     0,     0,     0,
       0,   143,     0,   144,     0,   145,     0,     0,     0,     0,
     148,   149,  3448,     0,   151,     0,   152,   153,     0,     0,
     155,     0,   157,   158,     0,     0,   159,     0,     0,   160,
       0,     0,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,     0,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,     0,     0,     0,
     175,   176,   177,     0,  -204,     0,   178,     0,     0,     0,
    -204,   180,   181,   182,     0,     0,   183,     0,   184,   185,
       0,     0,     0,   187,     0,   188,     0,     0,   189,  3449,
       0,   190,   191,   192,     0,     0,     0,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,     0,   204,     0,
       0,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,  3450,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,  3451,     0,     0,     0,     0,     0,     0,     0,   219,
       0,     0,     0,   220,  3452,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,  -189,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
       0,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,  3453,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,     0,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,     0,   300,  -189,     0,   301,     0,
       0,   303,     0,     0,   305,   306,  3454,     0,     0,     0,
     308,     0,   309,   310,     0,   311,   312,   313,     0,     0,
     315,     0,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,     0,   323,     0,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,     0,   332,     0,     0,
       0,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,     0,   352,   353,   354,     0,     0,
     355,   356,     0,     0,     0,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,     0,   361,   362,     0,     0,
       0,     0,     0,     0,     0,   363,     0,     0,   364,     0,
       0,   365,   366,   367,     0,     0,  -189,     0,   368,     0,
     369,     0,     0,     0,     0,   371,     0,     0,  -204,   122,
    3455,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,     0,     0,     0,   130,   131,   132,
       0,     0,  -189,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,     0,
       0,     0,     0,   143,     0,   144,     0,   145,     0,     0,
       0,     0,   148,   149,  3448,     0,   151,     0,   152,   153,
       0,     0,   155,     0,   157,   158,     0,     0,   159,     0,
       0,   160,     0,     0,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,     0,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,     0,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,  -211,   180,   181,   182,     0,     0,   183,     0,
     184,   185,     0,     0,     0,   187,     0,   188,     0,     0,
     189,  3449,     0,   190,   191,   192,     0,     0,     0,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,     0,
     204,     0,     0,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,  3450,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,  3451,     0,     0,     0,     0,     0,     0,
       0,   219,     0,     0,     0,   220,  3452,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,  -189,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,     0,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,  3453,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,     0,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,     0,   300,  -189,     0,
     301,     0,     0,   303,     0,     0,   305,   306,  3454,     0,
       0,     0,   308,     0,   309,   310,     0,   311,   312,   313,
       0,     0,   315,     0,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,     0,   323,     0,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,     0,   332,
       0,     0,     0,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,     0,   352,   353,   354,
       0,     0,   355,   356,     0,     0,     0,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,     0,   361,   362,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
     364,     0,     0,   365,   366,   367,  -211,     0,  -189,     0,
     368,     0,   369,     0,     0,     0,     0,   371,     0,     0,
    -211,   122,  3455,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,     0,     0,     0,   130,
     131,   132,     0,     0,  -189,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,     0,     0,     0,     0,   143,     0,   144,     0,   145,
       0,     0,     0,     0,   148,   149,  3448,     0,   151,     0,
     152,   153,     0,     0,   155,     0,   157,   158,     0,     0,
     159,     0,     0,   160,     0,     0,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,     0,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,     0,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,  3527,   180,   181,   182,     0,     0,
     183,     0,   184,   185,     0,     0,     0,   187,     0,   188,
       0,     0,   189,  3449,     0,   190,   191,   192,     0,     0,
       0,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,     0,   204,     0,     0,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,  3450,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,  3451,     0,     0,     0,     0,
       0,     0,     0,   219,     0,     0,     0,   220,  3452,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,  -189,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,     0,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,  3453,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,     0,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,     0,   300,
    -189,     0,   301,     0,     0,   303,     0,     0,   305,   306,
    3454,     0,     0,     0,   308,     0,   309,   310,     0,   311,
     312,   313,     0,     0,   315,     0,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,     0,
     323,     0,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
       0,   332,     0,     0,     0,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,     0,   352,
     353,   354,     0,     0,   355,   356,     0,     0,     0,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
    -189,     0,   368,     0,   369,     0,     0,     0,     0,   371,
       0,     0,     0,   122,  3455,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,     0,     0,
       0,   130,   131,   132,     0,     0,  -189,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,     0,     0,     0,     0,   143,     0,   144,
       0,   145,     0,     0,     0,     0,   148,   149,  3448,     0,
     151,     0,   152,   153,     0,     0,   155,     0,   157,   158,
       0,     0,   159,     0,     0,   160,     0,     0,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,     0,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,     0,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,  3577,   180,   181,   182,
       0,     0,   183,     0,   184,   185,     0,     0,     0,   187,
       0,   188,     0,     0,   189,  3449,     0,   190,   191,   192,
       0,     0,     0,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,     0,   204,     0,     0,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,  3450,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,  3451,     0,     0,
       0,     0,     0,     0,     0,   219,     0,     0,     0,   220,
    3452,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,  -189,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,     0,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,  3453,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
       0,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
       0,   300,  -189,     0,   301,     0,     0,   303,     0,     0,
     305,   306,  3454,     0,     0,     0,   308,     0,   309,   310,
       0,   311,   312,   313,     0,     0,   315,     0,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,     0,   323,     0,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,     0,   332,     0,     0,     0,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
       0,   352,   353,   354,     0,     0,   355,   356,     0,     0,
       0,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,     0,   361,   362,     0,     0,     0,     0,     0,     0,
       0,   363,     0,     0,   364,     0,     0,   365,   366,   367,
       0,     0,  -189,     0,   368,     0,   369,     0,     0,     0,
       0,   371,     0,     0,     0,   122,  3455,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
       0,     0,     0,   130,   131,   132,     0,     0,  -189,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,     0,     0,     0,     0,   143,
       0,   144,     0,   145,     0,     0,     0,     0,   148,   149,
    3448,     0,   151,     0,   152,   153,     0,     0,   155,     0,
     157,   158,     0,     0,   159,     0,     0,   160,     0,     0,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,     0,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,     0,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,  3610,   180,
     181,   182,     0,     0,   183,     0,   184,   185,     0,     0,
       0,   187,     0,   188,     0,     0,   189,  3449,     0,   190,
     191,   192,     0,     0,     0,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,     0,   204,     0,     0,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,  3450,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,  3451,
       0,     0,     0,     0,     0,     0,     0,   219,     0,     0,
       0,   220,  3452,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,  -189,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,     0,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
    3453,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,     0,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,     0,   300,  -189,     0,   301,     0,     0,   303,
       0,     0,   305,   306,  3454,     0,     0,     0,   308,     0,
     309,   310,     0,   311,   312,   313,     0,     0,   315,     0,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,     0,   323,     0,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,     0,   332,     0,     0,     0,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,     0,   352,   353,   354,     0,     0,   355,   356,
       0,     0,     0,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,     0,   361,   362,     0,     0,     0,     0,
       0,     0,     0,   363,     0,     0,   364,     0,     0,   365,
     366,   367,     0,     0,  -189,     0,   368,     0,   369,     0,
       0,     0,     0,   371,     0,     0,     0,   122,  3455,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,     0,     0,     0,   130,   131,   132,     0,     0,
    -189,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,     0,     0,     0,
       0,   143,     0,   144,     0,   145,     0,     0,     0,     0,
     148,   149,  3448,     0,   151,     0,   152,   153,     0,     0,
     155,     0,   157,   158,     0,     0,   159,     0,     0,   160,
       0,     0,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,     0,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,     0,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
    -208,   180,   181,   182,     0,     0,   183,     0,   184,   185,
       0,     0,     0,   187,     0,   188,     0,     0,   189,  3449,
       0,   190,   191,   192,     0,     0,     0,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,     0,   204,     0,
       0,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,  3450,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,  3451,     0,     0,     0,     0,     0,     0,     0,   219,
       0,     0,     0,   220,  3452,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,  -189,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
       0,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,  3453,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,     0,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,     0,   300,  -189,     0,   301,     0,
       0,   303,     0,     0,   305,   306,  3454,     0,     0,     0,
     308,     0,   309,   310,     0,   311,   312,   313,     0,     0,
     315,     0,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,     0,   323,     0,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,     0,   332,     0,     0,
       0,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,     0,   352,   353,   354,     0,     0,
     355,   356,     0,     0,     0,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,     0,   361,   362,     0,     0,
       0,     0,     0,     0,     0,   363,     0,     0,   364,     0,
       0,   365,   366,   367,     0,     0,  -189,     0,   368,     0,
     369,     0,     0,     0,     0,   371,     0,     0,     0,   122,
    3455,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,     0,     0,     0,   130,   131,   132,
       0,     0,  -189,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,     0,
       0,     0,     0,   143,     0,   144,     0,   145,     0,     0,
       0,     0,   148,   149,  3448,     0,   151,     0,   152,   153,
       0,     0,   155,     0,   157,   158,     0,     0,   159,     0,
       0,   160,     0,     0,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,     0,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,     0,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,  -214,   180,   181,   182,     0,     0,   183,     0,
     184,   185,     0,     0,     0,   187,     0,   188,     0,     0,
     189,  3449,     0,   190,   191,   192,     0,     0,     0,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,     0,
     204,     0,     0,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,  3450,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,  3451,     0,     0,     0,     0,     0,     0,
       0,   219,     0,     0,     0,   220,  3452,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,  -189,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,     0,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,  3453,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,     0,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,     0,   300,  -189,     0,
     301,     0,     0,   303,     0,     0,   305,   306,  3454,     0,
       0,     0,   308,     0,   309,   310,     0,   311,   312,   313,
       0,     0,   315,     0,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,     0,   323,     0,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,     0,   332,
       0,     0,     0,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,     0,   352,   353,   354,
       0,     0,   355,   356,     0,     0,     0,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,     0,   361,   362,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
     364,     0,     0,   365,   366,   367,     0,     0,  -189,     0,
     368,     0,   369,     0,     0,     0,     0,   371,     0,     0,
       0,   122,  3455,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,     0,     0,     0,   130,
     131,   132,     0,     0,  -189,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,     0,     0,     0,     0,   143,     0,   144,     0,   145,
       0,     0,     0,     0,   148,   149,  3448,     0,   151,     0,
     152,   153,     0,     0,   155,     0,   157,   158,     0,     0,
     159,     0,     0,   160,     0,     0,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,     0,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,     0,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,     0,   180,   181,   182,     0,     0,
     183,     0,   184,   185,     0,     0,     0,   187,     0,   188,
       0,     0,   189,  3449,     0,   190,   191,   192,     0,     0,
       0,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,     0,   204,     0,     0,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,  3450,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,  3451,     0,     0,     0,     0,
       0,     0,     0,   219,     0,     0,     0,   220,  3452,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,  -189,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,     0,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,  3453,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,     0,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,     0,   300,
    -189,     0,   301,     0,     0,   303,     0,     0,   305,   306,
    3454,     0,     0,     0,   308,     0,   309,   310,     0,   311,
     312,   313,     0,     0,   315,     0,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,     0,
     323,     0,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
       0,   332,     0,     0,     0,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,     0,   352,
     353,   354,     0,     0,   355,   356,     0,     0,     0,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
    -189,     0,   368,     0,   369,     0,     0,     0,     0,   371,
       0,     0,     0,   122,  3455,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,     0,     0,
       0,   130,   131,   132,     0,     0,  -189,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,     0,     0,     0,     0,   143,     0,   144,
       0,   145,     0,     0,     0,     0,   148,   149,  3448,     0,
     151,     0,   152,   153,     0,     0,   155,     0,   157,   158,
       0,     0,   159,     0,     0,   160,     0,     0,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,     0,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,     0,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,     0,   180,   181,   182,
       0,     0,   183,     0,   184,   185,     0,     0,     0,   187,
       0,   188,     0,     0,   189,  3449,     0,   190,   191,   192,
       0,     0,     0,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,     0,   204,     0,     0,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,  3450,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,  3451,     0,     0,
       0,     0,     0,     0,     0,   219,     0,     0,     0,   220,
    3452,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,  -189,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,     0,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,  3453,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
       0,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
       0,   300,  -189,     0,   301,     0,     0,   303,     0,     0,
     305,   306,  3454,     0,     0,     0,   308,     0,   309,   310,
       0,   311,   312,   313,     0,     0,   315,     0,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,     0,   323,     0,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,     0,   332,     0,     0,     0,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
       0,   352,   353,   354,     0,     0,   355,   356,     0,     0,
       0,     0,     0,     0,     0,   358,     0,     0,  3530,     0,
       0,     0,   361,   362,     0,     0,     0,     0,     0,     0,
       0,   363,     0,     0,   364,     0,     0,   365,   366,   367,
       0,     0,  -189,     0,   368,     0,   369,     0,     0,     0,
       0,   371,     0,     0,     0,   122,  3455,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,  1594,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,  1595,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,  1596,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,  1597,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,   696,   697,     0,   267,     0,
       0,  1598,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,  3629,  3618,  3630,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,  1599,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,   360,     0,   361,   362,     0,     0,     0,     0,
       0,     0,     0,   363,     0,     0,   364,     0,     0,   365,
     366,   367,     0,     0,     0,     0,   368,     0,   369,   370,
       0,     0,   122,   371,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   129,     0,     0,
     130,   131,   132,   133,     0,   134,     0,   135,     0,  2278,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,     0,   144,     0,
     145,   146,     0,   147,     0,   148,   149,   150,     0,   151,
       0,   152,   153,     0,   154,   155,   156,   157,   158,     0,
       0,   159,     0,     0,   160,     0,   161,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
     167,     0,     0,     0,     0,  2279,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,   179,   180,   181,   182,  1914,
       0,   183,     0,   184,   185,   186,     0,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,   191,   192,     0,
       0,   193,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,   546,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,     0,     0,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,   310,     0,
     311,   312,   313,   314,     0,   315,   316,     0,     0,     0,
     317,   318,   319,     0,  1915,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,     0,     0,   333,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,   547,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
       0,     0,     0,     0,   358,     0,     0,   359,     0,   360,
       0,   361,   362,     0,     0,     0,     0,     0,     0,     0,
     363,     0,     0,   364,     0,     0,   365,   366,   367,     0,
       0,     0,     0,   368,     0,   369,   370,     0,     0,   122,
     371,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,  2288,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,  2289,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,   546,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
     547,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,   360,     0,   361,   362,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
     364,     0,     0,   365,   366,   367,     0,     0,     0,     0,
     368,     0,   369,   370,     0,     0,   122,   371,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,  2278,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,  2279,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   546,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,   547,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,   122,   371,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,   700,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,   546,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,   547,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
     360,     0,   361,   362,     0,     0,     0,     0,     0,     0,
       0,   363,     0,     0,   364,     0,     0,   365,   366,   367,
       0,     0,     0,     0,   368,     0,   369,   370,     0,     0,
     122,   371,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,   652,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,   653,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,   654,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,   360,     0,   361,
     362,     0,     0,     0,     0,     0,     0,     0,   363,     0,
       0,   364,     0,     0,   365,   366,   367,     0,     0,     0,
       0,   368,     0,   369,   370,     0,     0,   122,   371,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
    2326,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,   546,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,   547,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,   360,     0,   361,   362,     0,     0,
       0,     0,     0,     0,     0,   363,     0,     0,   364,     0,
       0,   365,   366,   367,     0,     0,     0,     0,   368,     0,
     369,   370,     0,     0,   122,   371,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,  2278,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,   546,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,   547,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,   360,     0,   361,   362,     0,     0,     0,     0,     0,
       0,     0,   363,     0,     0,   364,     0,     0,   365,   366,
     367,     0,     0,     0,     0,   368,     0,   369,   370,     0,
       0,   122,   371,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,   546,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   547,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,   122,   371,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,  2268,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,   547,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,   360,     0,   361,   362,     0,
       0,     0,     0,     0,     0,     0,   363,     0,     0,   364,
       0,     0,   365,   366,   367,     0,     0,     0,     0,   368,
       0,   369,   370,     0,     0,   122,   371,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
    3572,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
    3573,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,   360,     0,   361,   362,     0,     0,     0,     0,
       0,     0,     0,   363,     0,     0,   364,     0,     0,   365,
     366,   367,     0,     0,     0,     0,   368,     0,   369,   370,
       0,     0,   122,   371,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   129,     0,     0,
     130,   131,   132,   133,     0,   134,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,     0,   144,     0,
     145,   146,     0,   147,     0,   148,   149,   150,     0,   151,
       0,   152,   153,     0,   154,   155,   156,   157,   158,     0,
       0,   159,     0,     0,   160,     0,   161,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
     167,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,     0,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,   191,   192,     0,
       0,   193,     0,     0,     0,     0,   194,   195,   719,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,     0,     0,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,   310,     0,
     311,   312,   313,   314,     0,   315,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,     0,     0,   333,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
       0,     0,     0,     0,   358,     0,     0,   359,     0,   360,
       0,   361,   362,     0,     0,     0,     0,     0,     0,     0,
     363,     0,     0,   364,     0,     0,   365,   366,   367,     0,
       0,     0,     0,   368,     0,   369,   370,     0,     0,   122,
     371,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,  1081,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,   360,     0,   361,   362,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
     364,     0,     0,   365,   366,   367,     0,     0,     0,     0,
     368,     0,   369,   370,     0,     0,   122,   371,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,  1865,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,  1866,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,   360,     0,   361,   362,     0,     0,     0,
       0,     0,     0,     0,   363,     0,     0,   364,     0,     0,
     365,   366,   367,     0,     0,     0,     0,   368,     0,   369,
     370,     0,     0,   122,   371,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,  1981,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
     360,     0,   361,   362,     0,     0,     0,     0,     0,     0,
       0,   363,     0,     0,   364,     0,     0,   365,   366,   367,
       0,     0,     0,     0,   368,     0,   369,   370,     0,     0,
     122,   371,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,   547,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,   360,     0,   361,
     362,     0,     0,     0,     0,     0,     0,     0,   363,     0,
       0,   364,     0,     0,   365,   366,   367,     0,     0,     0,
       0,   368,     0,   369,   370,     0,     0,   122,   371,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
    1865,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,   360,     0,   361,   362,     0,     0,
       0,     0,     0,     0,     0,   363,     0,     0,   364,     0,
       0,   365,   366,   367,     0,     0,     0,     0,   368,     0,
     369,   370,     0,     0,   122,   371,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,   360,     0,   361,   362,     0,     0,     0,     0,     0,
       0,     0,   363,     0,     0,   364,     0,     0,   365,   366,
     367,     0,     0,     0,     0,   368,     0,   369,   370,     0,
       0,   122,   371,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,  1380,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,  1381,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,   360,     0,
     361,   362,     0,     0,     0,     0,     0,     0,     0,   363,
       0,     0,   364,     0,     0,   365,   366,   367,     0,     0,
       0,     0,   368,     0,   369,   370,     0,     0,   122,   371,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,     0,     0,     0,   130,   131,   132,     0,
       0,     0,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,     0,     0,
       0,     0,   143,     0,   144,     0,   145,     0,     0,     0,
       0,   148,   149,     0,     0,   151,     0,   152,   153,     0,
       0,   155,     0,   157,   158,     0,     0,   159,     0,     0,
     160,     0,     0,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,     0,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,     0,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,     0,   180,   181,   182,     0,     0,   183,     0,   184,
     185,     0,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,     0,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,     0,   204,
       0,     0,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,     0,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,     0,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,     0,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,     0,   300,     0,     0,   301,
       0,     0,   303,     0,     0,   305,   306,     0,     0,     0,
       0,   308,     0,   309,   310,     0,   311,   312,   313,     0,
       0,   315,     0,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,     0,   323,     0,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,     0,   332,     0,
       0,     0,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,     0,   352,   353,   354,     0,
       0,   355,   356,     0,     0,     0,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,     0,   361,   362,     0,
       0,     0,     0,     0,     0,     0,   363,     0,     0,   364,
       0,     0,   365,   366,   367,     0,     0,     0,     0,   368,
       0,   369,     0,     0,     0,     0,   371
};

static const short int yycheck[] =
{
       7,   486,   456,   707,   708,   709,   411,   587,   667,   436,
     511,   752,    19,  1152,  1010,    22,   746,   747,   748,  1278,
     957,  1278,    29,   448,   449,   450,   633,   452,   610,   454,
     482,   483,    39,   730,   612,  1188,  1734,  1154,  1155,  1156,
    1844,  1816,    49,    22,  1060,   812,  1299,  2303,  1875,  2040,
    1167,  1580,   634,  1306,  1896,   633,  2047,  1496,  1074,   563,
     512,  1186,  1904,  2022,  1906,  1868,  1869,  1870,   569,  1074,
    1509,  1360,  2253,  1295,  1159,  1160,  2659,  1162,  1025,  1180,
      87,  1903,  1242,   813,  1859,  1462,     3,  1882,  1883,  1036,
    1037,  1317,  1318,  2685,  2636,    16,  2688,   443,     3,   840,
     107,   108,   843,   110,  1221,     3,    32,  1224,    87,   839,
    1937,     3,  1197,    18,   121,  2707,     3,     3,  1933,  1220,
       3,  2713,   852,   853,   854,     3,   108,  1212,   110,   581,
    1957,  1958,     3,    48,    18,  1252,  1253,    55,    16,    16,
    1257,    57,   121,    16,   671,  1230,  1231,  1232,    18,  1309,
      18,  1311,    54,    55,  2746,    27,  1241,  1583,    20,    92,
    1277,    10,  1279,  1927,   671,   862,   863,   864,    53,  1933,
      32,  1918,  1936,    34,   675,  1939,   495,  1416,    28,    20,
    1902,   171,    11,    45,  1476,   882,  1950,  1951,    34,    93,
      20,    57,    54,    55,    68,  1959,   171,   144,  1585,   213,
      66,   165,    32,    59,    20,  2347,   611,  1928,  1929,    43,
    1147,  2015,    78,    54,    55,    45,    32,  2912,   232,    86,
    2019,   108,   108,  2921,    54,    55,   678,   225,   574,    45,
    1078,   132,    57,   153,   225,  2246,   126,   142,    54,    55,
     171,   334,   667,    63,    48,    60,   210,   246,   246,   217,
     166,   187,   201,    58,   210,    32,    91,   225,   142,   225,
     247,    62,    91,    76,   128,   160,   635,   318,   153,   340,
     283,   156,   142,    32,   142,     8,   397,   318,    55,   257,
    3457,   420,   171,   168,   127,   476,  2918,   171,   112,   112,
     336,   420,   230,   403,   388,    58,   210,    12,    62,   433,
     166,   353,   476,   168,   554,   243,   420,   353,   174,   213,
     168,    65,  3451,  3452,   123,    94,   252,    94,    97,  2861,
      97,   104,   104,  2240,   337,   108,   146,   210,   105,   110,
     247,   171,   476,    38,   388,   455,   435,   494,   199,   454,
     175,   166,   237,   458,    12,   153,   175,   213,     8,   247,
     264,  1497,  2944,   199,  1500,   247,    37,  1953,   345,  1888,
     517,  2953,   196,  1509,   142,   213,   232,    27,    54,    55,
    3370,   562,  1518,   493,  1970,   509,   247,    63,  3073,   162,
     162,   210,   350,   522,   523,   225,   109,   385,   487,  1048,
     397,   876,   566,  3532,   264,   219,    57,   451,   256,   493,
     407,   651,   338,   155,   411,  2322,  1545,   122,   293,   416,
     544,  1550,   314,   263,   421,   120,   199,  1556,   562,   200,
    1559,   560,    11,   228,   476,   476,   225,   160,   345,  1855,
     476,   560,  1014,   328,   323,   476,   443,   416,     4,   395,
    1022,   562,    63,     9,    10,  3622,   560,   345,   364,   500,
     560,   353,   372,   460,   122,   907,  1038,  1039,   372,   500,
      51,    27,  1203,   470,   889,   228,    32,   474,   406,   562,
      36,  3103,  3104,   480,  1591,   482,   483,   455,   261,   261,
     487,   488,  1060,   264,  2287,   349,   401,   372,  2310,   425,
     497,   470,    48,   997,   501,  2024,   567,   306,   364,   506,
     507,   224,   509,   510,   511,   512,   455,  2649,   960,  1456,
     380,   135,   395,    23,  1015,  2318,   503,   366,   970,   560,
     109,   145,   281,  3065,  1529,   507,   346,   509,   510,  2344,
    1271,   366,   200,  3533,   533,  1974,   426,   366,   545,   364,
    1067,   408,   319,  2358,   394,  1393,   560,   560,   331,   331,
     116,   549,   516,    63,   561,  1672,   961,    67,   371,  1676,
    1067,   324,   569,   570,   372,   380,  3264,   574,   472,  2580,
     153,   562,   562,   439,   581,  1079,  2015,   420,   330,   435,
    2344,   415,   561,   530,   550,  1844,   561,  1844,   504,  2311,
    2312,   570,  1709,   561,  2358,  2021,   529,   401,   108,  1126,
    1760,   450,   948,  1895,   611,  1765,  1766,   525,  2355,  2865,
    1735,  1308,   485,   485,   368,   476,   533,   485,  1771,  1126,
    1773,  2342,  1861,  1048,   498,   971,  2425,  1324,  3323,   550,
     476,   562,  1757,   517,   560,   533,  2023,   472,   504,   488,
     502,   533,   562,   472,  1071,   546,  1905,   562,  1905,   427,
     567,   568,  1737,  1350,   455,  2836,   433,   535,   463,   102,
     667,   502,   533,   568,   566,  1034,   528,   537,   675,   567,
     568,   678,   502,   550,   681,   682,   568,   562,   562,   504,
     529,   568,   568,  1002,   534,   568,   502,   511,   511,   452,
     568,   455,   104,  3285,   529,  3287,   561,   568,   560,   478,
     463,    28,   481,   682,   481,   173,   387,   515,   524,   525,
     717,   104,   719,  3296,   497,   497,   470,   560,  3301,   343,
     401,   564,   232,   384,  1129,   346,   175,   170,   108,   230,
    2259,  2260,   509,   142,  1080,   489,   535,   328,   717,   491,
     719,   422,    69,   105,    34,   554,   555,   556,   247,  3005,
     162,   550,  1177,   318,   562,   507,   171,  2935,   347,   168,
    2938,    91,   205,    66,   104,  3357,   281,  3359,   420,   162,
    1909,  2574,   328,  2577,   187,   538,   444,   445,   446,   447,
     448,   449,   416,    67,  2626,   175,    49,   199,  2630,   372,
     264,   420,   460,   110,    57,    79,    74,    12,   517,  1938,
     420,  1940,   155,   109,  2626,   281,  1945,    97,  2630,  2612,
      19,   138,    91,  2588,   104,   325,   326,  1302,   536,   388,
     330,  1960,   162,  1962,  1963,  1964,   283,   337,  2054,  2055,
    2920,  2646,   247,   104,   517,  2571,  1261,   403,   213,   252,
    1265,   435,   561,   261,   174,   401,   345,   344,   420,   261,
     347,   475,   418,  3546,   364,  1356,   299,   232,   424,   199,
     867,   223,   869,   166,   307,   155,   294,   420,   261,  1451,
     426,  2961,   162,  1455,  1481,  3010,  1458,  1459,   444,   562,
     337,  3464,  2646,   213,   352,   472,  1882,  1883,  1293,  3431,
     342,   162,  1396,   171,   901,   371,   175,  1398,  1399,  2428,
     907,   402,  1406,  1481,   113,  2641,   380,   122,   560,   199,
     213,   476,   564,   331,   424,  1367,     0,   366,   224,   331,
     318,   261,   901,   492,    12,  2302,  1430,   370,   199,   232,
    2734,   560,   515,  3626,   213,   500,   354,   944,   331,   946,
     560,   948,  1889,  2738,  1349,  2105,  2905,   264,  2939,   472,
     330,   235,  2205,   960,   961,     3,  1361,  1973,   225,   435,
    2045,  3139,    53,   970,   971,  2050,   434,  3102,  1973,  2191,
    1907,   261,   325,   326,   981,   418,   366,   330,   171,   246,
    2065,    67,  2241,  1487,  2241,   560,   264,  2072,   560,   252,
     261,   331,   567,    79,   504,   560,  1003,  1004,  1005,  1006,
    1427,   362,  2087,  2088,  3185,  2106,  1013,   560,  1015,  2094,
    3593,    12,   425,    12,  1021,   269,   270,  2102,   427,   381,
     304,  1003,  1004,   472,  1031,    85,  1005,  1006,   318,   222,
     442,  1013,   118,   373,   122,   362,   376,   327,   142,  1021,
     330,   331,  1546,  1547,   328,  1549,   474,  1551,  1552,  1553,
    1554,  1555,  1031,  1557,  1558,   382,  2141,   252,   325,   326,
     331,   364,   153,   537,   317,   156,    85,  1764,    12,    13,
    1077,   499,  2361,  1080,  2199,  2897,  2898,   168,   476,   497,
     407,  2206,   472,   362,   337,   497,  2889,   366,   531,  2026,
     438,   439,   455,   441,   109,   379,   117,   217,  1077,   461,
     543,   503,   500,  3238,   497,   225,  2635,    12,  3286,   439,
    3288,   396,   560,   398,   535,   400,  3075,   402,   385,   567,
    3376,   122,  1129,   122,  1131,  1132,  1133,   454,  1135,    70,
      71,  2216,   386,   387,   329,   485,   328,  1144,   491,  1146,
      84,   562,   472,   473,    75,  3136,  2224,  2225,  2226,   235,
    1132,  1133,   345,   567,   507,   215,  1135,   497,    89,   561,
     485,  2439,   560,   526,  3420,  2443,   450,   108,   112,  3304,
     230,   438,    16,  1180,   504,   410,  3489,  2255,  2256,  2257,
     201,   532,   126,   243,   514,   472,   476,   420,   478,   130,
     470,   481,   472,   426,   473,   546,   215,   389,  2637,  2638,
    2639,   491,   293,  3007,   148,   453,   380,   497,   340,   488,
     500,   230,   562,  1220,   470,   159,   472,   122,   304,   393,
     161,    23,    24,  2662,   243,   213,   497,   475,   513,  1654,
     350,    85,   188,    20,   514,   514,   257,   222,   473,   325,
     326,    28,   328,   473,   188,   933,    33,  3089,   936,   423,
     529,   939,    54,    55,    56,  3568,  3391,   317,   325,   326,
     281,    63,   552,   553,   517,    67,   209,   525,  3581,   213,
     528,  1278,   429,   430,    76,   219,  3589,   337,  3339,   514,
    3341,   372,   549,   550,  2933,  2934,  1293,   552,   553,   522,
     523,    93,   209,   379,   529,  2548,  1721,   171,   317,  3612,
     561,   562,  2951,  2456,  2457,   264,   108,   535,  2957,   111,
     561,   562,   256,    85,  3627,     3,  2674,   561,   337,  2677,
    2678,   567,  2581,   142,  2581,   561,   562,   560,   284,   285,
      18,  2980,   288,   289,  2983,   450,  2694,   560,   140,  1375,
     395,  1377,  1349,    11,   365,   149,   406,  1354,   337,  1356,
     371,   517,   449,   450,  1361,   452,   365,   454,  1862,   410,
    1367,   215,  1369,   342,   450,   561,   562,  1374,  1375,   470,
    1377,   562,  1408,  1409,  1410,  2634,   230,  2634,   399,   561,
     562,   210,  1389,   561,   562,  1392,   337,   406,    85,   243,
    2668,  1398,  1399,  1400,  1401,  1374,  1375,    85,  1377,    46,
     460,  1408,  1409,  1410,   171,   561,   562,   561,   562,   257,
    1389,   213,    46,  1392,   435,   561,   562,   562,   220,  1426,
     416,  1400,  1401,   367,  2702,  2703,   503,  2194,  1435,  1408,
    1409,  1410,  2710,   337,   455,   561,   562,  1941,  1942,  2717,
     384,   460,   383,   215,   554,  1452,   390,   561,   562,   470,
    1457,   472,   396,   147,   142,   426,  2541,  1961,   230,   561,
     562,  2477,  1469,   317,  1869,  3240,  1871,  1872,  1475,   561,
     562,   243,   561,   562,   561,   562,   420,   165,  1457,   257,
     168,   561,   562,   337,   286,   561,   562,   431,   432,   561,
     562,  1319,  1320,  1321,  1322,  1323,  1475,   560,   300,   561,
     562,    15,    16,   191,   247,  2202,  2584,   561,   562,   197,
     493,  2215,  1917,  1918,   561,   562,  1943,   168,   215,   455,
      54,    55,   210,   467,   561,   562,  1533,   215,   561,   562,
     561,   562,   281,   230,   222,  1542,   561,   562,   561,   562,
    1315,  1316,   230,   561,   562,   317,   243,   455,  1953,   351,
     470,   353,   406,   561,   562,   243,   561,   562,   455,   247,
     139,   561,   562,  1570,   257,  1970,    77,   511,   256,   513,
     562,  1578,   374,   375,  1581,   377,  3403,   561,   562,   561,
     562,   561,   562,   339,  3387,   561,   562,  2740,  1570,   561,
     562,   561,   562,   468,  3292,   561,   562,   561,   562,  1578,
     561,  2860,   419,  2860,   561,   562,   460,   142,   143,   142,
     529,   413,   561,   562,   561,   562,     3,  1317,  1318,     6,
     317,   561,   562,    23,    24,    51,    13,   160,   389,   317,
     149,   561,   562,  2058,   406,  2040,    23,    24,   561,   562,
     566,  2066,  2047,   561,   562,   180,   560,   180,   207,   337,
     561,   562,   561,   562,    54,    55,    56,   345,  2811,   194,
     562,   194,   529,    63,   562,    52,   567,    67,   560,    56,
    2638,  2639,   560,  2253,  1262,  1263,    76,   560,   366,   560,
      67,  3109,  3110,  2590,  2591,  2560,  2561,  2294,   460,    76,
     560,   226,   494,    93,    81,  2850,  2851,   560,   560,   560,
     560,   503,   560,   238,   237,   238,    93,   560,   108,   406,
     560,   111,   540,   560,   560,   560,  2294,   560,   406,  2301,
     560,   108,    23,    24,   111,   560,   560,   560,   560,   560,
     265,   551,   265,   120,   121,   560,  1743,  2238,   426,   126,
     140,   562,  2738,   567,   560,   560,   560,   134,   560,   560,
     560,   560,   560,   140,   560,    56,    46,  2842,   535,   560,
     562,   560,   560,   460,  2268,   560,    67,   560,   560,   560,
     560,   560,   460,   281,   560,    76,   560,   560,   165,   560,
     560,  2186,   252,  2284,     3,   560,   321,   560,   562,   560,
     323,   560,    93,   281,   560,   560,   560,   560,   560,    18,
      34,   560,   560,   560,   557,   560,   560,   108,   560,   560,
     111,   476,   560,   213,   560,   503,   560,   562,   560,   560,
     220,   560,   560,   560,   211,   560,   213,   560,   516,   517,
     363,   560,   560,   220,   560,   560,   560,  1844,   560,   140,
     560,   560,   560,   560,   560,   533,   246,   535,   560,   560,
     560,   560,  2356,   560,   560,  1862,  1863,   560,   560,  2363,
     560,   560,  1869,    97,  1871,  1872,    85,   470,   560,   560,
     104,   560,   562,   561,   562,   560,   560,   560,   560,   560,
     568,   560,   560,   560,   560,   560,   286,   560,   560,   560,
     560,   560,   566,   560,   560,   485,   485,   225,  1905,   286,
     300,   562,   562,   562,   562,   562,   476,  2604,   554,   168,
    1917,  1918,   213,   300,   510,   437,   355,   562,   305,   220,
    1927,   155,   560,   142,   561,   142,  1933,   562,   162,  1936,
     142,   142,  1939,   142,   142,   142,   142,  2389,   142,   142,
     142,   142,   142,  1950,  1951,   142,  1953,   142,   142,   168,
    2355,   351,  1959,   353,   562,  2892,   512,   561,   345,    44,
     175,  1968,   337,  1970,   351,   199,   353,  1974,  1975,    63,
      12,   476,   191,   171,   374,   375,   561,   377,   197,   561,
     122,     9,   532,   561,   561,   286,   561,   374,   375,  1968,
     377,   567,   560,   246,   380,   553,   215,   562,   214,   300,
     188,   533,   171,   222,   391,   567,   561,  2014,  2015,  3425,
     435,   230,   426,   413,   562,   562,   168,    44,   450,   450,
     450,  2725,    13,   450,   243,   419,   413,   261,   247,   450,
      66,   485,   119,  2040,   471,  2014,   471,   256,   231,   231,
    2047,   119,   562,   517,   567,   562,   561,    18,   561,   561,
     351,   561,   353,  2060,   267,   268,   269,   270,   271,   272,
    3319,   562,   275,   276,   277,   278,   279,   280,   561,   282,
     561,   561,   561,   374,   375,   561,   377,  3493,   562,   562,
     562,   561,   554,  3200,   318,   561,  3225,  3226,  3227,  3228,
    3506,   562,  3508,    84,   494,   562,   330,   331,   317,  2106,
     561,   561,   561,   503,   562,   567,   562,   494,   171,   562,
     561,   561,   413,   562,   562,   562,   503,   562,   337,   562,
     561,   112,   562,   565,   562,   561,   345,   560,   562,  3214,
     427,   256,  3548,   562,   562,   126,   476,   561,   560,   562,
    3556,   561,  2846,   562,   562,   562,   561,   366,   560,   562,
     561,   561,   561,   561,   560,   562,   561,   148,   561,   561,
     560,   562,   561,   561,   561,   561,   561,   550,   159,   561,
     561,  3430,  3588,   386,   387,   562,   485,   562,   562,  2186,
     562,   568,  3598,   562,   561,   561,  3602,   406,  2593,   561,
     485,   562,   562,   494,   561,   561,   561,   188,   562,   562,
     562,   561,   503,   561,  2609,   561,   561,   426,   561,  3625,
    2217,   561,   485,   562,  2221,  3631,  2223,  2224,  2225,  2226,
     567,   567,   213,   562,   537,  3641,   252,  2234,   219,   485,
     560,  2238,   342,   171,  2241,   171,   171,   222,   171,   227,
     567,   460,   476,   567,   478,   562,   535,   481,  2255,  2256,
    2257,   230,   230,   348,    93,  2234,  2836,   491,   296,    93,
     232,  2268,   232,   497,   560,   256,   500,  2274,   567,  2276,
     345,   476,   560,   560,   554,   561,  3535,  2284,  3535,   561,
     221,   331,   331,   561,   503,   561,   561,   171,   171,   171,
     331,   546,   561,   561,   561,   567,   567,   567,   517,   561,
     561,   210,   554,   560,  3563,   337,   171,    12,    13,   567,
     225,   562,   561,   244,   533,   511,   535,    63,   552,   553,
     269,   337,   230,   230,   562,    18,  3585,   232,  3585,   232,
     337,    18,   561,    18,   560,   247,   561,  2344,   561,   561,
     560,   562,   561,   562,   223,   223,   560,   138,  2355,   568,
     532,  2358,   129,   241,   420,   191,   428,   567,   142,   348,
     230,   230,   561,   108,  3023,  3106,  3107,  3108,   547,   108,
     561,   561,   561,   331,   561,   561,   367,   561,   561,    84,
    3519,   561,  2389,   561,   561,   561,   561,  2891,   562,  2396,
     561,   561,  2399,   384,   561,   561,  2403,  2404,   562,   390,
    2407,   561,   561,   561,   561,   396,   561,   112,   562,   562,
    2417,   562,   561,   561,   561,   561,   561,   561,   561,  3149,
    2399,   126,   561,   561,   561,   561,   561,   561,   561,   420,
     562,   561,    98,    99,   100,   101,   102,   561,  2417,   561,
     431,   432,   561,   148,   562,   561,   567,   562,   562,   561,
     561,   361,   561,   561,   159,   561,  2960,   562,   561,   561,
     561,   561,  1486,   562,   561,  3169,  3170,   331,   560,   562,
    2875,  3130,   560,   562,  1498,  1499,   467,  1501,  1502,  1503,
     561,   560,  1506,   188,  3143,   567,   560,  1511,   561,   560,
     560,  1515,  1516,  1517,   561,  1519,  1520,  1521,  1522,  1523,
     560,  1525,  1526,  1527,   170,   560,   560,   331,   213,  2936,
     561,   422,    40,   561,   219,   371,   561,   561,   561,   331,
     511,   561,   513,   535,   561,   222,   561,    44,   562,   197,
     303,   562,   380,   476,  2939,   230,   202,   203,   204,   205,
     517,   517,   567,   560,   476,   560,  3050,   560,   331,   331,
     560,   256,    32,  3283,  2959,   528,   560,   331,   511,   528,
     108,   232,   232,   330,   561,   331,   331,   331,   331,   331,
     535,     3,   562,   496,  2581,  2582,   560,  2584,   561,   561,
     561,    13,    14,   303,   151,   476,  2593,   561,   232,   476,
     476,   547,  2599,  3297,    26,   561,    28,   561,  3023,   562,
     562,   561,  2609,   562,   561,  3185,   561,   561,    65,   561,
    2617,   561,    16,   561,    46,    47,   561,   561,   517,   561,
      52,   561,   561,   517,    56,    57,   560,  2634,   327,   295,
     523,   297,   298,   299,   561,   561,   561,    69,   562,  2646,
     561,   307,   561,   561,   561,   168,  2653,   561,   331,   562,
     331,   342,    84,   511,   472,  2662,   249,   561,   270,   560,
     560,    57,   367,   342,    57,   561,   561,    44,   366,   561,
      44,   103,  3176,  3078,   135,    44,   561,   142,   384,   384,
     112,   113,   114,     5,   561,   390,   561,   342,   562,   342,
     561,   396,   131,   125,   126,   403,   562,    44,    44,  3358,
      44,   118,     7,   414,   370,  3130,   561,    16,   565,   532,
     569,   560,   274,   171,    19,   420,   148,    22,  3143,   210,
     561,   142,   222,   138,    29,   532,   431,   432,   568,  2736,
     331,  3136,   164,   560,    39,  3394,  3395,   562,  3397,   561,
     209,   547,   106,   138,    49,   263,   125,   568,   249,   569,
     426,   417,   418,   548,   547,   568,   188,   562,   138,   195,
     562,   548,   467,   195,   568,   138,   198,   168,   168,   168,
     394,   108,   523,   534,  1790,   169,   673,  3512,  3437,  3180,
    3439,  3440,    87,  3300,  1560,  3173,  3607,   219,  3642,  3611,
    3510,  3006,  3496,  1126,   391,  2732,  3101,  1529,  2015,  2662,
    1496,   233,   107,   108,  1067,   110,   511,  1977,   513,  1931,
    1533,  2653,  2718,  3128,  2923,  2968,   121,  2959,  2654,   251,
    2609,  3346,  3355,  3120,   256,  2685,  2685,  3269,  1139,  3187,
    2837,  3143,  1973,  1464,  1400,  3539,  1839,  1122,   682,  3293,
    2234,  1853,   455,  1821,   599,  3235,  1415,   666,  2845,  3050,
    1314,  2846,  2624,  2860,  2048,  1312,  1217,    23,    24,  3256,
    1045,  1167,  2207,  3099,  3539,   531,  3078,  1858,  2875,  1817,
    1843,   948,  2860,   971,  2576,  3563,   542,   543,  2575,  2634,
    3430,   445,   719,   502,  1144,  3370,   436,  1366,    54,    55,
      56,  2566,   976,  3432,  3332,  3468,  3401,    63,  3585,  2961,
    1421,    67,  2581,   989,  2286,  2617,  2886,  3086,   428,   341,
      76,  2918,   941,   582,  1392,   979,  3223,  2221,  3229,   429,
    1944,   586,  3046,   472,  3003,   715,  2729,    93,  2013,  1288,
     362,  1955,  2939,  3358,    -1,    -1,     6,   369,    -1,    -1,
      -1,    -1,   108,    13,    -1,   111,    -1,    -1,    -1,    -1,
    1131,    -1,  2959,    23,    24,    -1,    -1,   389,    -1,   391,
     392,    -1,    -1,   395,    -1,    -1,   398,    -1,   400,  3394,
    3395,    -1,  3397,   405,   140,   407,    -1,  2984,    -1,  2986,
      -1,    -1,    52,    -1,   416,    -1,    56,    -1,   420,  2996,
      -1,    -1,    -1,    -1,   426,  3002,    -1,    67,    -1,   431,
      -1,    -1,    -1,   435,    -1,    -1,    76,    -1,    -1,    -1,
      -1,    81,  3437,    -1,  3439,  3440,    -1,  2996,    -1,    -1,
      -1,    -1,   454,    93,    -1,    -1,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   108,    -1,
      -1,   111,    -1,  3050,    -1,    -1,    -1,   213,  3533,    -1,
     120,    -1,    -1,    -1,   220,    -1,   126,    -1,    -1,    -1,
     492,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
     140,  3078,    -1,    -1,    -1,    -1,   508,    -1,    -1,   511,
      -1,    -1,    -1,    -1,   516,    -1,    -1,    -1,    -1,    -1,
      -1,  3098,   397,    -1,    -1,   165,  3103,  3104,    -1,    -1,
      -1,    -1,   407,    -1,    -1,    -1,   411,   539,    -1,    -1,
    3117,   416,    -1,    -1,    -1,    -1,   421,    -1,    -1,    -1,
     286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   560,  3136,
    3615,    -1,    -1,    -1,   300,    -1,    -1,    -1,   443,    -1,
      -1,    -1,    -1,   213,    -1,    -1,    -1,    -1,    -1,    -1,
     220,    -1,    -1,    -1,  3559,   460,    -1,  3642,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,  3174,    -1,   474,
      -1,    -1,    -1,    -1,    -1,   480,    -1,   482,   483,    -1,
    3187,    -1,   487,   488,    -1,   351,    -1,   353,    -1,    -1,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,   511,   512,   374,   375,
      -1,   377,    -1,  3638,    -1,    -1,   286,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,    -1,    -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,
     545,    -1,    -1,    -1,    -1,    -1,    -1,   413,    -1,  3256,
      -1,    -1,  3425,    -1,    -1,    -1,   561,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   569,   570,    -1,    -1,    -1,   574,
      -1,    -1,    -1,    -1,    -1,   345,   581,    -1,  3451,  3452,
      -1,   351,    -1,   353,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3300,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,   611,   377,    -1,    -1,
      -1,    -1,  3319,  3320,    -1,  3488,  3489,    -1,    -1,    -1,
    3493,   391,    -1,    -1,    -1,    -1,    -1,    -1,   494,    -1,
      -1,    -1,  3339,  3506,  3341,  3508,  3343,   503,    -1,    -1,
      -1,  3320,    -1,   413,    -1,    -1,    -1,    -1,    -1,  3356,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3532,
      -1,    -1,   667,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     675,    -1,    -1,   678,    -1,  3548,   681,   682,    -1,    -1,
      -1,    -1,    -1,  3556,    -1,  3392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3568,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3581,    -1,
      -1,    -1,   717,    -1,   719,  3588,  3589,    -1,  3425,    -1,
      -1,    -1,    -1,  3430,   494,  3598,    -1,    -1,    -1,  3602,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,  3612,
      -1,  3448,    -1,    -1,  3451,  3452,  3453,    -1,    -1,    -1,
      -1,    -1,  3625,    -1,  3627,    -1,    -1,    -1,  3631,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3641,    -1,
      -1,  3478,    -1,    -1,    -1,    -1,    13,    14,    -1,    -1,
      -1,  3488,  3489,    -1,    -1,    -1,  3493,    -1,    -1,    26,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3506,
      -1,  3508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,
      47,    -1,    -1,    -1,    -1,    52,    -1,    -1,    -1,    56,
      57,    -1,    -1,    -1,    -1,  3532,    -1,    -1,  3535,    -1,
      -1,    -1,    69,    -1,  3541,    -1,    -1,    -1,    -1,    -1,
    3547,  3548,    -1,    -1,    -1,    -1,    -1,    84,    -1,  3556,
      -1,    -1,  3559,    -1,    -1,    -1,  3563,    -1,    -1,    -1,
      -1,  3568,   867,    -1,   869,    -1,   103,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3581,   112,   113,   114,  3585,    -1,
    3587,  3588,  3589,    -1,    -1,  3592,    -1,    -1,   125,   126,
      -1,  3598,    -1,    -1,    -1,  3602,   901,    -1,    -1,    -1,
      -1,    -1,   907,    -1,    -1,  3612,    -1,    -1,  3615,    -1,
      -1,   148,    -1,    -1,    -1,    -1,    -1,    -1,  3625,    -1,
    3627,    -1,    -1,    -1,  3631,    -1,    -1,   164,    -1,    -1,
      -1,    -1,    -1,    -1,  3641,  3642,    -1,    -1,    -1,   944,
      -1,   946,    -1,   948,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   188,    -1,    -1,    -1,   960,   961,    -1,   195,    -1,
      -1,   198,    -1,    -1,    -1,   970,   971,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   981,    -1,    -1,    -1,
      -1,    -1,   219,    -1,   989,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,  1003,  1004,
    1005,  1006,    -1,    -1,    -1,    -1,    -1,    -1,  1013,    -1,
    1015,    -1,    -1,    -1,   251,    -1,  1021,    -1,    -1,   256,
      -1,    -1,    -1,    -1,    -1,    -1,  1031,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1077,    -1,    -1,  1080,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   341,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1129,   362,  1131,  1132,  1133,    -1,
    1135,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,  1144,
      -1,  1146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,   391,   392,    -1,    -1,   395,    -1,
      -1,   398,    -1,   400,    -1,    -1,    -1,    -1,   405,    -1,
     407,    -1,    -1,    -1,    -1,  1180,    -1,    -1,    -1,   416,
      -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,   426,
      -1,    -1,    -1,    -1,   431,    -1,    31,    32,   435,    -1,
      -1,    -1,    37,    -1,    39,    40,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1220,    -1,   454,    -1,    -1,
      55,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   508,    -1,  1278,   511,    -1,    -1,    -1,    -1,   516,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1293,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,    -1,    -1,    -1,   141,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   560,    -1,    -1,   161,    -1,   163,    30,
      -1,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1349,    -1,    -1,   182,   183,  1354,
      -1,  1356,    -1,    54,    55,    -1,  1361,    -1,    -1,    -1,
      -1,    -1,  1367,    64,  1369,    66,    -1,    -1,    -1,  1374,
    1375,    -1,  1377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    83,    84,  1389,    -1,    -1,  1392,   223,    -1,
      -1,    92,    -1,  1398,  1399,  1400,  1401,    -1,    -1,    -1,
      -1,    -1,    -1,  1408,  1409,  1410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,    -1,    -1,
      -1,  1426,    -1,    -1,   259,   260,    -1,   262,    -1,    -1,
    1435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   139,   140,
      -1,    -1,    -1,   144,    -1,    -1,    -1,  1452,    -1,    -1,
      -1,    -1,  1457,    -1,    -1,   290,   291,   292,    -1,    -1,
      -1,    -1,    -1,    -1,  1469,    -1,    -1,    -1,    -1,    -1,
    1475,    -1,   173,    -1,   175,   310,   311,   312,    -1,    -1,
      -1,   316,    -1,    -1,   319,    -1,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   332,   333,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   212,   213,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,    -1,   357,    -1,   359,    -1,    -1,    -1,  1533,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,  1542,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,   252,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1570,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1578,    -1,    -1,  1581,    -1,    -1,    -1,
     281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   424,
      -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,
      -1,    -1,   477,   478,    -1,    -1,   481,   482,   483,   484,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   365,   366,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   524,
     525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,  1743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   526,    -1,    -1,    -1,   530,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1844,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1862,  1863,    -1,
      -1,    -1,    -1,    -1,  1869,    -1,  1871,  1872,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1917,  1918,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1927,    -1,    -1,    -1,    -1,    -1,  1933,    -1,
      -1,  1936,    -1,    -1,  1939,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1950,  1951,    -1,  1953,    -1,
      -1,    -1,    -1,    -1,  1959,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1968,    -1,  1970,    -1,    -1,    -1,  1974,
    1975,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2014,
    2015,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2040,    -1,    -1,    -1,    -1,
      -1,    -1,  2047,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2060,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2217,    -1,    -1,    -1,  2221,    -1,  2223,  2224,
    2225,  2226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2234,
      -1,    -1,    -1,  2238,    -1,    -1,  2241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2255,  2256,  2257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2268,    -1,    -1,    -1,    -1,    -1,  2274,
      -1,  2276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2284,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2355,    -1,    -1,  2358,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2389,    -1,    -1,    -1,    -1,    -1,
      -1,  2396,    -1,    -1,  2399,    -1,    -1,    -1,  2403,  2404,
      -1,    -1,  2407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   504,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2581,  2582,    -1,  2584,
      -1,    -1,    -1,    -1,   557,    -1,    -1,    -1,  2593,    -1,
      -1,    -1,    -1,    -1,  2599,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2609,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2634,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2646,    -1,    -1,    -1,    -1,    -1,    -1,  2653,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2662,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   685,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2736,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   786,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2837,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2860,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2875,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   861,    -1,
      -1,    -1,   865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2918,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2939,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2959,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2984,
      -1,  2986,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2996,    -1,    -1,    -1,    -1,    -1,  3002,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   989,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   998,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3050,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3078,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3098,    -1,    -1,    -1,    -1,  3103,  3104,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3174,
      -1,    -1,    -1,    -1,    -1,  1148,  1149,  1150,    -1,    -1,
      -1,    -1,  3187,    -1,  1157,  1158,    -1,    -1,  1161,    -1,
    1163,  1164,  1165,  1166,    -1,    -1,    -1,  1170,    -1,    -1,
    1173,  1174,    -1,  1176,    -1,  1178,  1179,    -1,  1181,  1182,
    1183,  1184,  1185,    -1,  1187,    -1,  1189,  1190,  1191,    -1,
    1193,  1194,  1195,  1196,    -1,  1198,  1199,    -1,  1201,    -1,
      -1,  1204,  1205,  1206,    -1,  1208,  1209,  1210,  1211,    -1,
    1213,  1214,  1215,  1216,    -1,    -1,    -1,    -1,    -1,  1222,
    1223,  3256,  1225,  1226,  1227,  1228,  1229,    -1,    -1,    -1,
      -1,  1234,    -1,  1236,  1237,  1238,  1239,  1240,    -1,    -1,
    1243,  1244,  1245,  1246,  1247,  1248,    -1,  1250,  1251,    -1,
      -1,  1254,  1255,  1256,    -1,  1258,    -1,  1260,    -1,    -1,
      -1,  1264,    -1,  1266,  1267,  3300,    -1,    -1,    -1,  1272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1280,  1281,  1282,
      -1,    -1,    -1,    -1,  3319,  3320,  1289,    -1,    -1,  1292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3339,    -1,  3341,    -1,  3343,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1351,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3392,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1395,    -1,    -1,  3430,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3448,    -1,    -1,    -1,    -1,  3453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3535,    -1,    -1,    -1,    -1,    -1,  3541,    -1,    -1,    -1,
      -1,    -1,  3547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3559,    -1,    -1,    -1,  3563,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1544,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3585,    -1,  3587,    -1,    -1,    -1,    -1,  3592,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3615,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1716,  1717,  1718,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1757,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1780,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2027,    -1,    -1,  2030,    -1,    -1,
    2033,  2034,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2046,    -1,    -1,  2049,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2062,
      -1,  2064,    -1,    -1,    -1,  2068,    -1,  2070,  2071,    -1,
      -1,    -1,  2075,    -1,  2077,  2078,    -1,  2080,    -1,    -1,
    2083,    -1,  2085,  2086,    -1,    -1,    -1,    -1,  2091,  2092,
      -1,    -1,  2095,    -1,  2097,    -1,  2099,    -1,  2101,    -1,
    2103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2114,  2115,    -1,    -1,  2118,    -1,  2120,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2128,  2129,    -1,  2131,    -1,
    2133,    -1,    -1,  2136,  2137,  2138,    -1,  2140,    -1,    -1,
      -1,    -1,  2145,  2146,  2147,  2148,    -1,    -1,    -1,    -1,
    2153,  2154,  2155,    -1,  2157,    -1,  2159,    -1,  2161,    -1,
    2163,    -1,  2165,    -1,    -1,    -1,    -1,    -1,    -1,  2172,
      -1,  2174,    -1,    -1,  2177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2228,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2277,    -1,    -1,    -1,    -1,  2282,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2339,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2432,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2505,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2515,    -1,  2517,    -1,  2519,    -1,    -1,    -1,
      -1,    -1,  2525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2550,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2618,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2759,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2769,    -1,    -1,    -1,
      -1,    -1,  2775,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2784,  2785,    -1,    -1,    -1,    -1,  2790,    -1,    -1,
      -1,  2794,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2807,    -1,    -1,    -1,    -1,    -1,
    2813,    -1,    -1,  2816,  2817,    -1,  2819,  2820,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2834,  2835,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2901,  2902,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2912,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3073,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3086,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3196,    -1,    -1,    -1,    -1,    -1,  3202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3239,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3249,    -1,  3251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3323,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3483,    -1,  3485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3509,    -1,    -1,    -1,
      -1,    -1,  3515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3524,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,  3552,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      32,    33,    34,    35,    36,    37,    38,    -1,    40,    41,
      42,    43,    -1,    45,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    -1,    58,    59,    60,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,
      82,    83,    -1,  3616,    86,    87,    88,    -1,    90,    91,
      -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,
     102,   103,   104,    -1,    -1,   107,   108,   109,    -1,   111,
      -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,   133,   134,    -1,   136,   137,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
     162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
     192,   193,    -1,   195,   196,    -1,   198,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,   236,   237,    -1,   239,   240,   241,
      -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,   495,    -1,   497,   498,   499,   500,    -1,
     502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,
      -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,    -1,
      -1,   563,   564,    -1,   566,   567,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,    -1,   192,   193,    -1,   195,   196,    -1,   198,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,
      -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
      -1,   330,   331,    -1,   333,   334,    -1,   336,   337,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,
      -1,   560,    -1,    -1,   563,   564,    -1,   566,   567,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    32,    33,    34,    35,
      36,    37,    38,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,
      86,    87,    88,    -1,    90,    91,    -1,    93,    94,    95,
      96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,
      -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,
     116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,
     136,   137,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,   162,    -1,   164,    -1,
      -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,   192,   193,    -1,   195,
     196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,
      -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,   420,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,   493,   494,   495,
      -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,   505,
     506,   507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,
      -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,    -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,
     566,   567,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,   192,
     193,    -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,
     243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,    -1,    -1,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,
     543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,    -1,   558,    -1,   560,   561,    -1,
     563,   564,    -1,   566,   567,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    32,    33,    34,    35,    36,    37,    38,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    -1,    58,    59,
      60,    61,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    -1,    -1,    77,    -1,    79,
      -1,    81,    82,    83,    -1,    -1,    86,    87,    88,    -1,
      90,    91,    -1,    93,    94,    95,    96,    97,    -1,    -1,
      -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,   109,
      -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,   133,   134,    -1,   136,   137,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,   192,   193,    -1,   195,   196,    -1,   198,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,   209,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,   301,   302,   303,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,    -1,
     330,   331,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,   493,   494,   495,    -1,   497,   498,   499,
     500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,
     560,   561,    -1,   563,   564,    -1,   566,   567,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,   192,   193,    -1,   195,   196,
      -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,
      -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,
      -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
      -1,   558,    -1,   560,   561,    -1,   563,   564,    -1,   566,
     567,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    32,    33,
      34,    35,    36,    37,    38,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    -1,    58,    59,    60,    61,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    72,    73,
      74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,
      -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,    93,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,
     104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,
      -1,   115,   116,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,
     134,    -1,   136,   137,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,   162,    -1,
     164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,   192,   193,
      -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,   209,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,   243,
     244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
      -1,    -1,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,   493,
     494,   495,    -1,   497,   498,   499,   500,    -1,   502,    -1,
      -1,   505,   506,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,
      -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,    -1,   558,    -1,   560,   561,    -1,   563,
     564,    -1,   566,   567,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
      -1,   192,   193,    -1,   195,   196,    -1,   198,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
     541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,
      -1,    -1,   563,   564,    -1,   566,   567,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    32,    33,    34,    35,    36,    37,
      38,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    -1,
      58,    59,    60,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    74,    -1,    -1,    77,
      -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,    87,
      88,    -1,    90,    91,    -1,    93,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,
     108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,   133,   134,    -1,   136,   137,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,   162,    -1,   164,    -1,    -1,   167,
      -1,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,   192,   193,    -1,   195,   196,    -1,
     198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,
     248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,   493,   494,   495,    -1,   497,
     498,   499,   500,    -1,   502,    -1,    -1,   505,   506,   507,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,
     548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,
     558,    -1,   560,    -1,    -1,   563,   564,    -1,   566,   567,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,    -1,   192,   193,    -1,
     195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,    -1,   243,   244,
      -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,
      -1,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,   301,   302,   303,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,    -1,   330,   331,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,
      -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,    -1,   558,    -1,   560,    -1,    -1,   563,   564,
      -1,   566,   567,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      32,    33,    34,    35,    36,    37,    38,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    -1,    58,    59,    60,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,
      82,    83,    -1,    -1,    86,    87,    88,    -1,    90,    91,
      -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,
     102,   103,   104,    -1,    -1,   107,   108,   109,    -1,   111,
      -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,   133,   134,    -1,   136,   137,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
     162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
     192,   193,    -1,   195,   196,    -1,   198,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
      -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,   493,   494,   495,    -1,   497,   498,   499,   500,    -1,
     502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,
      -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,    -1,
      -1,   563,   564,    -1,   566,   567,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,    -1,   192,   193,    -1,   195,   196,    -1,   198,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,
      -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,    -1,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,
      -1,   560,    -1,    -1,   563,   564,    -1,   566,   567,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    32,    33,    34,    35,
      36,    37,    38,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,
      86,    87,    88,    -1,    90,    91,    -1,    93,    94,    95,
      96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,
      -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,
     116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,
     136,   137,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,   162,    -1,   164,    -1,
      -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,   192,   193,    -1,   195,
     196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,
      -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,   493,   494,   495,
      -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,   505,
     506,   507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,
      -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,    -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,
     566,   567,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,   192,
     193,    -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,
     243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,    -1,    -1,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,
     543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,    -1,   558,    -1,   560,    -1,    -1,
     563,   564,    -1,   566,   567,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    32,    33,    34,    35,    36,    37,    38,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    -1,    58,    59,
      60,    61,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    -1,    -1,    77,    -1,    79,
      -1,    81,    82,    83,    -1,    -1,    86,    87,    88,    -1,
      90,    91,    -1,    93,    94,    95,    96,    97,    -1,    -1,
      -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,   109,
      -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,   133,   134,    -1,   136,   137,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,   192,   193,    -1,   195,   196,    -1,   198,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,   209,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,   301,   302,   303,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,    -1,
     330,   331,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,   493,   494,   495,    -1,   497,   498,   499,
     500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,
     560,    -1,    -1,   563,   564,    -1,   566,   567,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,   192,   193,    -1,   195,   196,
      -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,
      -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,    -1,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,
      -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
      -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,   566,
     567,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    78,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
     174,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,   213,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,   232,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,   246,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,   420,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    78,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
     174,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,   213,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,   232,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,   439,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,   420,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   561,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,   561,    17,    -1,
      -1,    20,   566,   567,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,   554,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,   560,    -1,    17,    -1,    -1,    20,    -1,   567,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,   566,   567,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,   245,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,     5,   543,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,   566,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,
       5,   543,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,   566,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
     245,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,
      28,   566,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,
      68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,
      -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,
      -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,
     408,    -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,
     418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,
      -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,    -1,
     548,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,   562,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
     554,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,   554,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,    -1,    -1,   543,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,   554,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,    -1,    -1,   543,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,   554,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,
      68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     128,   129,   130,    -1,   132,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,
      -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,
      -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,
     408,    -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,
     418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,
      -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,    -1,    -1,    -1,   543,    -1,    -1,   546,     5,
     548,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,
      -1,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,
      -1,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,   157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,
     396,    -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,
      -1,    -1,   408,    -1,   410,   411,    -1,   413,   414,   415,
      -1,    -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,
      -1,    -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,   532,    -1,   534,    -1,
     536,    -1,   538,    -1,    -1,    -1,    -1,   543,    -1,    -1,
     546,     5,   548,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    23,
      24,    25,    -1,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,    53,
      -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,    -1,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,   209,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,   393,
     394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,   403,
     404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,   413,
     414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,    -1,
     434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
      -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,    -1,    -1,    -1,   543,
      -1,    -1,    -1,     5,   548,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,
      -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
      -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,
     402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,
      -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
      -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,    -1,    -1,    -1,     5,   548,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    23,    24,    25,    -1,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    -1,    -1,    -1,    -1,    49,
      -1,    51,    -1,    53,    -1,    -1,    -1,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    -1,    68,    -1,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,    -1,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,   157,    -1,   159,
     160,   161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,   209,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,    -1,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,    -1,   393,   394,    -1,   396,    -1,    -1,   399,
      -1,    -1,   402,   403,   404,    -1,    -1,    -1,   408,    -1,
     410,   411,    -1,   413,   414,   415,    -1,    -1,   418,    -1,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,    -1,   434,    -1,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
      -1,    -1,    -1,   543,    -1,    -1,    -1,     5,   548,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,
      68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,
      -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,
      -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,
     408,    -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,
     418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,
      -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,     5,
     548,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,
      -1,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,
      -1,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,   157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,
     396,    -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,
      -1,    -1,   408,    -1,   410,   411,    -1,   413,   414,   415,
      -1,    -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,
      -1,    -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,    -1,    -1,    -1,   543,    -1,    -1,
      -1,     5,   548,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    23,
      24,    25,    -1,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,    53,
      -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,    -1,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,   209,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,   393,
     394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,   403,
     404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,   413,
     414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,    -1,
     434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
      -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,    -1,    -1,    -1,   543,
      -1,    -1,    -1,     5,   548,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,
      -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,   263,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
      -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,
     402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,
      -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
      -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543,    -1,    -1,    -1,     5,   548,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,   104,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,   162,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,   325,   326,    -1,   328,    -1,
      -1,   331,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,   441,   442,   443,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,   497,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,     5,   543,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,
      23,    24,    25,    26,    -1,    28,    -1,    30,    -1,    32,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,
      53,    54,    -1,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
     103,    -1,    -1,    -1,    -1,   108,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,   142,
      -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,
      -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,
      -1,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,   427,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,
     543,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    32,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,   108,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,   245,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,    -1,     5,   543,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    32,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,   108,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,   245,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,     5,   543,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    88,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,
       5,   543,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    34,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
     108,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,
      -1,    -1,    -1,   241,    -1,    -1,   244,   245,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
     328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,    -1,     5,   543,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    32,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,
     241,    -1,    -1,   244,   245,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
      -1,     5,   543,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,   245,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    18,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,    -1,     5,   543,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      80,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
     150,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,     5,   543,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,
      23,    24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,
      53,    54,    -1,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
     103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,
      -1,   164,    -1,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,
     543,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,   108,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,    -1,     5,   543,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,   108,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,     5,   543,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,   364,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,
       5,   543,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
     108,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
     328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,    -1,     5,   543,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
      -1,     5,   543,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,
      -1,    58,    59,    -1,    -1,    62,    -1,    64,    65,    -1,
      -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,    -1,   393,    -1,    -1,   396,
      -1,    -1,   399,    -1,    -1,   402,   403,    -1,    -1,    -1,
      -1,   408,    -1,   410,   411,    -1,   413,   414,   415,    -1,
      -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,
      -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,    -1,    -1,    -1,    -1,   543
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const unsigned short int yystos[] =
{
       0,     3,    13,    14,    26,    28,    46,    47,    52,    56,
      57,    69,    84,   103,   112,   113,   114,   125,   126,   148,
     164,   188,   195,   198,   219,   233,   251,   256,   341,   362,
     369,   389,   391,   392,   395,   398,   400,   405,   407,   416,
     420,   426,   431,   435,   454,   458,   492,   508,   511,   516,
     539,   560,   571,   572,   573,   574,   575,   576,   578,   583,
     585,   590,   608,   762,   780,   783,   791,   793,   795,   798,
     803,   805,   810,   813,   818,   822,   830,   831,   978,   980,
     986,   989,  1014,  1022,  1033,  1035,  1049,  1052,  1055,  1061,
    1065,  1069,  1072,  1073,  1118,  1135,  1141,  1143,  1150,  1152,
    1177,  1183,  1184,  1185,  1186,  1224,    11,    91,   175,   210,
     366,   776,  1205,  1206,   252,   329,   812,   470,   472,  1137,
    1178,   213,     5,     7,     8,     9,    10,    11,    17,    20,
      23,    24,    25,    26,    28,    30,    33,    37,    40,    41,
      43,    45,    46,    49,    51,    53,    54,    56,    58,    59,
      60,    62,    64,    65,    67,    68,    69,    70,    71,    74,
      77,    79,    86,    93,    94,    97,   102,   103,   109,   111,
     117,   119,   120,   121,   125,   128,   129,   130,   134,   138,
     139,   140,   141,   144,   146,   147,   148,   151,   153,   156,
     159,   160,   161,   164,   169,   170,   173,   175,   182,   183,
     186,   187,   189,   195,   196,   198,   201,   205,   206,   207,
     208,   211,   212,   216,   220,   224,   227,   228,   235,   237,
     241,   244,   250,   252,   255,   257,   267,   268,   269,   270,
     271,   272,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   284,   285,   286,   288,   289,   293,   294,   295,   296,
     299,   300,   303,   305,   307,   310,   311,   312,   313,   314,
     315,   316,   319,   320,   322,   323,   324,   328,   333,   334,
     336,   338,   339,   340,   351,   352,   353,   355,   357,   359,
     362,   363,   365,   367,   368,   370,   371,   372,   373,   374,
     375,   376,   377,   382,   383,   386,   387,   388,   390,   392,
     393,   396,   398,   399,   400,   402,   403,   407,   408,   410,
     411,   413,   414,   415,   416,   418,   419,   423,   424,   425,
     428,   432,   433,   434,   435,   437,   438,   445,   446,   448,
     451,   454,   455,   458,   459,   461,   462,   463,   467,   468,
     470,   471,   473,   474,   477,   478,   479,   480,   481,   487,
     489,   492,   493,   494,   495,   498,   499,   502,   507,   510,
     512,   514,   515,   523,   526,   529,   530,   531,   536,   538,
     539,   543,   596,  1108,  1112,  1116,  1117,   281,  1137,  1137,
     536,  1179,    91,   174,   439,   473,   504,   514,   594,   680,
     681,   682,   754,  1023,   979,    91,   175,   213,   366,   473,
     488,   514,   529,   985,  1112,   812,   595,   567,  1106,  1107,
    1112,   584,   987,  1070,    93,   213,   472,  1137,   812,  1112,
    1066,   416,   514,  1137,   812,   990,  1062,  1137,   595,  1179,
    1112,   833,   835,   836,   342,  1120,  1036,   454,   458,   435,
     487,   435,   472,  1034,  1142,  1015,  1112,    28,    69,   138,
     362,   382,   407,   454,  1226,   420,   560,   832,     0,     3,
     362,   153,  1053,  1106,  1112,   142,   768,  1112,   596,   596,
     472,   109,  1202,  1137,   794,  1179,   819,   820,  1106,   609,
     567,   485,   796,   806,    16,  1180,   209,   683,   595,   347,
    1200,  1202,  1203,  1204,  1205,   472,   681,   213,   210,   264,
     372,  1031,  1032,   897,   898,   209,   984,   984,  1112,   984,
     984,   595,   984,  1137,   579,  1056,    12,    13,    84,   112,
     126,   148,   159,   188,   213,   219,   256,   367,   384,   390,
     396,   420,   431,   432,   467,   511,   513,  1153,  1155,  1157,
    1158,  1112,   340,    60,   380,   567,   245,   476,  1109,  1112,
    1114,   110,   200,   264,   992,    76,   371,  1071,  1074,   222,
    1106,  1136,  1137,   171,    32,   281,  1041,  1067,  1112,   595,
     814,  1137,   110,   264,   993,  1021,   281,   371,   435,  1063,
    1064,   792,    12,  1151,  1155,   485,  1180,   834,    12,   122,
     200,   444,   445,   446,   447,   448,   449,   460,   840,   841,
     842,  1119,    30,    33,    54,    55,    64,    66,    83,    84,
      92,   140,   144,   173,   175,   187,   189,   212,   213,   216,
     231,   252,   257,   281,   313,   322,   340,   365,   366,   425,
     435,   459,   472,   530,   728,   753,  1037,  1041,  1042,  1044,
    1126,   785,   786,   785,   785,   535,   784,   785,   983,  1106,
    1137,  1021,    34,   199,   476,  1094,  1110,  1225,  1225,  1225,
    1225,  1225,   835,   832,   561,  1112,  1051,  1050,   294,   474,
     499,   764,   766,   765,  1106,   142,   450,  1207,   804,   982,
     983,   225,   562,   826,   827,   560,   610,  1112,   586,   982,
     982,    51,   328,   328,   389,  1181,   325,   326,   869,  1112,
      88,  1114,  1115,  1168,  1169,   395,    10,   366,   488,   695,
    1201,  1207,  1208,  1216,  1218,  1202,  1205,   683,  1112,   171,
    1024,  1028,  1029,  1112,  1031,     7,    20,    22,    25,    29,
      32,    34,    35,    36,    38,    50,    54,    55,    61,    64,
      72,    73,    79,    81,    82,    83,    87,    88,    90,    91,
      95,    96,    97,   102,   104,   107,   108,   115,   116,   133,
     136,   137,   149,   152,   154,   155,   158,   162,   167,   172,
     176,   177,   178,   179,   181,   182,   184,   185,   186,   190,
     192,   193,   199,   205,   209,   219,   221,   236,   240,   243,
     248,   250,   253,   258,   261,   266,   273,   283,   287,   295,
     299,   301,   302,   306,   307,   308,   309,   310,   311,   312,
     318,   325,   326,   327,   330,   331,   336,   353,   354,   356,
     357,   358,   359,   360,   370,   378,   394,   395,   406,   409,
     412,   414,   418,   456,   457,   462,   464,   465,   466,   469,
     478,   479,   480,   481,   490,   491,   492,   497,   500,   505,
     506,   514,   518,   519,   520,   521,   522,   527,   531,   541,
     543,   548,   552,   553,   558,   560,   563,   564,   566,   567,
     851,   854,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   870,   873,   874,   876,   883,   887,   899,  1093,
    1095,  1097,  1098,  1102,  1104,  1108,  1110,  1112,   149,  1112,
     596,   337,   596,   596,  1115,  1167,   982,   984,   517,   580,
     117,   201,   257,   281,   365,   371,   399,   435,   455,   470,
    1057,  1058,  1137,   365,  1156,   410,   410,   473,   514,   529,
     342,  1160,   470,  1162,    59,   435,  1159,    92,   529,  1161,
     337,   562,    18,   142,   941,   942,  1144,  1112,   776,   851,
      74,   171,   264,  1075,  1080,    46,   171,  1106,  1138,  1139,
     811,   566,   577,  1109,   257,   815,  1115,   816,   817,  1106,
     799,   222,   983,   994,   995,    46,   562,   982,  1156,   337,
     416,  1182,  1181,   503,  1187,  1188,   554,   844,   845,   846,
     842,  1121,  1122,  1123,   257,   147,   426,   246,   533,  1048,
     493,   560,    91,   175,   366,   472,   529,  1048,   690,  1114,
     247,   957,   959,    62,   455,   168,   455,   455,   455,   281,
     470,    62,   455,   201,   455,   455,   493,   957,  1048,   171,
     225,  1045,   257,   139,    65,   368,   470,   489,   455,   526,
     782,   388,   451,   787,   788,   781,    77,   776,   562,   339,
    1228,   468,  1229,   230,   402,  1227,   561,  1188,  1190,  1191,
    1192,   830,  1054,  1094,  1112,   108,   677,   678,   679,   688,
     689,   736,   603,   603,   763,  1115,   419,   529,   982,   485,
     562,   108,   821,  1112,   820,   213,   232,   751,   752,   828,
     611,   612,   851,   267,   268,   269,   270,   271,   272,   275,
     276,   277,   278,   279,   280,   282,   386,   387,   587,   588,
     589,   153,   372,   797,    53,   153,   156,   168,   293,   372,
     807,   808,   809,    51,   389,   149,   593,   560,   850,   566,
     207,   562,   846,   846,   846,   529,  1208,  1106,   494,   517,
     755,  1028,  1106,  1112,   562,  1026,   567,  1030,   560,   560,
     560,   560,   560,   874,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   850,   850,
     560,   850,   560,   560,   560,   500,   560,  1093,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   851,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   900,   901,
     902,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   857,   560,   850,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   850,
     560,  1093,   560,   560,   560,  1093,   560,   560,    34,   199,
     476,   560,   560,   560,   850,   850,   850,   560,   560,   560,
     560,   560,   560,   851,   904,   874,   874,   874,   420,   560,
     851,  1195,  1112,   888,  1112,   540,   852,   855,   142,   143,
     180,   194,   226,   238,   265,   321,   871,   225,   246,   385,
     438,   549,   550,   869,   551,   429,   430,   552,   553,   123,
     306,   554,   555,   556,   557,   874,    98,    99,   100,   101,
     102,   170,   202,   203,   204,   205,   295,   297,   298,   299,
     307,   370,   417,   418,   531,   542,   543,   938,   939,    63,
     346,   562,  1110,   560,   567,  1106,   562,    48,   401,   777,
     982,   566,   581,   582,    46,   535,   562,  1059,   470,   560,
    1170,  1170,  1170,  1170,   175,   366,   472,  1154,  1158,  1112,
     160,   323,  1112,  1145,  1146,   994,   281,   252,  1079,   823,
     281,   942,   562,   982,  1114,    27,   485,  1068,   562,   485,
     562,   485,   982,   995,   991,  1064,   171,   562,   175,   366,
    1154,  1112,    12,   122,  1194,   562,   837,   848,   851,  1100,
    1112,   562,   187,   252,   338,   425,  1124,  1125,  1128,  1129,
     225,  1046,  1109,   851,   554,   683,   596,   596,  1106,  1106,
    1038,   261,   331,   497,   960,   961,  1095,   596,  1048,  1115,
     168,  1043,  1045,   596,  1048,  1043,  1106,  1045,  1043,  1043,
    1048,  1048,   510,   789,   562,   789,   437,   420,   560,   564,
     909,   910,   911,   912,   921,   922,   930,  1094,   355,  1230,
     345,   953,   959,  1193,   679,    63,   728,    67,    79,   235,
     304,   328,   379,   450,   605,   607,     6,    13,    23,    24,
      52,    56,    67,    76,    81,    93,   111,   120,   121,   126,
     134,   140,   165,   211,   213,   220,   286,   300,   305,   351,
     353,   374,   375,   377,   391,   413,   494,   503,   685,   687,
     688,   689,   769,   770,   771,   953,   109,   224,  1106,   807,
    1109,   983,   560,   561,   562,   142,   142,   142,   142,   142,
     142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
     562,   512,   808,   677,   561,  1114,    44,  1169,   596,   596,
     175,  1106,   591,    43,   196,   415,   756,   756,   337,  1027,
    1025,   567,  1029,   171,   554,  1112,   942,   851,   851,   851,
      12,   122,   893,   943,   104,   162,   199,   261,   331,   497,
     963,   893,   893,   893,   851,   851,   897,   897,   851,   897,
     851,   851,   851,   851,   122,   893,   943,   851,   561,   851,
     851,   851,   851,   851,  1102,  1112,   851,   851,   851,   851,
     851,   560,  1195,   851,   938,   851,   851,   851,   561,   851,
     851,   851,   851,   897,   851,   851,    94,    97,   478,   481,
     940,   851,   122,   890,  1093,   851,   851,   851,   561,   851,
     851,   851,   851,   897,   851,   851,   851,   851,   901,     9,
     903,  1102,   122,   893,   851,   851,   122,   893,   851,   851,
     851,   851,   851,   897,   897,   897,   851,   851,   851,   851,
     851,   851,   897,   861,   851,   561,   851,   851,   851,   851,
     851,   561,   851,   851,   893,   893,   851,   851,   851,   122,
     893,   851,   851,   939,   939,   851,    42,   239,   486,   851,
     851,  1093,   561,   851,   561,   893,  1103,  1104,  1112,   893,
     851,   851,   851,   532,  1198,  1198,   561,   562,   561,   851,
     566,   889,  1114,   567,   854,   853,   856,   860,   155,   330,
     491,   507,   869,    12,    17,   860,   872,   560,   874,   861,
     246,   861,   862,   225,   246,   385,   549,   863,   864,   864,
     865,   873,   865,   873,   866,   866,   866,   866,   866,   874,
     553,  1114,   874,   851,   875,  1112,   981,  1115,   777,  1114,
     562,   380,  1058,   982,  1060,  1112,  1171,  1172,   554,  1106,
    1112,  1166,  1166,  1166,   142,   160,   180,   194,   237,   238,
     265,   323,   363,  1147,  1149,   533,   944,   988,   214,   824,
     825,  1106,   264,   380,   537,  1140,  1139,   807,   851,  1109,
    1115,  1115,   817,  1106,   153,   372,   515,   800,   801,   802,
     420,   426,   522,   523,   560,   673,   996,   999,  1109,   188,
    1166,  1166,  1166,  1189,   845,   171,   222,   838,   839,   952,
     953,   974,   847,   567,  1122,   108,   487,  1112,  1131,   314,
     353,   566,   728,  1130,  1109,   171,  1047,   561,  1112,   257,
     455,  1040,   334,   562,   435,  1048,  1112,  1048,  1043,  1106,
    1048,  1048,   589,   790,   788,   929,  1112,    85,   215,   230,
     243,   317,   406,   460,   920,   426,   562,  1106,   929,   562,
     168,  1231,    44,   957,   142,   427,  1005,  1006,  1006,  1109,
     450,   450,   450,   450,   450,   419,    66,    78,   174,   439,
     700,   703,   704,   749,   751,   775,   775,  1006,  1006,   775,
    1006,  1006,  1006,   485,   119,  1006,   231,   471,   166,   364,
     751,   775,   231,  1006,   471,   119,  1006,  1006,  1006,   775,
    1006,  1006,  1006,  1006,  1006,    18,   142,   485,   779,  1006,
    1006,  1006,   685,   562,   560,   567,   699,   705,  1105,  1112,
     767,   364,   936,  1112,   851,   963,  1109,  1109,   104,   162,
     261,   331,   497,   964,  1109,   963,  1109,  1109,  1109,  1109,
    1109,   963,  1109,  1109,   963,   588,   353,   476,  1220,     8,
      27,   665,   596,  1209,   246,   560,   667,   684,   686,   687,
    1106,   517,   944,  1112,   910,   567,  1030,   562,   561,   561,
     562,   893,   561,   894,   562,   561,   561,   561,    18,   561,
     517,   561,   561,   561,   561,   562,   562,   517,   562,   562,
     884,   561,   554,   561,   562,   562,   561,   561,   562,   561,
     567,   561,   562,   561,   562,   562,   562,   561,   562,   561,
     562,   171,   562,   562,   561,   562,   561,   562,   562,   561,
     562,   561,   561,   562,   561,   562,   562,   562,   886,   562,
     561,   562,   562,   561,   562,   562,   561,   562,   561,   562,
     561,   562,   562,   562,   561,   560,   562,   893,   561,   561,
     561,   893,   561,   561,   562,   562,   561,   561,   562,   561,
     562,   561,   561,   561,   561,   561,   561,   561,   562,   562,
     561,   562,   561,   225,   561,   561,   562,   562,   562,   561,
     562,   562,   561,   561,   561,   562,   171,   562,   562,   893,
     561,   561,   561,   562,   562,   562,   561,   171,   851,   171,
     851,   171,   851,   171,   561,   562,   562,   561,   561,   561,
     561,   561,   562,   561,   562,   561,   906,   907,   833,  1197,
    1195,   897,   565,   187,   252,   425,  1127,   427,  1112,   344,
     347,   867,    15,    16,   868,   155,   330,   491,   507,   560,
     851,  1195,   146,   948,   861,    16,   560,   874,   861,   861,
     938,   938,   851,   878,   879,   880,   560,   567,   582,   256,
     561,   562,   567,   567,   485,   485,   485,  1148,   945,   958,
     959,   996,   476,  1111,   562,   826,   537,   252,   485,   801,
     674,   997,   560,  1002,  1007,  1002,   561,   673,   998,  1099,
    1100,  1103,  1112,  1000,   342,   171,   171,   171,   831,   127,
     910,   975,   168,   256,   843,   974,   958,   839,    18,   849,
    1109,  1112,   554,  1112,   567,   227,   567,  1005,    32,   108,
     729,   730,  1005,  1114,   168,  1005,   566,  1114,    32,   108,
     731,   732,  1114,   964,  1039,   144,   530,   961,   961,   535,
     944,  1043,   562,   924,   929,   909,   230,   230,   348,   931,
     230,   243,   406,   931,   921,   909,  1017,  1018,  1103,   909,
     942,   926,   927,   963,   296,   954,   108,   733,   735,  1114,
     730,    93,    93,   109,   224,   759,  1105,   752,   752,    57,
     166,   364,   504,   702,   750,   701,   702,   759,  1105,   964,
     963,  1105,   963,  1109,  1109,   728,  1006,   963,   232,   232,
    1105,  1105,   690,  1006,   160,   237,   328,   693,   964,   964,
    1105,   108,   963,  1109,   963,   963,   373,   376,   692,   963,
    1106,    70,    71,   108,   130,   161,   383,   691,   690,   560,
     771,   697,   698,   699,   700,  1112,     8,   160,   778,   384,
     701,   741,   706,   567,   560,  1210,   561,   562,   476,   560,
     112,   219,   511,   666,  1219,  1210,  1106,   246,   668,   673,
     697,   210,   395,   670,  1081,   562,   686,   592,   910,   952,
     944,   942,   221,   851,   851,   561,   851,   851,    32,    55,
      94,    97,   105,   319,   433,   481,   509,   895,   729,   897,
     851,   729,   895,   851,   897,   561,   873,   873,  1110,  1112,
     851,   851,   897,  1110,   851,   851,   851,   897,   331,   851,
     851,   851,   851,   851,   851,   851,   897,   897,   331,   851,
     851,   897,   851,   851,   851,   851,   897,   851,   861,  1102,
     561,   561,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   897,   221,   851,   851,   851,   851,
     561,   851,   851,   851,   851,   171,   851,   171,   851,   171,
     851,   851,   331,   851,   851,   546,   905,   851,   908,  1199,
     561,   561,   567,   567,   567,  1114,   851,   854,   857,  1195,
     561,   562,   561,   874,   860,   851,  1195,   948,    16,   561,
     846,   881,   882,   896,   897,  1112,  1172,   554,   554,  1168,
    1168,  1168,   560,   851,   337,  1012,  1076,   825,   210,   829,
    1115,   840,  1003,  1004,  1103,  1008,   562,   560,   999,   561,
     561,   562,   567,  1187,   171,  1168,  1168,  1168,   944,   944,
     128,   349,   970,   971,   976,   511,   225,  1109,  1112,   567,
    1112,   244,  1112,    12,    32,   108,   337,   851,  1134,    63,
     734,   851,  1115,   336,   353,   476,  1133,  1127,  1005,   957,
     269,  1048,   589,  1190,   925,   243,   230,   921,   931,   931,
     230,   337,   337,   517,   562,  1016,  1005,   165,   210,   516,
     932,   840,   851,   955,  1101,   851,   232,   232,   752,   759,
     755,   126,   426,   772,   730,  1109,   759,   777,  1109,   773,
     982,   561,   562,  1112,  1106,    31,    32,    37,    39,    40,
      41,    55,    94,    97,   105,   124,   141,   161,   163,   182,
     183,   223,   250,   259,   260,   262,   290,   291,   292,   310,
     311,   312,   316,   319,   332,   333,   357,   359,   381,   424,
     426,   436,   477,   478,   481,   482,   483,   484,   524,   525,
     543,   707,   710,   711,   712,   713,   714,   715,   716,  1112,
    1112,  1211,    18,  1112,  1221,   337,   403,   560,   597,    18,
    1106,   561,   561,    18,   676,   686,   560,   944,   247,   962,
     851,   561,   561,   561,   560,   722,   722,   560,   717,   718,
     722,   223,   223,   561,   561,   561,   561,   561,   561,   562,
     885,   938,   938,   561,   561,   561,   561,   561,   561,   562,
     561,   561,   561,   561,   561,   562,   561,   561,   561,   561,
     561,   892,   953,   562,   562,   562,   561,   561,   561,   561,
     562,   561,   561,   561,   562,   225,   535,   877,   561,   561,
     561,   561,   561,   561,   561,   561,   561,   562,   561,   561,
     561,   851,   561,   168,   561,   561,   562,   562,   561,   562,
     562,   561,   851,   561,   851,   561,   851,   561,   561,   562,
     561,   561,   851,   138,   547,   532,  1196,   567,   760,   561,
     897,   561,   562,   561,   860,   851,   562,   561,   397,  1173,
    1173,  1173,   108,   851,  1010,  1011,   129,  1081,   241,   844,
     562,  1005,  1009,  1010,  1007,  1001,   999,  1099,  1112,  1168,
     958,   191,   949,  1111,  1111,   566,   972,   973,  1114,   428,
     554,   380,   393,   423,  1132,   735,  1005,   560,   560,  1131,
     851,   142,   561,   911,   348,   909,   921,   230,   230,   909,
     921,   914,   913,   915,  1018,   944,  1011,   751,   933,   933,
     933,   844,   562,    19,   113,   956,   759,   755,   560,   108,
     108,   705,   734,   707,   561,   698,   742,   560,   560,   722,
     717,   361,   708,   717,   717,    20,    32,    45,   502,   728,
     737,    55,   524,   711,   713,   737,   737,    55,   525,   525,
     528,   717,   709,   722,   722,   737,   560,   722,    23,    63,
      67,   108,   330,   337,   364,   424,   504,   724,   725,   726,
     740,   869,   528,   560,   737,    32,   560,   738,   560,   560,
     722,   560,   718,   723,   567,   561,   562,  1212,  1213,   217,
     225,   350,   617,   618,   619,   620,   846,   105,   223,   381,
     461,   696,   598,  1212,   561,   669,   684,   560,   673,   757,
     758,  1112,   961,   938,   331,   737,   331,   851,   561,   561,
     561,   851,   851,   422,   891,   331,   851,   851,   851,   851,
      40,   371,   561,   851,   938,   851,   851,   851,   851,   851,
     561,   561,   561,   331,   851,   851,  1187,  1112,   561,   897,
     847,   882,    58,   228,   324,   452,   463,   538,  1164,  1165,
     535,  1174,  1174,  1174,   561,   562,  1013,   222,   675,  1004,
    1011,   561,  1190,    44,   197,   946,   977,  1114,   562,   303,
      68,   498,   380,  1133,   476,   476,  1005,  1109,   942,   230,
     337,   917,   921,   921,   337,   919,   851,   851,   560,   952,
     934,   928,  1101,   560,   560,   757,    97,   478,   481,   552,
     553,  1096,  1097,   778,   724,   283,   337,   560,   743,   745,
     746,   747,   331,   331,   433,   509,   544,   719,   720,   721,
     560,   719,   719,   738,    20,   502,   728,   739,   738,   729,
     737,   528,   719,   560,   737,   331,   719,   733,  1109,   327,
     727,  1096,   511,   108,   232,   726,   232,   330,   331,   331,
     331,   331,   719,   331,   719,  1112,  1112,   535,  1215,   420,
     560,  1214,   561,   562,   615,  1106,   496,   613,   614,   616,
    1112,  1215,  1190,   670,   673,   671,   561,   562,   956,   560,
     561,   561,   561,   562,   561,   561,   562,   561,  1094,   561,
     562,   561,   562,   561,   561,   303,   151,   561,   561,   561,
     561,   561,   561,   561,   562,   547,  1199,   561,   849,   476,
     476,   476,    16,  1163,   188,   284,   285,   288,   289,  1175,
    1176,  1011,   232,  1077,   694,   839,   958,   950,  1101,   947,
     952,    65,  1082,   973,   561,   561,  1134,    16,   909,   916,
     517,   918,   517,   937,  1112,   962,   560,   694,   956,   757,
     757,   561,  1098,  1098,   774,   173,   352,   434,   112,   511,
     744,  1112,   747,   561,   561,   721,   761,  1094,   729,   738,
     761,   561,   850,   327,   523,   561,   561,   561,   561,    49,
      57,   252,   846,   846,  1222,   619,  1112,   168,  1109,   561,
     562,   615,   561,  1187,   758,   331,   331,   851,   893,   851,
     897,   851,  1164,   342,   963,   963,   963,   963,  1176,   511,
     472,   843,   535,   562,   951,   956,   851,   958,   135,   145,
     343,   475,  1083,  1084,   249,  1085,   270,   337,   851,   560,
     851,   560,   561,   562,   935,   936,   561,   561,   778,    48,
     328,   401,   426,   748,   748,   561,   562,   561,   562,   561,
     850,   737,   738,   737,   738,    57,   342,    57,   833,   832,
     604,   707,   846,   599,   616,   707,   672,   956,   561,   561,
     561,   562,   561,   561,   561,  1019,  1020,  1103,  1106,    86,
     408,  1101,   366,   965,    44,    44,   135,    44,  1084,   453,
     475,  1086,  1087,   142,   923,   937,   937,  1112,   561,   741,
       5,   108,   330,   745,  1112,   737,  1094,   737,   342,   342,
     561,   118,   605,   606,   869,  1223,   131,   403,  1190,   851,
     562,  1005,  1078,   956,  1112,  1094,  1094,    44,  1094,    44,
      44,  1087,   964,   851,   561,   561,  1190,   118,    60,   157,
     209,   229,   242,   340,   404,   548,   636,   637,   643,   657,
    1108,  1113,  1117,   414,   600,   561,  1020,  1011,  1082,   966,
    1094,  1094,  1094,    16,   565,  1112,   171,   323,   645,   639,
    1113,  1113,  1112,   638,   532,   641,   573,    28,   263,   394,
     534,   660,   569,  1217,   707,  1085,   560,   274,   171,  1112,
     647,   648,   851,   640,   851,   661,   622,   636,   622,   662,
     658,   636,   601,   210,  1088,   846,   967,   968,   969,   142,
     222,   138,   851,   652,   653,   532,   623,   138,   636,   568,
     510,   851,   660,   604,   331,   560,  1089,   851,   561,   562,
     963,   644,   209,   547,   138,   851,   642,   106,   621,   624,
     263,   568,   664,   125,   659,  1113,   602,   249,   561,   566,
    1090,  1091,  1103,   426,  1092,   969,   646,  1112,   649,   548,
     547,   652,    80,   150,   629,   634,  1112,   138,   636,   568,
     851,   663,   636,  1114,   561,   562,  1019,   562,   622,   654,
     138,   195,   562,   625,    75,    89,   568,   138,   622,  1091,
    1112,   650,   622,   548,   168,  1112,   707,   168,   168,   394,
     138,   132,   546,   651,   655,   626,   108,   635,   442,   631,
     963,   627,   628,   534,   647,   622,   532,   546,   656,   441,
     443,   630,   631,   633,   869,  1112,   851,   523,   632,   573,
     652,   622,   562,   636,   169,  1110,   633
};

#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
# define YYSIZE_T __SIZE_TYPE__
#endif
#if ! defined (YYSIZE_T) && defined (size_t)
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T)
# if defined (__STDC__) || defined (__cplusplus)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# endif
#endif
#if ! defined (YYSIZE_T)
# define YYSIZE_T unsigned int
#endif

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { 								\
      yyerror ("syntax error: cannot back up");\
      YYERROR;							\
    }								\
while (0)


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (N)								\
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (0)
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
              (Loc).first_line, (Loc).first_column,	\
              (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (0)

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)		\
do {								\
  if (yydebug)							\
    {								\
      YYFPRINTF (stderr, "%s ", Title);				\
      yysymprint (stderr, 					\
                  Type, Value);	\
      YYFPRINTF (stderr, "\n");					\
    }								\
} while (0)

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_stack_print (short int *bottom, short int *top)
#else
static void
yy_stack_print (bottom, top)
    short int *bottom;
    short int *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (/* Nothing. */; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_reduce_print (int yyrule)
#else
static void
yy_reduce_print (yyrule)
    int yyrule;
#endif
{
  int yyi;
  unsigned int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %u), ",
             yyrule - 1, yylno);
  /* Print the symbols being reduced, and their result.  */
  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
    YYFPRINTF (stderr, "%s ", yytname [yyrhs[yyi]]);
  YYFPRINTF (stderr, "-> %s\n", yytname [yyr1[yyrule]]);
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (Rule);		\
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined (__GLIBC__) && defined (_STRING_H)
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
#   if defined (__STDC__) || defined (__cplusplus)
yystrlen (const char *yystr)
#   else
yystrlen (yystr)
     const char *yystr;
#   endif
{
  register const char *yys = yystr;

  while (*yys++ != '\0')
    continue;

  return yys - yystr - 1;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
#   if defined (__STDC__) || defined (__cplusplus)
yystpcpy (char *yydest, const char *yysrc)
#   else
yystpcpy (yydest, yysrc)
     char *yydest;
     const char *yysrc;
#   endif
{
  register char *yyd = yydest;
  register const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

#endif /* !YYERROR_VERBOSE */



#if YYDEBUG
/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
#else
static void
yysymprint (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);


# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  switch (yytype)
    {
      default:
        break;
    }
  YYFPRINTF (yyoutput, ")");
}

#endif /* ! YYDEBUG */
/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM);
# else
int yyparse ();
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM)
# else
int yyparse (YYPARSE_PARAM)
  void *YYPARSE_PARAM;
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  register int yystate;
  register int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  short int yyssa[YYINITDEPTH];
  short int *yyss = yyssa;
  register short int *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  register YYSTYPE *yyvsp;



#define YYPOPSTACK   (yyvsp--, yyssp--)

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* When reducing, the number of symbols on the RHS of the reduced
     rule.  */
  int yylen;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;


  yyvsp[0] = yylval;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack. Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	short int *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow ("parser stack overflow",
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyoverflowlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyoverflowlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	short int *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyoverflowlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a look-ahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to look-ahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;


  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 881 "sql_yacc.yy"
    {
	   THD *thd= YYTHD;
	   if (!thd->bootstrap &&
	      (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
	   {
	     my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
	     YYABORT;
	   }
	   else
	   {
	     thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
	   }
	}
    break;

  case 3:
#line 894 "sql_yacc.yy"
    {}
    break;

  case 53:
#line 954 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 56:
#line 974 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_PREPARE;
          lex->prepared_stmt_name= (yyvsp[-2].lex_str);
        }
    break;

  case 57:
#line 988 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= FALSE;
        }
    break;

  case 58:
#line 995 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= TRUE;
        }
    break;

  case 59:
#line 1004 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_EXECUTE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 60:
#line 1016 "sql_yacc.yy"
    {}
    break;

  case 65:
#line 1030 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
          if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              YYABORT;
        }
    break;

  case 66:
#line 1042 "sql_yacc.yy"
    {
         if (Lex->sphead)
         {
           my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
           YYABORT;
         }
       }
    break;

  case 67:
#line 1050 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_HELP;
	  lex->help_arg= (yyvsp[0].lex_str).str;
       }
    break;

  case 68:
#line 1060 "sql_yacc.yy"
    {
	  LEX *lex = Lex;
	  lex->sql_command = SQLCOM_CHANGE_MASTER;
	  bzero((char*) &lex->mi, sizeof(lex->mi));
        }
    break;

  case 69:
#line 1066 "sql_yacc.yy"
    {}
    break;

  case 72:
#line 1075 "sql_yacc.yy"
    {
	 Lex->mi.host = (yyvsp[0].lex_str).str;
       }
    break;

  case 73:
#line 1080 "sql_yacc.yy"
    {
	 Lex->mi.user = (yyvsp[0].lex_str).str;
       }
    break;

  case 74:
#line 1085 "sql_yacc.yy"
    {
	 Lex->mi.password = (yyvsp[0].lex_str).str;
       }
    break;

  case 75:
#line 1090 "sql_yacc.yy"
    {
	 Lex->mi.port = (yyvsp[0].ulong_num);
       }
    break;

  case 76:
#line 1095 "sql_yacc.yy"
    {
	 Lex->mi.connect_retry = (yyvsp[0].ulong_num);
       }
    break;

  case 77:
#line 1099 "sql_yacc.yy"
    {
           Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
               LEX_MASTER_INFO::SSL_ENABLE : LEX_MASTER_INFO::SSL_DISABLE;
         }
    break;

  case 78:
#line 1104 "sql_yacc.yy"
    {
           Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
         }
    break;

  case 79:
#line 1108 "sql_yacc.yy"
    {
           Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
         }
    break;

  case 80:
#line 1112 "sql_yacc.yy"
    {
           Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
         }
    break;

  case 81:
#line 1116 "sql_yacc.yy"
    {
           Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
         }
    break;

  case 82:
#line 1120 "sql_yacc.yy"
    {
           Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
	 }
    break;

  case 84:
#line 1129 "sql_yacc.yy"
    {
	 Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
       }
    break;

  case 85:
#line 1133 "sql_yacc.yy"
    {
           Lex->mi.pos = (yyvsp[0].ulonglong_number);
           /* 
              If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
              instead of causing subsequent errors. 
              We need to do it in this file, because only there we know that 
              MASTER_LOG_POS has been explicitely specified. On the contrary
              in change_master() (sql_repl.cc) we cannot distinguish between 0
              (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
              whereas we want to distinguish (specified 0 means "read the binlog
              from 0" (4 in fact), unspecified means "don't change the position
              (keep the preceding value)").
           */
           Lex->mi.pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
         }
    break;

  case 86:
#line 1149 "sql_yacc.yy"
    {
           Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
         }
    break;

  case 87:
#line 1153 "sql_yacc.yy"
    {
           Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
           /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
           Lex->mi.relay_log_pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
         }
    break;

  case 88:
#line 1164 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_CREATE_TABLE;
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING,
						 (using_update_log ?
						  TL_READ_NO_INSERT:
						  TL_READ)))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
	  lex->change=NullS;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.options=(yyvsp[-3].num) | (yyvsp[-1].num);
	  lex->create_info.db_type= (enum db_type) lex->thd->variables.table_type;
	  lex->create_info.default_table_charset= NULL;
	  lex->name=0;
	}
    break;

  case 89:
#line 1185 "sql_yacc.yy"
    { Lex->current_select= &Lex->select_lex; }
    break;

  case 90:
#line 1187 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_CREATE_INDEX;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	    lex->create_list.empty();
	    lex->key_list.empty();
	    lex->col_list.empty();
	    lex->change=NullS;
	  }
    break;

  case 91:
#line 1199 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->key_list.push_back(new Key((yyvsp[-9].key_type),(yyvsp[-7].lex_str).str, (yyvsp[-6].key_alg), 0, lex->col_list));
	    lex->col_list.empty();
	  }
    break;

  case 92:
#line 1206 "sql_yacc.yy"
    {
             Lex->create_info.default_table_charset= NULL;
             Lex->create_info.used_fields= 0;
          }
    break;

  case 93:
#line 1211 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_CREATE_DB;
	    lex->name=(yyvsp[-2].lex_str).str;
            lex->create_info.options=(yyvsp[-3].num);
	  }
    break;

  case 94:
#line 1218 "sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
	  }
    break;

  case 95:
#line 1224 "sql_yacc.yy"
    {}
    break;

  case 96:
#line 1226 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 97:
#line 1233 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->users_list.empty();
          lex->columns.empty();
          lex->grant= lex->grant_tot_col= 0;
	  lex->all_privileges= 0;
          lex->select_lex.db= 0;
          lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
          bzero((char *)&(lex->mqh),sizeof(lex->mqh));
        }
    break;

  case 98:
#line 1248 "sql_yacc.yy"
    {
            if (!(yyvsp[-2].lex_str).str || check_db_name((yyvsp[-2].lex_str).str))
            {
	      my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spname)= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str));
	    (yyval.spname)->init_qname(YYTHD);
	  }
    break;

  case 99:
#line 1263 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX_STRING db;
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
            if (thd->copy_db_to(&db.str, &db.length))
              YYABORT;
	    (yyval.spname)= new sp_name(db, (yyvsp[0].lex_str));
            if ((yyval.spname))
	      (yyval.spname)->init_qname(YYTHD);
	  }
    break;

  case 100:
#line 1281 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            if (lex->definer != NULL)
            {
              /*
                 DEFINER is a concept meaningful when interpreting SQL code.
                 UDF functions are compiled.
                 Using DEFINER with UDF has therefore no semantic,
                 and is considered a parsing error.
              */
	      my_error(ER_WRONG_USAGE, MYF(0), "SONAME", "DEFINER");
              YYABORT;
            }
	    lex->sql_command = SQLCOM_CREATE_FUNCTION;
	    lex->udf.name = lex->spname->m_name;
	    lex->udf.returns=(Item_result) (yyvsp[-2].num);
	    lex->udf.dl=(yyvsp[0].lex_str).str;
	  }
    break;

  case 101:
#line 1300 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp;

            /* 
              First check if AGGREGATE was used, in that case it's a
              syntax error.
            */
            if (lex->udf.type == UDFTYPE_AGGREGATE)
            {
              my_error(ER_SP_NO_AGGREGATE, MYF(0));
              YYABORT;
            }

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    /* Order is important here: new - reset - init */
	    sp= new sp_head();
	    sp->reset_thd_mem_root(YYTHD);
	    sp->init(lex);
            sp->init_sp_name(YYTHD, lex->spname);

	    sp->m_type= TYPE_ENUM_FUNCTION;
	    lex->sphead= sp;
	    /*
	     * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	     * stored procedure, otherwise yylex will chop it into pieces
	     * at each ';'.
	     */
	    sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	    YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	    lex->sphead->m_param_begin= lex->tok_start+1;
	  }
    break;

  case 102:
#line 1337 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_end= lex->tok_start;
	  }
    break;

  case 103:
#line 1343 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->charset= NULL;
	    lex->length= lex->dec= NULL;
	    lex->interval_list.empty();
	    lex->type= 0;
	  }
    break;

  case 104:
#line 1351 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[0].num),
                                          &sp->m_return_field_def))
              YYABORT;

	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  }
    break;

  case 105:
#line 1363 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_chistics= &lex->sp_chistics;
	    lex->sphead->m_body_begin= lex->tok_start;
	  }
    break;

  case 106:
#line 1370 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              YYABORT;

	    lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
	    sp->init_strings(YYTHD, lex);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              YYABORT;
            }
	    /* Restore flag if it was cleared above */
	    if (sp->m_old_cmq)
	      YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	    sp->restore_thd_mem_root(YYTHD);
	  }
    break;

  case 107:
#line 1392 "sql_yacc.yy"
    {}
    break;

  case 108:
#line 1393 "sql_yacc.yy"
    {}
    break;

  case 109:
#line 1397 "sql_yacc.yy"
    {}
    break;

  case 110:
#line 1398 "sql_yacc.yy"
    {}
    break;

  case 111:
#line 1404 "sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
    break;

  case 112:
#line 1406 "sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 113:
#line 1408 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 114:
#line 1410 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 115:
#line 1412 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 116:
#line 1414 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 117:
#line 1416 "sql_yacc.yy"
    { }
    break;

  case 118:
#line 1421 "sql_yacc.yy"
    { }
    break;

  case 119:
#line 1422 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 120:
#line 1423 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 121:
#line 1428 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_SUID;
	  }
    break;

  case 122:
#line 1432 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_NOT_SUID;
	  }
    break;

  case 123:
#line 1439 "sql_yacc.yy"
    {
	    LEX *lex = Lex;

	    lex->sql_command= SQLCOM_CALL;
	    lex->spname= (yyvsp[0].spname);
	    lex->value_list.empty();
	    sp_add_used_routine(lex, YYTHD, (yyvsp[0].spname), TYPE_ENUM_PROCEDURE);
	  }
    break;

  case 124:
#line 1447 "sql_yacc.yy"
    {}
    break;

  case 129:
#line 1463 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 130:
#line 1467 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 135:
#line 1485 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->length= 0;
	    lex->dec= 0;
	    lex->type= 0;
	  
	    lex->default_value= 0;
	    lex->on_update_value= 0;
	  
	    lex->comment= null_lex_str;
	    lex->charset= NULL;
	  
	    lex->interval_list.empty();
	    lex->uint_geom_type= 0;
	  }
    break;

  case 136:
#line 1505 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[-2].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[-2].lex_str),
                                                     (enum enum_field_types)(yyvsp[0].num),
                                                     sp_param_in);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &spvar->field_def))
            {
              YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 141:
#line 1542 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[-1].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[-1].lex_str),
                                                     (enum enum_field_types)(yyvsp[0].num),
                                                     (sp_param_mode_t)(yyvsp[-3].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &spvar->field_def))
            {
              YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 142:
#line 1567 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 143:
#line 1568 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 144:
#line 1569 "sql_yacc.yy"
    { (yyval.num)= sp_param_out; }
    break;

  case 145:
#line 1570 "sql_yacc.yy"
    { (yyval.num)= sp_param_inout; }
    break;

  case 146:
#line 1574 "sql_yacc.yy"
    {}
    break;

  case 148:
#line 1579 "sql_yacc.yy"
    {}
    break;

  case 150:
#line 1585 "sql_yacc.yy"
    {
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	  }
    break;

  case 151:
#line 1589 "sql_yacc.yy"
    {
	    /* We check for declarations out of (standard) order this way
	       because letting the grammar rules reflect it caused tricky
	       shift/reduce conflicts with the wrong result. (And we get
	       better error handling this way.) */
	    if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
	    { /* Variable or condition following cursor or handler */
	      my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
	      YYABORT;
	    }
	    if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
	    { /* Cursor following handler */
	      my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
	      YYABORT;
	    }
	    (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
	    (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
	    (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
	    (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
	  }
    break;

  case 152:
#line 1615 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[0].num));
          }
    break;

  case 153:
#line 1623 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[-1].num);
            Item *dflt_value_item= (yyvsp[0].item);
            
            if (!dflt_value_item)
            {
              dflt_value_item= new Item_null();
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable_t *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                YYABORT;
            
              spvar->type= var_type;
              spvar->dflt= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &spvar->field_def))
              {
                YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              lex->sphead->add_instr(
                new sp_instr_set(lex->sphead->instructions(), pctx, var_idx,
                                 dflt_value_item, var_type, lex,
                                 (i == num_vars - 1)));
            }

            pctx->declare_var_boundary(0);
            lex->sphead->restore_lex(YYTHD);

            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 154:
#line 1671 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_cond(&(yyvsp[-3].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
	      YYABORT;
	    }
	    YYTHD->lex->spcont->push_cond(&(yyvsp[-3].lex_str), (yyvsp[0].spcondtype));
	    (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	    (yyval.spblock).conds= 1;
	  }
    break;

  case 155:
#line 1685 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, (yyvsp[-2].num),
	                              ctx->current_var_count());

	    sp->add_instr(i);
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	    sp->m_flags|= sp_head::IN_HANDLER;
	  }
    break;

  case 156:
#line 1698 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *hlab= lex->spcont->pop_label(); /* After this hdlr */
	    sp_instr_hreturn *i;

	    if ((yyvsp[-5].num) == SP_HANDLER_CONTINUE)
	    {
	      i= new sp_instr_hreturn(sp->instructions(), ctx,
	                              ctx->current_var_count());
	      sp->add_instr(i);
	    }
	    else
	    {  /* EXIT or UNDO handler, just jump to the end of the block */
	      i= new sp_instr_hreturn(sp->instructions(), ctx, 0);

	      sp->add_instr(i);
	      sp->push_backpatch(i, lex->spcont->last_label()); /* Block end */
	    }
	    lex->sphead->backpatch(hlab);
	    sp->m_flags&= ~sp_head::IN_HANDLER;
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
	    (yyval.spblock).hndlrs= (yyvsp[-1].num);
	    ctx->add_handlers((yyvsp[-1].num));
	  }
    break;

  case 157:
#line 1725 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint offp;
	    sp_instr_cpush *i;

	    if (ctx->find_cursor(&(yyvsp[-3].lex_str), &offp, TRUE))
	    {
	      my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-3].lex_str).str);
	      delete (yyvsp[0].lex);
	      YYABORT;
	    }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[0].lex),
                                  ctx->current_cursor_count());
	    sp->add_instr(i);
	    ctx->push_cursor(&(yyvsp[-3].lex_str));
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
	    (yyval.spblock).curs= 1;
	  }
    break;

  case 158:
#line 1748 "sql_yacc.yy"
    {
	    Lex->sphead->reset_lex(YYTHD);

	    /* We use statement here just be able to get a better
	       error message. Using 'select' works too, but will then
	       result in a generic "syntax error" if a non-select
	       statement is given. */
	  }
    break;

  case 159:
#line 1757 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sql_command != SQLCOM_SELECT)
	    {
	      my_message(ER_SP_BAD_CURSOR_QUERY, ER(ER_SP_BAD_CURSOR_QUERY),
                         MYF(0));
	      YYABORT;
	    }
	    if (lex->result)
	    {
	      my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
	      YYABORT;
	    }
	    lex->sp_lex_in_use= TRUE;
	    (yyval.lex)= lex;
	    lex->sphead->restore_lex(YYTHD);
	  }
    break;

  case 160:
#line 1779 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_EXIT; }
    break;

  case 161:
#line 1780 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_CONTINUE; }
    break;

  case 162:
#line 1786 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= 1;
	    }
	  }
    break;

  case 163:
#line 1807 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
	        (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= (yyvsp[-2].num) + 1;
	    }
	  }
    break;

  case 164:
#line 1831 "sql_yacc.yy"
    {			/* mysql errno */
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::number;
	    (yyval.spcondtype)->mysqlerr= (yyvsp[0].ulong_num);
	  }
    break;

  case 165:
#line 1837 "sql_yacc.yy"
    {		/* SQLSTATE */
	    if (!sp_cond_check(&(yyvsp[0].lex_str)))
	    {
	      my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::state;
	    memcpy((yyval.spcondtype)->sqlstate, (yyvsp[0].lex_str).str, 5);
	    (yyval.spcondtype)->sqlstate[5]= '\0';
	  }
    break;

  case 166:
#line 1851 "sql_yacc.yy"
    {}
    break;

  case 167:
#line 1852 "sql_yacc.yy"
    {}
    break;

  case 168:
#line 1857 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (yyvsp[0].spcondtype);
	  }
    break;

  case 169:
#line 1861 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= Lex->spcont->find_cond(&(yyvsp[0].lex_str));
	    if ((yyval.spcondtype) == NULL)
	    {
	      my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	  }
    break;

  case 170:
#line 1870 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::warning;
	  }
    break;

  case 171:
#line 1875 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::notfound;
	  }
    break;

  case 172:
#line 1880 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::exception;
	  }
    break;

  case 173:
#line 1888 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_variable(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= 1;
	  }
    break;

  case 174:
#line 1903 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_variable(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= (yyvsp[-2].num) + 1;
	  }
    break;

  case 175:
#line 1920 "sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 176:
#line 1921 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 177:
#line 1925 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->reset_lex(YYTHD);
	    lex->sphead->m_tmp_query= lex->tok_start;
	  }
    break;

  case 178:
#line 1932 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
	    if (lex->sql_command == SQLCOM_CHANGE_DB)
	    { /* "USE db" doesn't work in a procedure */
	      my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
	      YYABORT;
	    }
	    /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
	    */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
	    {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lex->ptr - sp->m_tmp_query;
              else
                i->m_query.length= lex->tok_end - sp->m_tmp_query;
              i->m_query.str= strmake_root(YYTHD->mem_root,
                                           (char *)sp->m_tmp_query,
                                           i->m_query.length);
              sp->add_instr(i);
            }
	    sp->restore_lex(YYTHD);
          }
    break;

  case 179:
#line 1971 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 180:
#line 1973 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

	    if (sp->m_type != TYPE_ENUM_FUNCTION)
	    {
	      my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_freturn *i;

	      i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[0].item),
                                      sp->m_return_field_def.sql_type, lex);
	      sp->add_instr(i);
	      sp->m_flags|= sp_head::HAS_RETURN;
	    }
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 181:
#line 1994 "sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 182:
#line 1996 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 183:
#line 1998 "sql_yacc.yy"
    {
	    Lex->sphead->m_flags&= ~sp_head::IN_SIMPLE_CASE;
            Lex->sphead->new_cont_backpatch(NULL);
	  }
    break;

  case 184:
#line 2002 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 185:
#line 2004 "sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
            Lex->sphead->new_cont_backpatch(NULL);
          }
    break;

  case 186:
#line 2009 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *parsing_ctx= lex->spcont;
	    int case_expr_id= parsing_ctx->register_case_expr();
            sp_instr_set_case_expr *i;
	    
	    if (parsing_ctx->push_case_expr_id(case_expr_id))
              YYABORT;

            i= new sp_instr_set_case_expr(sp->instructions(),
                                          parsing_ctx,
                                          case_expr_id,
                                          (yyvsp[-1].item),
                                          lex);
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
	    sp->m_flags|= sp_head::IN_SIMPLE_CASE;
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 187:
#line 2030 "sql_yacc.yy"
    {
	    Lex->spcont->pop_case_expr_id();
            Lex->sphead->do_cont_backpatch();
	  }
    break;

  case 188:
#line 2035 "sql_yacc.yy"
    {}
    break;

  case 189:
#line 2036 "sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
	    LEX *lex= Lex;

	    lex->spcont->push_label((char *)"", lex->sphead->instructions());
	  }
    break;

  case 190:
#line 2042 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 191:
#line 2048 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp = lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
	    }
	  }
    break;

  case 192:
#line 2077 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab || lab->type != SP_LAB_ITER)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              sp->add_instr(i);
	    }
	  }
    break;

  case 193:
#line 2105 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_copen *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 194:
#line 2120 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cfetch *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[-1].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 195:
#line 2135 "sql_yacc.yy"
    { }
    break;

  case 196:
#line 2137 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cclose *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
	    sp->add_instr(i);
	  }
    break;

  case 200:
#line 2161 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_variable_t *spv;

	    if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 201:
#line 2182 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_variable_t *spv;

	    if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 202:
#line 2204 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 203:
#line 2206 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[-1].item), lex);

	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 204:
#line 2220 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 205:
#line 2231 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 209:
#line 2245 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 210:
#line 2247 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i;

	    if (! (sp->m_flags & sp_head::IN_SIMPLE_CASE))
	      i= new sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
	    else
	    { /* Simple case: <caseval> = <whenval> */

	      Item_case_expr *var;
              Item *expr;

              var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
              if (var)
                var->m_sp= sp;
#endif

	      expr= new Item_func_eq(var, (yyvsp[-1].item));

	      i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
	    }
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 211:
#line 2279 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 212:
#line 2290 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 213:
#line 2299 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_error *i= new sp_instr_error(ip, Lex->spcont,
						  ER_SP_CASE_NOT_FOUND);

	    sp->add_instr(i);
	  }
    break;

  case 214:
#line 2307 "sql_yacc.yy"
    {}
    break;

  case 215:
#line 2308 "sql_yacc.yy"
    {}
    break;

  case 216:
#line 2313 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[-1].lex_str).str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      lab= lex->spcont->push_label((yyvsp[-1].lex_str).str,
	                                   lex->sphead->instructions());
	      lab->type= SP_LAB_ITER;
	    }
	  }
    break;

  case 217:
#line 2331 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if ((yyvsp[0].lex_str).str)
	    {
	      sp_label_t *lab= lex->spcont->find_label((yyvsp[0].lex_str).str);

	      if (!lab ||
	          my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name) != 0)
	      {
	        my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	        YYABORT;
	      }
	    }
	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 218:
#line 2350 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 219:
#line 2351 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 220:
#line 2356 "sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
	       together. No [[NOT] ATOMIC] yet, and we need to figure out how
	       make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
	    LEX *lex= Lex;
	    sp_label_t *lab= lex->spcont->last_label();

	    lab->type= SP_LAB_BEGIN;
	    lex->spcont= lex->spcont->push_context();
	  }
    break;

  case 221:
#line 2368 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

  	    sp->backpatch(ctx->last_label());	/* We always have a label */
	    if ((yyvsp[-2].spblock).hndlrs)
	      sp->add_instr(new sp_instr_hpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).hndlrs));
	    if ((yyvsp[-2].spblock).curs)
	      sp->add_instr(new sp_instr_cpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).curs));
	    lex->spcont= ctx->pop_context();
	  }
    break;

  case 222:
#line 2384 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
	  }
    break;

  case 223:
#line 2393 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 224:
#line 2395 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
							       (yyvsp[-1].item), lex);

	    /* Jumping forward */
	    sp->push_backpatch(i, lex->spcont->last_label());
            sp->new_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 225:
#line 2409 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
            lex->sphead->do_cont_backpatch();
	  }
    break;

  case 226:
#line 2419 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 227:
#line 2421 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[-2].item), lab->ip,
                                                               lex);
            lex->sphead->add_instr(i);
            lex->sphead->restore_lex(YYTHD);
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
	  }
    break;

  case 228:
#line 2437 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 229:
#line 2439 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 230:
#line 2444 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 231:
#line 2446 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 232:
#line 2448 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 233:
#line 2452 "sql_yacc.yy"
    {}
    break;

  case 234:
#line 2453 "sql_yacc.yy"
    {}
    break;

  case 235:
#line 2455 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            THD *thd= lex->thd;
            if (!(lex->name= (char *)(yyvsp[0].table)))
              YYABORT;
            if ((yyvsp[0].table)->db.str == NULL &&
                thd->copy_db_to(&((yyvsp[0].table)->db.str), &((yyvsp[0].table)->db.length)))
            {
              YYABORT;
            }
          }
    break;

  case 236:
#line 2467 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            THD *thd= lex->thd;
            if (!(lex->name= (char *)(yyvsp[-1].table)))
              YYABORT;
            if ((yyvsp[-1].table)->db.str == NULL &&
                thd->copy_db_to(&((yyvsp[-1].table)->db.str), &((yyvsp[-1].table)->db.length)))
            {
              YYABORT;
            }
          }
    break;

  case 237:
#line 2481 "sql_yacc.yy"
    {}
    break;

  case 238:
#line 2482 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 239:
#line 2482 "sql_yacc.yy"
    {}
    break;

  case 240:
#line 2486 "sql_yacc.yy"
    {}
    break;

  case 241:
#line 2488 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 242:
#line 2488 "sql_yacc.yy"
    {}
    break;

  case 243:
#line 2490 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 244:
#line 2490 "sql_yacc.yy"
    {}
    break;

  case 245:
#line 2495 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->lock_option= using_update_log ? TL_READ_NO_INSERT : TL_READ;
	    if (lex->sql_command == SQLCOM_INSERT)
	      lex->sql_command= SQLCOM_INSERT_SELECT;
	    else if (lex->sql_command == SQLCOM_REPLACE)
	      lex->sql_command= SQLCOM_REPLACE_SELECT;
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    lex->current_select->table_list.save_and_clear(&lex->save_list);
	    mysql_init_select(lex);
	    lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 246:
#line 2511 "sql_yacc.yy"
    {
	    Select->parsing_place= NO_MATTER;
	  }
    break;

  case 247:
#line 2515 "sql_yacc.yy"
    {
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    Lex->current_select->table_list.push_front(&Lex->save_list);
	  }
    break;

  case 248:
#line 2525 "sql_yacc.yy"
    {}
    break;

  case 249:
#line 2526 "sql_yacc.yy"
    {}
    break;

  case 250:
#line 2529 "sql_yacc.yy"
    {}
    break;

  case 251:
#line 2530 "sql_yacc.yy"
    {}
    break;

  case 252:
#line 2533 "sql_yacc.yy"
    {}
    break;

  case 253:
#line 2534 "sql_yacc.yy"
    {}
    break;

  case 254:
#line 2537 "sql_yacc.yy"
    {}
    break;

  case 255:
#line 2538 "sql_yacc.yy"
    {}
    break;

  case 256:
#line 2541 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 257:
#line 2542 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[0].num);}
    break;

  case 258:
#line 2545 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[0].num); }
    break;

  case 259:
#line 2546 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
    break;

  case 260:
#line 2549 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 261:
#line 2552 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 262:
#line 2553 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 270:
#line 2569 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 271:
#line 2570 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); WARN_DEPRECATED("TYPE=storage_engine","ENGINE=storage_engine");   Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 272:
#line 2571 "sql_yacc.yy"
    { Lex->create_info.max_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;}
    break;

  case 273:
#line 2572 "sql_yacc.yy"
    { Lex->create_info.min_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;}
    break;

  case 274:
#line 2573 "sql_yacc.yy"
    { Lex->create_info.avg_row_length=(yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;}
    break;

  case 275:
#line 2574 "sql_yacc.yy"
    { Lex->create_info.password=(yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD; }
    break;

  case 276:
#line 2575 "sql_yacc.yy"
    { Lex->create_info.comment=(yyvsp[0].lex_str); Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT; }
    break;

  case 277:
#line 2576 "sql_yacc.yy"
    { Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;}
    break;

  case 278:
#line 2578 "sql_yacc.yy"
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 279:
#line 2593 "sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 280:
#line 2598 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM; Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM; }
    break;

  case 281:
#line 2599 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;  Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE; }
    break;

  case 282:
#line 2600 "sql_yacc.yy"
    { Lex->create_info.row_type= (yyvsp[0].row_type);  Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT; }
    break;

  case 283:
#line 2602 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_TYPE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 284:
#line 2607 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKS", "PARTITION");
	    YYABORT;
	  }
    break;

  case 285:
#line 2612 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKSIZE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 286:
#line 2617 "sql_yacc.yy"
    {
	    /* Move the union list to the merge_list */
	    LEX *lex=Lex;
	    TABLE_LIST *table_list= lex->select_lex.get_table_list();
	    lex->create_info.merge_list= lex->select_lex.table_list;
	    lex->create_info.merge_list.elements--;
	    lex->create_info.merge_list.first=
	      (byte*) (table_list->next_local);
	    lex->select_lex.table_list.elements=1;
	    lex->select_lex.table_list.next=
	      (byte**) &(table_list->next_local);
	    table_list->next_local= 0;
	    lex->create_info.used_fields|= HA_CREATE_USED_UNION;
	  }
    break;

  case 289:
#line 2633 "sql_yacc.yy"
    { Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;}
    break;

  case 290:
#line 2634 "sql_yacc.yy"
    { Lex->create_info.data_file_name= (yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR; }
    break;

  case 291:
#line 2635 "sql_yacc.yy"
    { Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;  Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR; }
    break;

  case 292:
#line 2636 "sql_yacc.yy"
    { Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str; Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;  Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION; }
    break;

  case 293:
#line 2641 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
          {
            my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                     "CHARACTER SET ", cinfo->default_table_charset->csname,
                     "CHARACTER SET ", (yyvsp[0].charset)->csname);
            YYABORT;
          }
	  Lex->create_info.default_table_charset= (yyvsp[0].charset);
          Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 294:
#line 2658 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, cinfo->default_table_charset->csname);
              YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 295:
#line 2674 "sql_yacc.yy"
    {
	  (yyval.db_type) = ha_resolve_by_name((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length);
	  if ((yyval.db_type) == DB_TYPE_UNKNOWN) {
	    my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 296:
#line 2683 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 297:
#line 2684 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 298:
#line 2685 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 299:
#line 2686 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 300:
#line 2687 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 301:
#line 2688 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 302:
#line 2691 "sql_yacc.yy"
    { (yyval.ulong_num)= RAID_TYPE_0; }
    break;

  case 303:
#line 2692 "sql_yacc.yy"
    { (yyval.ulong_num)= RAID_TYPE_0; }
    break;

  case 304:
#line 2693 "sql_yacc.yy"
    { (yyval.ulong_num)=(yyvsp[0].ulong_num);}
    break;

  case 305:
#line 2696 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 306:
#line 2697 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 307:
#line 2698 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 308:
#line 2701 "sql_yacc.yy"
    {}
    break;

  case 310:
#line 2705 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_FUNCTION; }
    break;

  case 311:
#line 2706 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_AGGREGATE; }
    break;

  case 312:
#line 2709 "sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 313:
#line 2710 "sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 314:
#line 2711 "sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 315:
#line 2712 "sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 321:
#line 2727 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 322:
#line 2734 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new Key((yyvsp[-5].key_type),(yyvsp[-4].simple_string), (yyvsp[-3].key_alg), 0, lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 323:
#line 2740 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    const char *key_name= (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-6].simple_string);
	    lex->key_list.push_back(new Key((yyvsp[-5].key_type), key_name, (yyvsp[-3].key_alg), 0,
				    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 324:
#line 2748 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new foreign_key((yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-7].simple_string), lex->col_list,
				    (yyvsp[0].table),
				    lex->ref_list,
				    lex->fk_delete_opt,
				    lex->fk_update_opt,
				    lex->fk_match_option));
	    lex->key_list.push_back(new Key(Key::MULTIPLE, (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string) : (yyvsp[-7].simple_string),
					    HA_KEY_ALG_UNDEF, 1,
					    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 325:
#line 2762 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 326:
#line 2766 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 330:
#line 2781 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 331:
#line 2782 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].simple_string); }
    break;

  case 332:
#line 2786 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].simple_string); }
    break;

  case 333:
#line 2791 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->length=lex->dec=0; lex->type=0;
	   lex->default_value= lex->on_update_value= 0;
           lex->comment=null_lex_str;
	   lex->charset=NULL;
	 }
    break;

  case 334:
#line 2799 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (add_field_to_list(lex->thd, (yyvsp[-3].lex_str).str,
				(enum enum_field_types) (yyvsp[-1].num),
				lex->length,lex->dec,lex->type,
				lex->default_value, lex->on_update_value, 
                                &lex->comment,
				lex->change,&lex->interval_list,lex->charset,
				lex->uint_geom_type))
	    YYABORT;
	}
    break;

  case 335:
#line 2812 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 336:
#line 2813 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 337:
#line 2814 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_FLOAT; }
    break;

  case 338:
#line 2815 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 339:
#line 2817 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str;
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 340:
#line 2819 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 341:
#line 2821 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 342:
#line 2823 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 343:
#line 2825 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 344:
#line 2827 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 345:
#line 2830 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 346:
#line 2833 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 347:
#line 2836 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 348:
#line 2839 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 349:
#line 2841 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR;
					  Lex->charset=national_charset_info; }
    break;

  case 350:
#line 2844 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 351:
#line 2847 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_YEAR; }
    break;

  case 352:
#line 2848 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATE; }
    break;

  case 353:
#line 2849 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TIME; }
    break;

  case 354:
#line 2851 "sql_yacc.yy"
    {
	    if (YYTHD->variables.sql_mode & MODE_MAXDB)
	      (yyval.num)=FIELD_TYPE_DATETIME;
	    else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
	      (yyval.num)=FIELD_TYPE_TIMESTAMP;
            }
	   }
    break;

  case 355:
#line 2863 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATETIME; }
    break;

  case 356:
#line 2864 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 357:
#line 2866 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 358:
#line 2869 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[0].num);
            (yyval.num)=FIELD_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            YYABORT;
#endif
          }
    break;

  case 359:
#line 2880 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 360:
#line 2882 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 361:
#line 2884 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 362:
#line 2886 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 363:
#line 2887 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 364:
#line 2888 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 365:
#line 2889 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 366:
#line 2890 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 367:
#line 2892 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 368:
#line 2894 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 369:
#line 2896 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 370:
#line 2897 "sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 371:
#line 2898 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_ENUM; }
    break;

  case 372:
#line 2899 "sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 373:
#line 2900 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SET; }
    break;

  case 374:
#line 2901 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 375:
#line 2903 "sql_yacc.yy"
    {
	    (yyval.num)=FIELD_TYPE_LONGLONG;
	    Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
		         UNIQUE_FLAG);
	  }
    break;

  case 376:
#line 2911 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 377:
#line 2912 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 378:
#line 2913 "sql_yacc.yy"
    { Lex->length= (char*)"21";
                                (yyval.num)= Field::GEOM_POINT;
                              }
    break;

  case 379:
#line 2916 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 380:
#line 2917 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 381:
#line 2918 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 382:
#line 2919 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 383:
#line 2920 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 384:
#line 2924 "sql_yacc.yy"
    {}
    break;

  case 385:
#line 2928 "sql_yacc.yy"
    {}
    break;

  case 386:
#line 2929 "sql_yacc.yy"
    {}
    break;

  case 387:
#line 2933 "sql_yacc.yy"
    {}
    break;

  case 388:
#line 2934 "sql_yacc.yy"
    {}
    break;

  case 389:
#line 2938 "sql_yacc.yy"
    {}
    break;

  case 390:
#line 2939 "sql_yacc.yy"
    {}
    break;

  case 391:
#line 2940 "sql_yacc.yy"
    {}
    break;

  case 392:
#line 2941 "sql_yacc.yy"
    {}
    break;

  case 393:
#line 2942 "sql_yacc.yy"
    {}
    break;

  case 394:
#line 2946 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG; }
    break;

  case 395:
#line 2947 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 396:
#line 2948 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SHORT; }
    break;

  case 397:
#line 2949 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_INT24; }
    break;

  case 398:
#line 2950 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONGLONG; }
    break;

  case 399:
#line 2953 "sql_yacc.yy"
    { (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
			      FIELD_TYPE_FLOAT : FIELD_TYPE_DOUBLE; }
    break;

  case 400:
#line 2955 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 401:
#line 2956 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 402:
#line 2960 "sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 403:
#line 2961 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str; Lex->dec= (char*)0; }
    break;

  case 404:
#line 2962 "sql_yacc.yy"
    {}
    break;

  case 405:
#line 2966 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->length=(yyvsp[-3].lex_str).str; lex->dec=(yyvsp[-1].lex_str).str;
	}
    break;

  case 406:
#line 2972 "sql_yacc.yy"
    {}
    break;

  case 407:
#line 2973 "sql_yacc.yy"
    {}
    break;

  case 408:
#line 2976 "sql_yacc.yy"
    {}
    break;

  case 409:
#line 2977 "sql_yacc.yy"
    {}
    break;

  case 410:
#line 2980 "sql_yacc.yy"
    {}
    break;

  case 411:
#line 2981 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 412:
#line 2982 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 413:
#line 2985 "sql_yacc.yy"
    { Lex->length=(char*) 0; }
    break;

  case 414:
#line 2986 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str; }
    break;

  case 415:
#line 2989 "sql_yacc.yy"
    {}
    break;

  case 416:
#line 2990 "sql_yacc.yy"
    {}
    break;

  case 417:
#line 2993 "sql_yacc.yy"
    {}
    break;

  case 418:
#line 2994 "sql_yacc.yy"
    {}
    break;

  case 419:
#line 2997 "sql_yacc.yy"
    {}
    break;

  case 421:
#line 3001 "sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 422:
#line 3002 "sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 423:
#line 3003 "sql_yacc.yy"
    { Lex->default_value=(yyvsp[0].item); }
    break;

  case 424:
#line 3005 "sql_yacc.yy"
    { Lex->on_update_value= new Item_func_now_local(); }
    break;

  case 425:
#line 3006 "sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 426:
#line 3008 "sql_yacc.yy"
    { 
	    LEX *lex=Lex;
	    lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 427:
#line 3014 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 428:
#line 3020 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 429:
#line 3026 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_KEY_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 430:
#line 3031 "sql_yacc.yy"
    { Lex->comment= (yyvsp[0].lex_str); }
    break;

  case 431:
#line 3033 "sql_yacc.yy"
    {
	    if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name,Lex->charset->csname);
	      YYABORT;
	    }
	    else
	    {
	      Lex->charset=(yyvsp[0].charset);
	    }
	  }
    break;

  case 432:
#line 3048 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); }
    break;

  case 433:
#line 3049 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 434:
#line 3053 "sql_yacc.yy"
    {}
    break;

  case 435:
#line 3054 "sql_yacc.yy"
    {}
    break;

  case 436:
#line 3059 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 437:
#line 3066 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 438:
#line 3070 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 439:
#line 3071 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 440:
#line 3076 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
	      !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 441:
#line 3084 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 442:
#line 3088 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 443:
#line 3089 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 444:
#line 3093 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_name((yyvsp[0].lex_str).str,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_COLLATION, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 445:
#line 3102 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 446:
#line 3103 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset); }
    break;

  case 447:
#line 3107 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 448:
#line 3108 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 449:
#line 3111 "sql_yacc.yy"
    {}
    break;

  case 450:
#line 3112 "sql_yacc.yy"
    {}
    break;

  case 451:
#line 3115 "sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 452:
#line 3116 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 453:
#line 3117 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 454:
#line 3119 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 455:
#line 3127 "sql_yacc.yy"
    { Lex->charset=(yyvsp[-1].charset); }
    break;

  case 456:
#line 3128 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 457:
#line 3131 "sql_yacc.yy"
    { }
    break;

  case 458:
#line 3132 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 459:
#line 3135 "sql_yacc.yy"
    { Lex->charset= NULL; }
    break;

  case 460:
#line 3136 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 461:
#line 3138 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 462:
#line 3146 "sql_yacc.yy"
    { Lex->charset=(yyvsp[0].charset); }
    break;

  case 465:
#line 3155 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fk_delete_opt= lex->fk_update_opt= lex->fk_match_option= 0;
	  lex->ref_list.empty();
	}
    break;

  case 466:
#line 3161 "sql_yacc.yy"
    {
	  (yyval.table)=(yyvsp[-2].table);
	}
    break;

  case 467:
#line 3166 "sql_yacc.yy"
    {}
    break;

  case 468:
#line 3167 "sql_yacc.yy"
    {}
    break;

  case 469:
#line 3170 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 470:
#line 3171 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 471:
#line 3175 "sql_yacc.yy"
    {}
    break;

  case 472:
#line 3176 "sql_yacc.yy"
    {}
    break;

  case 473:
#line 3179 "sql_yacc.yy"
    {}
    break;

  case 474:
#line 3180 "sql_yacc.yy"
    {}
    break;

  case 475:
#line 3183 "sql_yacc.yy"
    { Lex->fk_delete_opt= (yyvsp[0].num); }
    break;

  case 476:
#line 3184 "sql_yacc.yy"
    { Lex->fk_update_opt= (yyvsp[0].num); }
    break;

  case 477:
#line 3185 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_FULL; }
    break;

  case 478:
#line 3186 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 479:
#line 3187 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 480:
#line 3190 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 481:
#line 3191 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_CASCADE; }
    break;

  case 482:
#line 3192 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 483:
#line 3193 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 484:
#line 3194 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 485:
#line 3197 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 486:
#line 3198 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT; }
    break;

  case 487:
#line 3200 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 488:
#line 3211 "sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 489:
#line 3212 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 490:
#line 3215 "sql_yacc.yy"
    {}
    break;

  case 491:
#line 3216 "sql_yacc.yy"
    {}
    break;

  case 492:
#line 3219 "sql_yacc.yy"
    {}
    break;

  case 494:
#line 3224 "sql_yacc.yy"
    {}
    break;

  case 495:
#line 3225 "sql_yacc.yy"
    {}
    break;

  case 496:
#line 3226 "sql_yacc.yy"
    {}
    break;

  case 497:
#line 3229 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 498:
#line 3230 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 499:
#line 3231 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 500:
#line 3233 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 501:
#line 3245 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
    break;

  case 502:
#line 3246 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 503:
#line 3247 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 504:
#line 3250 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 505:
#line 3252 "sql_yacc.yy"
    {
	    (yyval.key_alg)= HA_KEY_ALG_RTREE;
	  }
    break;

  case 506:
#line 3255 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 507:
#line 3258 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 508:
#line 3259 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 509:
#line 3262 "sql_yacc.yy"
    { (yyval.key_part)=new key_part_spec((yyvsp[0].lex_str).str); }
    break;

  case 510:
#line 3264 "sql_yacc.yy"
    {
          int key_part_len= atoi((yyvsp[-1].lex_str).str);
          if (!key_part_len)
          {
            my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_str).str);
          }
          (yyval.key_part)=new key_part_spec((yyvsp[-3].lex_str).str,(uint) key_part_len);
        }
    break;

  case 511:
#line 3274 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 512:
#line 3275 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str; }
    break;

  case 513:
#line 3278 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 514:
#line 3279 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 515:
#line 3282 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 516:
#line 3283 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 517:
#line 3291 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_ALTER_TABLE;
	  lex->name= 0;
	  lex->duplicates= DUP_ERROR; 
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
          lex->select_lex.init_order();
	  lex->select_lex.db=
            ((TABLE_LIST*) lex->select_lex.table_list.first)->db;
          lex->name=0;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.db_type= DB_TYPE_DEFAULT;
	  lex->create_info.default_table_charset= NULL;
	  lex->create_info.row_type= ROW_TYPE_NOT_USED;
	  lex->alter_info.reset();
	  lex->alter_info.flags= 0;
	}
    break;

  case 518:
#line 3315 "sql_yacc.yy"
    {}
    break;

  case 519:
#line 3317 "sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 520:
#line 3322 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            THD *thd= Lex->thd;
	    lex->sql_command=SQLCOM_ALTER_DB;
	    lex->name= (yyvsp[-2].simple_string);
            if (lex->name == NULL && thd->copy_db_to(&lex->name, NULL))
              YYABORT;
	  }
    break;

  case 521:
#line 3331 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 522:
#line 3342 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_PROCEDURE;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 523:
#line 3349 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 524:
#line 3360 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_FUNCTION;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 525:
#line 3368 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    lex->sql_command= SQLCOM_CREATE_VIEW;
	    lex->create_view_mode= VIEW_ALTER;
	    /* first table in list is target VIEW name */
	    lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING);
	  }
    break;

  case 526:
#line 3377 "sql_yacc.yy"
    {}
    break;

  case 527:
#line 3381 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 528:
#line 3382 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 530:
#line 3385 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 531:
#line 3386 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 534:
#line 3392 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->change=0;
	  lex->alter_info.flags|= ALTER_ADD_COLUMN;
	}
    break;

  case 535:
#line 3399 "sql_yacc.yy"
    { }
    break;

  case 536:
#line 3401 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_INDEX;
	  }
    break;

  case 537:
#line 3405 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 538:
#line 3409 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->change= (yyvsp[0].lex_str).str;
	     lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
	  }
    break;

  case 540:
#line 3416 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
	    lex->charset= NULL;
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 541:
#line 3425 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,(yyvsp[-3].lex_str).str,
                                  (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
				  (yyvsp[-3].lex_str).str, &lex->interval_list, lex->charset,
				  lex->uint_geom_type))
	       YYABORT;
          }
    break;

  case 543:
#line 3438 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::COLUMN,
                                                               (yyvsp[-1].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_COLUMN;
	  }
    break;

  case 544:
#line 3445 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 545:
#line 3449 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
				               primary_key_name));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 546:
#line 3456 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
					                       (yyvsp[0].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 547:
#line 3463 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 548:
#line 3469 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 549:
#line 3475 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].item)));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 550:
#line 3481 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-2].lex_str).str,
                                                                  (Item*) 0));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 551:
#line 3488 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            THD *thd= lex->thd;
	    lex->select_lex.db=(yyvsp[0].table)->db.str;
            if (lex->select_lex.db == NULL &&
                thd->copy_db_to(&lex->select_lex.db, NULL))
            {
              YYABORT;
            }
            if (check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length) ||
                (yyvsp[0].table)->db.str && check_db_name((yyvsp[0].table)->db.str))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str);
              YYABORT;
            }
	    lex->name= (yyvsp[0].table)->table.str;
	    lex->alter_info.flags|= ALTER_RENAME;
	  }
    break;

  case 552:
#line 3507 "sql_yacc.yy"
    {
	    if (!(yyvsp[-1].charset))
	    {
	      THD *thd= YYTHD;
	      (yyvsp[-1].charset)= thd->variables.collation_database;
	    }
	    (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	    if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	      YYABORT;
	    }
	    LEX *lex= Lex;
	    lex->create_info.table_charset=
	      lex->create_info.default_table_charset= (yyvsp[0].charset);
	    lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
					    HA_CREATE_USED_DEFAULT_CHARSET);
	    lex->alter_info.flags|= ALTER_CONVERT;
	  }
    break;

  case 553:
#line 3528 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_OPTIONS;
	  }
    break;

  case 554:
#line 3533 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_FORCE;
	   }
    break;

  case 555:
#line 3537 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_ORDER;
	  }
    break;

  case 556:
#line 3543 "sql_yacc.yy"
    {}
    break;

  case 557:
#line 3544 "sql_yacc.yy"
    {}
    break;

  case 558:
#line 3547 "sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 559:
#line 3548 "sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 560:
#line 3552 "sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 561:
#line 3553 "sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 562:
#line 3554 "sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 563:
#line 3558 "sql_yacc.yy"
    {}
    break;

  case 564:
#line 3559 "sql_yacc.yy"
    { store_position_for_column((yyvsp[0].lex_str).str); }
    break;

  case 565:
#line 3560 "sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 566:
#line 3563 "sql_yacc.yy"
    {}
    break;

  case 567:
#line 3564 "sql_yacc.yy"
    {}
    break;

  case 568:
#line 3565 "sql_yacc.yy"
    {}
    break;

  case 569:
#line 3566 "sql_yacc.yy"
    {}
    break;

  case 570:
#line 3574 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
	    lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 571:
#line 3583 "sql_yacc.yy"
    {}
    break;

  case 572:
#line 3585 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
	    lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 573:
#line 3592 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_START;
	   lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
          }
    break;

  case 574:
#line 3600 "sql_yacc.yy"
    {}
    break;

  case 575:
#line 3602 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_STOP;
	   lex->type = 0;
         }
    break;

  case 576:
#line 3612 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_BEGIN;
          lex->start_transaction_opt= (yyvsp[0].num);
        }
    break;

  case 577:
#line 3620 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 578:
#line 3622 "sql_yacc.yy"
    {
           (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
        }
    break;

  case 579:
#line 3628 "sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 580:
#line 3630 "sql_yacc.yy"
    {}
    break;

  case 583:
#line 3639 "sql_yacc.yy"
    {}
    break;

  case 584:
#line 3640 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 585:
#line 3641 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 586:
#line 3645 "sql_yacc.yy"
    {}
    break;

  case 587:
#line 3647 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               YYABORT;
            }

          }
    break;

  case 590:
#line 3669 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_RESTORE_TABLE;
	}
    break;

  case 591:
#line 3673 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 592:
#line 3679 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_BACKUP_TABLE;
	}
    break;

  case 593:
#line 3683 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 594:
#line 3689 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_CHECKSUM;
	}
    break;

  case 595:
#line 3694 "sql_yacc.yy"
    {}
    break;

  case 596:
#line 3698 "sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 597:
#line 3699 "sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 598:
#line 3700 "sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 599:
#line 3705 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_REPAIR;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 600:
#line 3712 "sql_yacc.yy"
    {}
    break;

  case 601:
#line 3716 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 602:
#line 3717 "sql_yacc.yy"
    {}
    break;

  case 603:
#line 3720 "sql_yacc.yy"
    {}
    break;

  case 604:
#line 3721 "sql_yacc.yy"
    {}
    break;

  case 605:
#line 3724 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 606:
#line 3725 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 607:
#line 3726 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 608:
#line 3730 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_ANALYZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 609:
#line 3737 "sql_yacc.yy"
    {}
    break;

  case 610:
#line 3742 "sql_yacc.yy"
    {
	  LEX *lex=Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_CHECK;
	  lex->check_opt.init();
	}
    break;

  case 611:
#line 3754 "sql_yacc.yy"
    {}
    break;

  case 612:
#line 3758 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 613:
#line 3759 "sql_yacc.yy"
    {}
    break;

  case 614:
#line 3762 "sql_yacc.yy"
    {}
    break;

  case 615:
#line 3763 "sql_yacc.yy"
    {}
    break;

  case 616:
#line 3766 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 617:
#line 3767 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 618:
#line 3768 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 619:
#line 3769 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 620:
#line 3770 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 621:
#line 3771 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 622:
#line 3775 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_OPTIMIZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 623:
#line 3782 "sql_yacc.yy"
    {}
    break;

  case 624:
#line 3786 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 625:
#line 3787 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 626:
#line 3788 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 627:
#line 3793 "sql_yacc.yy"
    {
          Lex->sql_command= SQLCOM_RENAME_TABLE;
	}
    break;

  case 628:
#line 3797 "sql_yacc.yy"
    {}
    break;

  case 629:
#line 3799 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 630:
#line 3806 "sql_yacc.yy"
    {
          if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
            YYABORT;
        }
    break;

  case 631:
#line 3811 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              YYABORT;
          }
    break;

  case 634:
#line 3823 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sl= lex->current_select;
	  if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE) ||
	      !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE))
	    YYABORT;
	}
    break;

  case 635:
#line 3835 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
	  lex->ident= (yyvsp[0].lex_str);
        }
    break;

  case 638:
#line 3848 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          if (!sel->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL, 0,
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
        }
    break;

  case 639:
#line 3860 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 640:
#line 3861 "sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 641:
#line 3866 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_PRELOAD_KEYS;
	}
    break;

  case 642:
#line 3871 "sql_yacc.yy"
    {}
    break;

  case 645:
#line 3880 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sel= &lex->select_lex;
	  if (!sel->add_table_to_list(lex->thd, (yyvsp[-2].table), NULL, (yyvsp[0].num),
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
	}
    break;

  case 646:
#line 3892 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 647:
#line 3894 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          sel->use_index= sel->interval_list;
        }
    break;

  case 648:
#line 3902 "sql_yacc.yy"
    { Lex->select_lex.use_index_ptr= 0; }
    break;

  case 649:
#line 3904 "sql_yacc.yy"
    {
            SELECT_LEX *sel= &Lex->select_lex;
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 650:
#line 3912 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 651:
#line 3913 "sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 652:
#line 3923 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_SELECT;
	}
    break;

  case 655:
#line 3937 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
	    if (sel->set_braces(1))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
            if (sel->linkage == UNION_TYPE &&
                !sel->master_unit()->first_select()->braces &&
                sel->master_unit()->first_select()->linkage ==
                UNION_TYPE)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            /* select in braces, can't contain global parameters */
	    if (sel->master_unit()->fake_select_lex)
              sel->master_unit()->global_parameters=
                 sel->master_unit()->fake_select_lex;
          }
    break;

  case 657:
#line 3962 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          SELECT_LEX * sel= lex->current_select;
          if (lex->current_select->set_braces(0))
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (sel->linkage == UNION_TYPE &&
	      sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 659:
#line 3981 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->linkage != UNION_TYPE)
	    mysql_init_select(lex);
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 660:
#line 3989 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 662:
#line 3995 "sql_yacc.yy"
    {}
    break;

  case 670:
#line 4014 "sql_yacc.yy"
    {
	    if (test_all_bits(Select->options, SELECT_ALL | SELECT_DISTINCT))
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              YYABORT;
	    }
          }
    break;

  case 673:
#line 4028 "sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 674:
#line 4030 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Lex->lock_option= TL_READ_HIGH_PRIORITY;
	  }
    break;

  case 675:
#line 4035 "sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 676:
#line 4036 "sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 677:
#line 4037 "sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 678:
#line 4039 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_BUFFER_RESULT;
	  }
    break;

  case 679:
#line 4045 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_FOUND_ROWS;
	  }
    break;

  case 680:
#line 4051 "sql_yacc.yy"
    {
            Lex->safe_to_cache_query=0;
	    Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 681:
#line 4057 "sql_yacc.yy"
    {
            /* Honor this flag only if SQL_NO_CACHE wasn't specified. */
            if (Lex->select_lex.sql_cache != SELECT_LEX::SQL_NO_CACHE)
            {
              Lex->safe_to_cache_query=1;
	      Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
	  }
    break;

  case 682:
#line 4066 "sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 684:
#line 4072 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->set_lock_for_tables(TL_WRITE);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 685:
#line 4078 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->
	      set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 688:
#line 4090 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (add_item_to_list(thd,
                                 new Item_field(&thd->lex->current_select->
                                                context,
                                                NULL, NULL, "*")))
	      YYABORT;
	    (thd->lex->current_select->with_wild)++;
	  }
    break;

  case 689:
#line 4103 "sql_yacc.yy"
    {
	    if (add_item_to_list(YYTHD, (yyvsp[-2].item)))
	      YYABORT;
	    if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
	      (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
	    else if (!(yyvsp[-2].item)->name) {
	      char *str = (yyvsp[-3].simple_string);
	      if (str[-1] == '`')
	        str--;
	      (yyvsp[-2].item)->set_name(str,(uint) ((yyvsp[-1].simple_string) - str), YYTHD->charset());
	    }
	  }
    break;

  case 690:
#line 4120 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_start; }
    break;

  case 691:
#line 4123 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_end; }
    break;

  case 692:
#line 4126 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 693:
#line 4127 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 694:
#line 4130 "sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 695:
#line 4131 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 696:
#line 4132 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 697:
#line 4133 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 698:
#line 4134 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 699:
#line 4138 "sql_yacc.yy"
    {}
    break;

  case 700:
#line 4139 "sql_yacc.yy"
    {}
    break;

  case 701:
#line 4143 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 702:
#line 4145 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_or(*list);
              /* optimize construction of logical OR to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 704:
#line 4163 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 705:
#line 4167 "sql_yacc.yy"
    { (yyval.item)= new Item_cond_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 706:
#line 4168 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 707:
#line 4170 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_and(*list);
              /* optimize construction of logical AND to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 709:
#line 4188 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 710:
#line 4192 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 712:
#line 4196 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),1,0); }
    break;

  case 713:
#line 4197 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),0,0); }
    break;

  case 714:
#line 4198 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),0,1); }
    break;

  case 715:
#line 4199 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),1,1); }
    break;

  case 716:
#line 4200 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 717:
#line 4201 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 719:
#line 4205 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 720:
#line 4206 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 721:
#line 4207 "sql_yacc.yy"
    { (yyval.item)= new Item_func_equal((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 722:
#line 4209 "sql_yacc.yy"
    { (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 723:
#line 4211 "sql_yacc.yy"
    { (yyval.item)= all_any_subquery_creator((yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex)); }
    break;

  case 725:
#line 4216 "sql_yacc.yy"
    { (yyval.item)= new Item_in_subselect((yyvsp[-4].item), (yyvsp[-1].select_lex)); }
    break;

  case 726:
#line 4218 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_in_subselect((yyvsp[-5].item), (yyvsp[-1].select_lex))); }
    break;

  case 727:
#line 4220 "sql_yacc.yy"
    {
              (yyval.item)= new Item_func_eq((yyvsp[-4].item), (yyvsp[-1].item));
          }
    break;

  case 728:
#line 4224 "sql_yacc.yy"
    { 
              (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
              (yyvsp[-1].item_list)->push_front((yyvsp[-6].item));
              (yyval.item)= new Item_func_in(*(yyvsp[-1].item_list));
          }
    break;

  case 729:
#line 4230 "sql_yacc.yy"
    {
              (yyval.item)= new Item_func_ne((yyvsp[-5].item), (yyvsp[-1].item));
          }
    break;

  case 730:
#line 4234 "sql_yacc.yy"
    {
              (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
              (yyvsp[-1].item_list)->push_front((yyvsp[-7].item));
              Item_func_in *item = new Item_func_in(*(yyvsp[-1].item_list));
              item->negate();
              (yyval.item)= item;
          }
    break;

  case 731:
#line 4242 "sql_yacc.yy"
    { (yyval.item)= new Item_func_between((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 732:
#line 4244 "sql_yacc.yy"
    {
      Item_func_between *item= new Item_func_between((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[0].item));
      item->negate();
      (yyval.item)= item;
    }
    break;

  case 733:
#line 4250 "sql_yacc.yy"
    { (yyval.item)= new Item_func_eq(new Item_func_soundex((yyvsp[-3].item)),
				 new Item_func_soundex((yyvsp[0].item))); }
    break;

  case 734:
#line 4253 "sql_yacc.yy"
    { (yyval.item)= new Item_func_like((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].item),Lex->escape_used); }
    break;

  case 735:
#line 4255 "sql_yacc.yy"
    { (yyval.item)= new Item_func_not(new Item_func_like((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].item), Lex->escape_used)); }
    break;

  case 736:
#line 4256 "sql_yacc.yy"
    { (yyval.item)= new Item_func_regex((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 737:
#line 4258 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_func_regex((yyvsp[-3].item),(yyvsp[0].item))); }
    break;

  case 739:
#line 4262 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_or((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 741:
#line 4266 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_and((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 743:
#line 4271 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_left((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 744:
#line 4273 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_right((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 746:
#line 4277 "sql_yacc.yy"
    { (yyval.item)= new Item_func_plus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 747:
#line 4278 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 748:
#line 4280 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),0); }
    break;

  case 749:
#line 4282 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),1); }
    break;

  case 751:
#line 4286 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mul((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 752:
#line 4287 "sql_yacc.yy"
    { (yyval.item)= new Item_func_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 753:
#line 4288 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 754:
#line 4289 "sql_yacc.yy"
    { (yyval.item)= new Item_func_int_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 755:
#line 4290 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 757:
#line 4294 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 767:
#line 4302 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 768:
#line 4303 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 769:
#line 4304 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 770:
#line 4305 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 771:
#line 4306 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 772:
#line 4307 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 773:
#line 4310 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 774:
#line 4311 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 775:
#line 4315 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 777:
#line 4321 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_set_collation((yyvsp[-2].item),
					    new Item_string((yyvsp[0].lex_str).str,
							    (yyvsp[0].lex_str).length,
                                                            YYTHD->charset()));
	  }
    break;

  case 782:
#line 4332 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat((yyvsp[-2].item), (yyvsp[0].item)); }
    break;

  case 783:
#line 4333 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 784:
#line 4334 "sql_yacc.yy"
    { (yyval.item)= new Item_func_neg((yyvsp[0].item)); }
    break;

  case 785:
#line 4335 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_neg((yyvsp[0].item)); }
    break;

  case 786:
#line 4336 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 787:
#line 4338 "sql_yacc.yy"
    { 
            (yyval.item)= new Item_singlerow_subselect((yyvsp[-1].select_lex)); 
          }
    break;

  case 788:
#line 4341 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 789:
#line 4343 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 790:
#line 4348 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 791:
#line 4353 "sql_yacc.yy"
    {
            (yyval.item)= new Item_exists_subselect((yyvsp[-1].select_lex)); 
          }
    break;

  case 792:
#line 4356 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 793:
#line 4358 "sql_yacc.yy"
    { (yyvsp[-5].item_list)->push_front((yyvsp[-2].item));
            Select->add_ftfunc_to_list((Item_func_match*)
                                        ((yyval.item)=new Item_func_match(*(yyvsp[-5].item_list),(yyvsp[-1].num)))); }
    break;

  case 794:
#line 4361 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ascii((yyvsp[-1].item)); }
    break;

  case 795:
#line 4363 "sql_yacc.yy"
    {
            (yyval.item)= create_func_cast((yyvsp[0].item), ITEM_CAST_CHAR, -1, 0, &my_charset_bin);
	  }
    break;

  case 796:
#line 4367 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
                                 lex->length ? atoi(lex->length) : -1,
                                 lex->dec ? atoi(lex->dec) : 0,
                                 lex->charset);
            if (!(yyval.item))
              YYABORT;
	  }
    break;

  case 797:
#line 4377 "sql_yacc.yy"
    { (yyval.item)= new Item_func_case(* (yyvsp[-2].item_list), (yyvsp[-4].item), (yyvsp[-1].item) ); }
    break;

  case 798:
#line 4379 "sql_yacc.yy"
    {
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
				 Lex->length ? atoi(Lex->length) : -1,
                                 Lex->dec ? atoi(Lex->dec) : 0,
				 Lex->charset);
            if (!(yyval.item))
              YYABORT;
	  }
    break;

  case 799:
#line 4388 "sql_yacc.yy"
    { (yyval.item)= new Item_func_conv_charset((yyvsp[-3].item),(yyvsp[-1].charset)); }
    break;

  case 800:
#line 4390 "sql_yacc.yy"
    {
	    if ((yyvsp[-1].item)->is_splocal())
	    {
	      Item_splocal *il= static_cast<Item_splocal *>((yyvsp[-1].item));

	      my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
	      YYABORT;
	    }
	    (yyval.item)= new Item_default_value(Lex->current_context(), (yyvsp[-1].item));
	  }
    break;

  case 801:
#line 4401 "sql_yacc.yy"
    { (yyval.item)= new Item_insert_value(Lex->current_context(), (yyvsp[-1].item)); }
    break;

  case 802:
#line 4403 "sql_yacc.yy"
    {
	    if (!(yyvsp[-2].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-2].symbol).symbol->group->name,
                       (yyvsp[-2].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(void))((yyvsp[-2].symbol).symbol->create_func))();
	  }
    break;

  case 803:
#line 4414 "sql_yacc.yy"
    {
	    if (!(yyvsp[-3].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-3].symbol).symbol->group->name,
                       (yyvsp[-3].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*))((yyvsp[-3].symbol).symbol->create_func))((yyvsp[-1].item));
	  }
    break;

  case 804:
#line 4425 "sql_yacc.yy"
    {
	    if (!(yyvsp[-5].symbol).symbol->create_func)
	    {
	      my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-5].symbol).symbol->group->name,
                       (yyvsp[-5].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*))((yyvsp[-5].symbol).symbol->create_func))((yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 805:
#line 4436 "sql_yacc.yy"
    {
	    if (!(yyvsp[-7].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-7].symbol).symbol->group->name,
                       (yyvsp[-7].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*,Item*))((yyvsp[-7].symbol).symbol->create_func))((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 806:
#line 4447 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);}
    break;

  case 807:
#line 4449 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0); }
    break;

  case 808:
#line 4451 "sql_yacc.yy"
    { (yyval.item)= new Item_func_repeat((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 809:
#line 4453 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-1].item)); }
    break;

  case 810:
#line 4455 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 811:
#line 4457 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-1].item_list)); }
    break;

  case 812:
#line 4459 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-3].item_list), (yyvsp[-1].charset)); }
    break;

  case 813:
#line 4461 "sql_yacc.yy"
    { (yyval.item)= new Item_func_charset((yyvsp[-1].item)); }
    break;

  case 814:
#line 4463 "sql_yacc.yy"
    { (yyval.item)= new Item_func_coalesce(* (yyvsp[-1].item_list)); }
    break;

  case 815:
#line 4465 "sql_yacc.yy"
    { (yyval.item)= new Item_func_collation((yyvsp[-1].item)); }
    break;

  case 816:
#line 4467 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat(* (yyvsp[-1].item_list)); }
    break;

  case 817:
#line 4469 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_concat_ws(*(yyvsp[-1].item_list)); }
    break;

  case 818:
#line 4471 "sql_yacc.yy"
    {
            if (Lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
	    (yyval.item)= new Item_func_convert_tz((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	  }
    break;

  case 819:
#line 4477 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_local(); Lex->safe_to_cache_query=0; }
    break;

  case 820:
#line 4479 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_local(); Lex->safe_to_cache_query=0; }
    break;

  case 821:
#line 4481 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_curtime_local((yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 822:
#line 4486 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_current_user(Lex->current_context());
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 823:
#line 4491 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),0); }
    break;

  case 824:
#line 4493 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),1); }
    break;

  case 825:
#line 4495 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_database();
            Lex->safe_to_cache_query=0;
	  }
    break;

  case 826:
#line 4500 "sql_yacc.yy"
    { (yyval.item)= new Item_date_typecast((yyvsp[-1].item)); }
    break;

  case 827:
#line 4502 "sql_yacc.yy"
    { (yyval.item)= new Item_func_dayofmonth((yyvsp[-1].item)); }
    break;

  case 828:
#line 4504 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_elt(*(yyvsp[-1].item_list)); }
    break;

  case 829:
#line 4506 "sql_yacc.yy"
    { (yyval.item)= new Item_func_make_set((yyvsp[-3].item), *(yyvsp[-1].item_list)); }
    break;

  case 830:
#line 4508 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_encrypt((yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_RAND);
	  }
    break;

  case 831:
#line 4512 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 832:
#line 4514 "sql_yacc.yy"
    { (yyval.item)= new Item_func_decode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 833:
#line 4516 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 834:
#line 4518 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-1].item)); }
    break;

  case 835:
#line 4520 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 836:
#line 4522 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-1].item)); }
    break;

  case 837:
#line 4524 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 838:
#line 4526 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 839:
#line 4528 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 840:
#line 4530 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-9].item), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 841:
#line 4532 "sql_yacc.yy"
    { (yyval.item)= new Item_func_format((yyvsp[-3].item),atoi((yyvsp[-1].lex_str).str)); }
    break;

  case 842:
#line 4534 "sql_yacc.yy"
    { (yyval.item)= new Item_func_from_unixtime((yyvsp[-1].item)); }
    break;

  case 843:
#line 4536 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_date_format (new Item_func_from_unixtime((yyvsp[-3].item)),(yyvsp[-1].item),0);
	  }
    break;

  case 844:
#line 4540 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_field(*(yyvsp[-1].item_list)); }
    break;

  case 845:
#line 4542 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.item)= (yyvsp[0].item);
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 846:
#line 4552 "sql_yacc.yy"
    { (yyval.item)= new Item_func_get_format((yyvsp[-3].date_time_type), (yyvsp[-1].item)); }
    break;

  case 847:
#line 4554 "sql_yacc.yy"
    { (yyval.item)= new Item_func_hour((yyvsp[-1].item)); }
    break;

  case 848:
#line 4556 "sql_yacc.yy"
    { (yyval.item)= new Item_func_if((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 849:
#line 4558 "sql_yacc.yy"
    { (yyval.item)= new Item_func_insert((yyvsp[-7].item),(yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 850:
#line 4561 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[0].item),(yyvsp[-3].item),(yyvsp[-2].interval),0); }
    break;

  case 851:
#line 4563 "sql_yacc.yy"
    {
            if ((yyvsp[0].item)->type() != Item::ROW_ITEM)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            (yyval.item)= new Item_func_interval((Item_row *)(yyvsp[0].item));
          }
    break;

  case 852:
#line 4572 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 853:
#line 4577 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id((yyvsp[-1].item));
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 854:
#line 4582 "sql_yacc.yy"
    { (yyval.item)= new Item_func_left((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 855:
#line 4584 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 856:
#line 4586 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-3].item),(yyvsp[-5].item),(yyvsp[-1].item)); }
    break;

  case 857:
#line 4588 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_max(*(yyvsp[-1].item_list)); }
    break;

  case 858:
#line 4590 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_min(*(yyvsp[-1].item_list)); }
    break;

  case 859:
#line 4592 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-1].item)); }
    break;

  case 860:
#line 4594 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 861:
#line 4596 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
		  }
    break;

  case 862:
#line 4601 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 863:
#line 4606 "sql_yacc.yy"
    { (yyval.item)= new Item_func_microsecond((yyvsp[-1].item)); }
    break;

  case 864:
#line 4608 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minute((yyvsp[-1].item)); }
    break;

  case 865:
#line 4610 "sql_yacc.yy"
    { (yyval.item) = new Item_func_mod( (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 866:
#line 4612 "sql_yacc.yy"
    { (yyval.item)= new Item_func_month((yyvsp[-1].item)); }
    break;

  case 867:
#line 4614 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); Lex->safe_to_cache_query=0;}
    break;

  case 868:
#line 4616 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local((yyvsp[-1].item)); Lex->safe_to_cache_query=0;}
    break;

  case 869:
#line 4618 "sql_yacc.yy"
    {
	    (yyval.item)= YYTHD->variables.old_passwords ?
              (Item *) new Item_func_old_password((yyvsp[-1].item)) :
	      (Item *) new Item_func_password((yyvsp[-1].item));
	  }
    break;

  case 870:
#line 4624 "sql_yacc.yy"
    { (yyval.item)=  new Item_func_old_password((yyvsp[-1].item)); }
    break;

  case 871:
#line 4626 "sql_yacc.yy"
    { (yyval.item) = new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 872:
#line 4628 "sql_yacc.yy"
    { (yyval.item) = new Item_func_quarter((yyvsp[-1].item)); }
    break;

  case 873:
#line 4630 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand((yyvsp[-1].item)); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 874:
#line 4632 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand(); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 875:
#line 4634 "sql_yacc.yy"
    { (yyval.item)= new Item_func_replace((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 876:
#line 4636 "sql_yacc.yy"
    { (yyval.item)= new Item_func_right((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 877:
#line 4638 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-1].item), new Item_int((char*)"0",0,1),0); }
    break;

  case 878:
#line 4639 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),0); }
    break;

  case 879:
#line 4641 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_row_count();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 880:
#line 4646 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);}
    break;

  case 881:
#line 4648 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1); }
    break;

  case 882:
#line 4650 "sql_yacc.yy"
    { (yyval.item)= new Item_func_second((yyvsp[-1].item)); }
    break;

  case 883:
#line 4652 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 884:
#line 4654 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 885:
#line 4656 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 886:
#line 4658 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 887:
#line 4660 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr_index((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 888:
#line 4662 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local();
            else (yyval.item)= new Item_func_now_local();
            Lex->safe_to_cache_query=0;
          }
    break;

  case 889:
#line 4669 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local((yyvsp[-1].item));
            else (yyval.item)= new Item_func_now_local((yyvsp[-1].item));
            Lex->safe_to_cache_query=0;
          }
    break;

  case 890:
#line 4676 "sql_yacc.yy"
    { (yyval.item)= new Item_time_typecast((yyvsp[-1].item)); }
    break;

  case 891:
#line 4678 "sql_yacc.yy"
    { (yyval.item)= new Item_datetime_typecast((yyvsp[-1].item)); }
    break;

  case 892:
#line 4680 "sql_yacc.yy"
    { (yyval.item)= new Item_func_add_time((yyvsp[-3].item), (yyvsp[-1].item), 1, 0); }
    break;

  case 893:
#line 4682 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-1].item),(yyvsp[-3].item),(yyvsp[-5].interval_time_st),0); }
    break;

  case 894:
#line 4684 "sql_yacc.yy"
    { (yyval.item)= new Item_func_timestamp_diff((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st)); }
    break;

  case 895:
#line 4686 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 896:
#line 4688 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 897:
#line 4690 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 898:
#line 4692 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 899:
#line 4694 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item)); }
    break;

  case 900:
#line 4696 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item)); }
    break;

  case 901:
#line 4698 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 902:
#line 4700 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 903:
#line 4702 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),1); }
    break;

  case 904:
#line 4704 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_name *name= new sp_name((yyvsp[-5].lex_str), (yyvsp[-3].lex_str));

	    name->init_qname(YYTHD);
	    sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
	    if ((yyvsp[-1].item_list))
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
	    else
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 905:
#line 4717 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
              }
            }
            lex->current_select->udf_list.push_front(udf);
#endif
          }
    break;

  case 906:
#line 4735 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf;
            LEX *lex= Lex;

            if (NULL != (udf= lex->current_select->udf_list.pop()))
            {
              if (udf->type == UDFTYPE_AGGREGATE)
                Select->in_sum_expr--;

              switch (udf->returns) {
              case STRING_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_str(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_str(udf);
                }
                break;
              case REAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_float(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_float(udf);
                }
                break;
              case INT_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_int(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_int(udf);
                }
                break;
              case DECIMAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_decimal(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_decimal(udf);
                }
                break;
              default:
                YYABORT;
              }
            }
            else
#endif /* HAVE_DLOPEN */
            {
	      LEX *lex= Lex;
              THD *thd= lex->thd;
              LEX_STRING db;
              if (thd->copy_db_to(&db.str, &db.length))
                YYABORT;
              sp_name *name= new sp_name(db, (yyvsp[-4].lex_str));
              if (name)
                name->init_qname(thd);

              sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
              if ((yyvsp[-1].item_list))
                (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
              else
                (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	      lex->safe_to_cache_query=0;
	    }
          }
    break;

  case 907:
#line 4835 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str), * (yyvsp[-1].item_list));
	  }
    break;

  case 908:
#line 4839 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_unix_timestamp();
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 909:
#line 4844 "sql_yacc.yy"
    { (yyval.item)= new Item_func_unix_timestamp((yyvsp[-1].item)); }
    break;

  case 910:
#line 4846 "sql_yacc.yy"
    { (yyval.item)= new Item_func_user(); Lex->safe_to_cache_query=0; }
    break;

  case 911:
#line 4848 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 912:
#line 4850 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 913:
#line 4852 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 914:
#line 4854 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_week((yyvsp[-1].item),new Item_int((char*) "0",
				   YYTHD->variables.default_week_format,1));
          }
    break;

  case 915:
#line 4859 "sql_yacc.yy"
    { (yyval.item)= new Item_func_week((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 916:
#line 4861 "sql_yacc.yy"
    { (yyval.item)= new Item_func_year((yyvsp[-1].item)); }
    break;

  case 917:
#line 4863 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-1].item),new Item_int((char*) "0",0,1)); }
    break;

  case 918:
#line 4865 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 919:
#line 4867 "sql_yacc.yy"
    {
	    (yyval.item)=new Item_func_benchmark((yyvsp[-3].ulong_num),(yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 920:
#line 4872 "sql_yacc.yy"
    { (yyval.item)=new Item_extract( (yyvsp[-3].interval), (yyvsp[-1].item)); }
    break;

  case 921:
#line 4876 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_rel((yyvsp[-3].item), (yyvsp[-1].item), Item_func::SP_CONTAINS_FUNC)); }
    break;

  case 922:
#line 4878 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 923:
#line 4880 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 924:
#line 4882 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-1].item))); }
    break;

  case 925:
#line 4884 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 926:
#line 4886 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point)); }
    break;

  case 927:
#line 4890 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_linestring, Geometry::wkb_point)); }
    break;

  case 928:
#line 4893 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW( Item_func_spatial_collection(* (yyvsp[-1].item_list),
                   Geometry::wkb_multilinestring, Geometry::wkb_linestring)); }
    break;

  case 929:
#line 4896 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 930:
#line 4898 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 931:
#line 4900 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 932:
#line 4902 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 933:
#line 4904 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 934:
#line 4906 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 935:
#line 4908 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipoint, Geometry::wkb_point)); }
    break;

  case 936:
#line 4911 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipolygon, Geometry::wkb_polygon)); }
    break;

  case 937:
#line 4914 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_point((yyvsp[-3].item),(yyvsp[-1].item))); }
    break;

  case 938:
#line 4916 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 939:
#line 4918 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 940:
#line 4920 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 941:
#line 4922 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 942:
#line 4924 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
	          Geometry::wkb_polygon, Geometry::wkb_linestring)); }
    break;

  case 943:
#line 4927 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 944:
#line 4929 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 945:
#line 4931 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 946:
#line 4933 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 947:
#line 4937 "sql_yacc.yy"
    { (yyval.num)= FT_NL;  }
    break;

  case 948:
#line 4938 "sql_yacc.yy"
    { (yyval.num)= FT_NL | FT_EXPAND; }
    break;

  case 949:
#line 4939 "sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 950:
#line 4943 "sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 951:
#line 4944 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list);}
    break;

  case 952:
#line 4948 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 953:
#line 4950 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 954:
#line 4955 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 955:
#line 4959 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 956:
#line 4966 "sql_yacc.yy"
    {
          udf_func *udf= Select->udf_list.head();
          /*
           Use Item::name as a storage for the attribute value of user
           defined function argument. It is safe to use Item::name
           because the syntax will not allow having an explicit name here.
           See WL#1017 re. udf attributes.
          */
	  if ((yyvsp[0].lex_str).str)
          {
            if (!udf)
            {
              /*
                Disallow using AS to specify explicit names for the arguments
                of stored routine calls
              */
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }

            (yyvsp[-2].item)->is_autogenerated_name= FALSE;
	    (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
          }
	  else if (udf)
	    (yyvsp[-2].item)->set_name((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), YYTHD->charset());
	  (yyval.item)= (yyvsp[-2].item);
	}
    break;

  case 957:
#line 4997 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg((yyvsp[-1].item)); }
    break;

  case 958:
#line 4999 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg_distinct((yyvsp[-1].item)); }
    break;

  case 959:
#line 5001 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_and((yyvsp[-1].item)); }
    break;

  case 960:
#line 5003 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_or((yyvsp[-1].item)); }
    break;

  case 961:
#line 5005 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_xor((yyvsp[-1].item)); }
    break;

  case 962:
#line 5007 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count(new Item_int((int32) 0L,1)); }
    break;

  case 963:
#line 5009 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count((yyvsp[-1].item)); }
    break;

  case 964:
#line 5011 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 965:
#line 5013 "sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 966:
#line 5015 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count_distinct(* (yyvsp[-2].item_list)); }
    break;

  case 967:
#line 5017 "sql_yacc.yy"
    { (yyval.item)= new Item_sum_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str),(yyvsp[-1].item)); }
    break;

  case 968:
#line 5019 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 969:
#line 5026 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 970:
#line 5028 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 971:
#line 5030 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 972:
#line 5032 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 0); }
    break;

  case 973:
#line 5034 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 0); }
    break;

  case 974:
#line 5036 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 1); }
    break;

  case 975:
#line 5038 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 1); }
    break;

  case 976:
#line 5040 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum((yyvsp[-1].item)); }
    break;

  case 977:
#line 5042 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum_distinct((yyvsp[-1].item)); }
    break;

  case 978:
#line 5044 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 979:
#line 5048 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
	    sel->in_sum_expr--;
	    (yyval.item)=new Item_func_group_concat(Lex->current_context(), (yyvsp[-5].num), (yyvsp[-3].item_list),
                                          sel->gorder_list, (yyvsp[-1].string));
	    (yyvsp[-3].item_list)->empty();
	  }
    break;

  case 980:
#line 5058 "sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              YYABORT;
            }
          }
    break;

  case 981:
#line 5066 "sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[0].item);
          }
    break;

  case 982:
#line 5073 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_set_user_var((yyvsp[-2].lex_str), (yyvsp[0].item));
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 983:
#line 5079 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_get_user_var((yyvsp[0].lex_str));
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 984:
#line 5085 "sql_yacc.yy"
    {
            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yyvsp[0].lex_str))))
              YYABORT;
          }
    break;

  case 985:
#line 5097 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 986:
#line 5098 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 987:
#line 5101 "sql_yacc.yy"
    { (yyval.string) = new (YYTHD->mem_root) String(",",1,default_charset_info); }
    break;

  case 988:
#line 5102 "sql_yacc.yy"
    { (yyval.string) = (yyvsp[0].string); }
    break;

  case 989:
#line 5107 "sql_yacc.yy"
    {
            Select->gorder_list = NULL;
	  }
    break;

  case 990:
#line 5111 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list=
	      (SQL_LIST*) sql_memdup((char*) &select->order_list,
				     sizeof(st_sql_list));
	    select->order_list.empty();
	  }
    break;

  case 991:
#line 5122 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->current_select->inc_in_sum_expr())
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 992:
#line 5131 "sql_yacc.yy"
    {
	  Select->in_sum_expr--;
	  (yyval.item)= (yyvsp[0].item);
	}
    break;

  case 993:
#line 5137 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 994:
#line 5138 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 995:
#line 5139 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 996:
#line 5140 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 997:
#line 5141 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 998:
#line 5142 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 999:
#line 5143 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1000:
#line 5144 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1001:
#line 5145 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_TIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1002:
#line 5146 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1003:
#line 5147 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1004:
#line 5151 "sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1005:
#line 5152 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list);}
    break;

  case 1006:
#line 5156 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1007:
#line 5158 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1008:
#line 5161 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1009:
#line 5162 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1010:
#line 5165 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list); }
    break;

  case 1011:
#line 5166 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[-1].item_list); }
    break;

  case 1012:
#line 5169 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1013:
#line 5171 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1014:
#line 5174 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1015:
#line 5175 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1016:
#line 5178 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1017:
#line 5179 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1018:
#line 5182 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1019:
#line 5183 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1020:
#line 5186 "sql_yacc.yy"
    { Select->when_list.push_front(new List<Item>); }
    break;

  case 1021:
#line 5188 "sql_yacc.yy"
    { (yyval.item_list)= Select->when_list.pop(); }
    break;

  case 1022:
#line 5192 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	}
    break;

  case 1023:
#line 5198 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 1024:
#line 5206 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1025:
#line 5208 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1026:
#line 5216 "sql_yacc.yy"
    { YYERROR_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
    break;

  case 1027:
#line 5221 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1028:
#line 5223 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
    break;

  case 1029:
#line 5243 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); }
    break;

  case 1030:
#line 5245 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=1; }
    break;

  case 1031:
#line 5248 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1032:
#line 5256 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1033:
#line 5263 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1034:
#line 5271 "sql_yacc.yy"
    {
            (yyvsp[-3].table_list)->straight=1;
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1035:
#line 5279 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
	  }
    break;

  case 1036:
#line 5284 "sql_yacc.yy"
    { add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1037:
#line 5286 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL);
          }
    break;

  case 1038:
#line 5294 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1039:
#line 5302 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1040:
#line 5310 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1041:
#line 5315 "sql_yacc.yy"
    { add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1042:
#line 5317 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
 	    add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL);
	    (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
	    (yyval.table_list)=(yyvsp[0].table_list);
	  }
    break;

  case 1043:
#line 5327 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1044:
#line 5335 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_on((yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1045:
#line 5344 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1046:
#line 5349 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list));
          }
    break;

  case 1047:
#line 5356 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
	    add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL);
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
	  }
    break;

  case 1048:
#line 5365 "sql_yacc.yy"
    {}
    break;

  case 1049:
#line 5366 "sql_yacc.yy"
    {}
    break;

  case 1050:
#line 5367 "sql_yacc.yy"
    {}
    break;

  case 1051:
#line 5372 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->use_index_ptr=sel->ignore_index_ptr=0;
	  sel->table_join_options= 0;
	}
    break;

  case 1052:
#line 5378 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (!((yyval.table_list)= sel->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr),
					   sel->get_table_join_options(),
					   lex->lock_option,
					   sel->get_use_index(),
					   sel->get_ignore_index())))
	    YYABORT;
          sel->add_joined_table((yyval.table_list));
	}
    break;

  case 1053:
#line 5391 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;

          }
    break;

  case 1054:
#line 5398 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            YYERROR_UNLESS((yyvsp[-8].table_list) && (yyvsp[-4].table_list));
            add_join_on((yyvsp[-4].table_list),(yyvsp[-1].item));
            Lex->pop_context();
            (yyvsp[-4].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-4].table_list);
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1055:
#line 5409 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[-2].num))
            {
	      if (sel->set_braces(1))
	      {
	        yyerror(ER(ER_SYNTAX_ERROR));
	        YYABORT;
	      }
              /* select in braces, can't contain global parameters */
	      if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[-1].select_lex)->init_nested_join(lex->thd))
              YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1056:
#line 5431 "sql_yacc.yy"
    {
          /* Use $2 instead of Lex->current_select as derived table will
             alter value of Lex->current_select. */

          if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
              !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
          {
            /* we have a derived table ($3 == NULL) but no alias,
               Since we are nested in further parentheses so we
               can pass NULL to the outer level parentheses
               Permits parsing of "((((select ...))) as xyz)" */
            (yyval.table_list)= 0;
          }
          else
          if (!(yyvsp[-3].table_list))
          {
            /* Handle case of derived table, alias may be NULL if there
               are no outer parentheses, add_table_to_list() will throw
               error in this case */
	    LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    lex->current_select= sel= unit->outer_select();
	    if (!((yyval.table_list)= sel->
                  add_table_to_list(lex->thd, new Table_ident(unit), (yyvsp[0].lex_str_ptr), 0,
				    TL_READ,(List<String> *)0,
	                            (List<String> *)0)))

	      YYABORT;
            sel->add_joined_table((yyval.table_list));
            lex->pop_context();
          }
	  else
          if ((yyvsp[-2].num) || (yyvsp[0].lex_str_ptr))
	  {
            /* simple nested joins cannot have aliases or unions */
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          else
            (yyval.table_list)= (yyvsp[-3].table_list);
	}
    break;

  case 1057:
#line 5478 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              YYABORT;
          }
    break;

  case 1058:
#line 5484 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-2].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
            }
          }
    break;

  case 1059:
#line 5500 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->derived_tables|= DERIVED_SUBQUERY;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
              mysql_new_select(lex, 1))
	    YYABORT;
	  mysql_init_select(lex);
	  lex->current_select->linkage= DERIVED_TABLE_TYPE;
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 1060:
#line 5517 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 1062:
#line 5524 "sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1063:
#line 5529 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
	    {
              /* we are not in parentheses */
              yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1064:
#line 5554 "sql_yacc.yy"
    {}
    break;

  case 1065:
#line 5555 "sql_yacc.yy"
    {}
    break;

  case 1066:
#line 5558 "sql_yacc.yy"
    {}
    break;

  case 1067:
#line 5560 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 1068:
#line 5566 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	    sel->table_join_options|= TL_OPTION_FORCE_INDEX;
	  }
    break;

  case 1069:
#line 5573 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->ignore_index= *(yyvsp[0].string_list);
	    sel->ignore_index_ptr= &sel->ignore_index;
	  }
    break;

  case 1070:
#line 5580 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 1071:
#line 5582 "sql_yacc.yy"
    { (yyval.string_list)= &Select->interval_list; }
    break;

  case 1072:
#line 5586 "sql_yacc.yy"
    {}
    break;

  case 1073:
#line 5587 "sql_yacc.yy"
    {}
    break;

  case 1074:
#line 5592 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1075:
#line 5596 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1076:
#line 5600 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String("PRIMARY", 7,
				    system_charset_info)); }
    break;

  case 1077:
#line 5606 "sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
	      YYABORT;
            (yyval.string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
	  }
    break;

  case 1078:
#line 5614 "sql_yacc.yy"
    {
            (yyvsp[-2].string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
            (yyval.string_list)= (yyvsp[-2].string_list);
	  }
    break;

  case 1079:
#line 5622 "sql_yacc.yy"
    {}
    break;

  case 1080:
#line 5623 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1081:
#line 5624 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1082:
#line 5625 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1083:
#line 5626 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1084:
#line 5627 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1085:
#line 5628 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1086:
#line 5629 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1087:
#line 5630 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MICROSECOND; }
    break;

  case 1088:
#line 5631 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1089:
#line 5632 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1090:
#line 5633 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1091:
#line 5634 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1092:
#line 5637 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1093:
#line 5638 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1094:
#line 5639 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1095:
#line 5640 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1096:
#line 5641 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1097:
#line 5642 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1098:
#line 5643 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1099:
#line 5644 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1100:
#line 5645 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1101:
#line 5649 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
    break;

  case 1102:
#line 5650 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
    break;

  case 1103:
#line 5651 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1104:
#line 5652 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1108:
#line 5661 "sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1109:
#line 5663 "sql_yacc.yy"
    { (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING)); }
    break;

  case 1112:
#line 5671 "sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1113:
#line 5673 "sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1114:
#line 5677 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
	    select->where= (yyvsp[0].item);
            select->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1116:
#line 5689 "sql_yacc.yy"
    {
	    Select->parsing_place= IN_HAVING;
          }
    break;

  case 1117:
#line 5693 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->having= (yyvsp[0].item);
	    sel->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1118:
#line 5704 "sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
    break;

  case 1119:
#line 5709 "sql_yacc.yy"
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((YYTHD->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
		 new Item_string("", 0, &my_charset_latin1) :
                 new Item_string("\\", 1, &my_charset_latin1));
          }
    break;

  case 1122:
#line 5728 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1123:
#line 5730 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1124:
#line 5733 "sql_yacc.yy"
    {}
    break;

  case 1125:
#line 5735 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= CUBE_TYPE;
	    my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
	    YYABORT;	/* To be deleted in 5.1 */
	  }
    break;

  case 1126:
#line 5748 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= ROLLUP_TYPE;
	  }
    break;

  case 1129:
#line 5770 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          SELECT_LEX *sel= lex->current_select;
          SELECT_LEX_UNIT *unit= sel-> master_unit();
	  if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
	      sel->olap != UNSPECIFIED_OLAP_TYPE)
	  {
	    my_error(ER_WRONG_USAGE, MYF(0),
                     "CUBE/ROLLUP", "ORDER BY");
	    YYABORT;
	  }
          if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
          {
            /*
              A query of the of the form (SELECT ...) ORDER BY order_list is
              executed in the same way as the query
              SELECT ... ORDER BY order_list
              unless the SELECT construct contains ORDER BY or LIMIT clauses.
              Otherwise we create a fake SELECT_LEX if it has not been created
              yet.
            */
            SELECT_LEX *first_sl= unit->first_select();
            if (!first_sl->next_select() &&
                (first_sl->order_list.elements || 
                 first_sl->select_limit) &&            
                unit->add_fake_select_lex(lex->thd))
              YYABORT;
          }
	}
    break;

  case 1131:
#line 5802 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1132:
#line 5804 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1133:
#line 5807 "sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1134:
#line 5808 "sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1135:
#line 5809 "sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1136:
#line 5814 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
          sel->offset_limit= 0;
          sel->select_limit= 0;
	}
    break;

  case 1137:
#line 5820 "sql_yacc.yy"
    {}
    break;

  case 1138:
#line 5824 "sql_yacc.yy"
    {}
    break;

  case 1139:
#line 5825 "sql_yacc.yy"
    {}
    break;

  case 1140:
#line 5829 "sql_yacc.yy"
    {}
    break;

  case 1141:
#line 5834 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1142:
#line 5841 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[0].item);
	    sel->offset_limit= (yyvsp[-2].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1143:
#line 5848 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[-2].item);
	    sel->offset_limit= (yyvsp[0].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1145:
#line 5857 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1146:
#line 5858 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1147:
#line 5859 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1148:
#line 5864 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->current_select->select_limit= 0;
	}
    break;

  case 1149:
#line 5869 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->select_limit= (yyvsp[0].item);
	  sel->explicit_limit= 1;
	}
    break;

  case 1150:
#line 5876 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1151:
#line 5877 "sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
    break;

  case 1152:
#line 5878 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1153:
#line 5879 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1154:
#line 5880 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1155:
#line 5881 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1156:
#line 5885 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1157:
#line 5886 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1158:
#line 5887 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1159:
#line 5888 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1160:
#line 5889 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1162:
#line 5895 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

            if (! lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              YYABORT;
            }

	    if (&lex->select_lex != lex->current_select)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
	      YYABORT;
	    }
	    lex->proc_list.elements=0;
	    lex->proc_list.first=0;
	    lex->proc_list.next= (byte**) &lex->proc_list.first;
	    if (add_proc_to_list(lex->thd, new Item_field(&lex->
                                                          current_select->
                                                          context,
                                                          NULL,NULL,(yyvsp[0].lex_str).str)))
	      YYABORT;
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 1164:
#line 5923 "sql_yacc.yy"
    {}
    break;

  case 1165:
#line 5924 "sql_yacc.yy"
    {}
    break;

  case 1168:
#line 5932 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (add_proc_to_list(lex->thd, (yyvsp[0].item)))
	      YYABORT;
	    if (!(yyvsp[0].item)->name)
	      (yyvsp[0].item)->set_name((yyvsp[-1].simple_string),(uint) ((char*) lex->tok_end - (yyvsp[-1].simple_string)),
                           YYTHD->charset());
	  }
    break;

  case 1169:
#line 5944 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (!lex->describe && (!(lex->result= new select_dumpvar())))
	        YYABORT;
	   }
    break;

  case 1170:
#line 5950 "sql_yacc.yy"
    {}
    break;

  case 1172:
#line 5955 "sql_yacc.yy"
    {}
    break;

  case 1173:
#line 5960 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (lex->result) 
	       ((select_dumpvar *)lex->result)->var_list.push_back( new my_var((yyvsp[0].lex_str),0,0,(enum_field_types)0));
	     else
               /*
                 The parser won't create select_result instance only
	         if it's an EXPLAIN.
               */
               DBUG_ASSERT(lex->describe);
	   }
    break;

  case 1174:
#line 5972 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     sp_variable_t *t;

	     if (!lex->spcont || !(t=lex->spcont->find_variable(&(yyvsp[0].lex_str))))
	     {
	       my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	       YYABORT;
	     }
	     if (lex->result)
             {
               my_var *var;
	       ((select_dumpvar *)lex->result)->
                 var_list.push_back(var= new my_var((yyvsp[0].lex_str),1,t->offset,t->type));
#ifndef DBUG_OFF
	       if (var)
		 var->sp= lex->sphead;
#endif
             }
	     else
	     {
               /*
                 The parser won't create select_result instance only
	         if it's an EXPLAIN.
               */
               DBUG_ASSERT(lex->describe);
	     }
	   }
    break;

  case 1175:
#line 6004 "sql_yacc.yy"
    {
          if (! Lex->parsing_options.allows_select_into)
          {
            my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
            YYABORT;
          }
	}
    break;

  case 1177:
#line 6016 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)) ||
              !(lex->result= new select_export(lex->exchange)))
            YYABORT;
	}
    break;

  case 1179:
#line 6025 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (!lex->describe)
	  {
	    lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	    if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str,1)))
	      YYABORT;
	    if (!(lex->result= new select_dump(lex->exchange)))
	      YYABORT;
	  }
	}
    break;

  case 1180:
#line 6037 "sql_yacc.yy"
    {
	  Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	}
    break;

  case 1181:
#line 6047 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DO;
	  mysql_init_select(lex);
	}
    break;

  case 1182:
#line 6053 "sql_yacc.yy"
    {
	  Lex->insert_list= (yyvsp[0].item_list);
	}
    break;

  case 1183:
#line 6064 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DROP_TABLE;
	  lex->drop_temporary= (yyvsp[-4].num);
	  lex->drop_if_exists= (yyvsp[-2].num);
	}
    break;

  case 1184:
#line 6070 "sql_yacc.yy"
    {}
    break;

  case 1185:
#line 6071 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->sql_command= SQLCOM_DROP_INDEX;
	     lex->alter_info.drop_list.empty();
	     lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
                                                                (yyvsp[-3].lex_str).str));
	     if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	  }
    break;

  case 1186:
#line 6082 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_DROP_DB;
	    lex->drop_if_exists=(yyvsp[-1].num);
	    lex->name=(yyvsp[0].lex_str).str;
	 }
    break;

  case 1187:
#line 6089 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_FUNCTION;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1188:
#line 6101 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_PROCEDURE;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1189:
#line 6113 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1190:
#line 6117 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_DROP_VIEW;
	    lex->drop_if_exists= (yyvsp[-2].num);
	  }
    break;

  case 1191:
#line 6123 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
    break;

  case 1194:
#line 6137 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1195:
#line 6144 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1196:
#line 6145 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1197:
#line 6149 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1198:
#line 6150 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1199:
#line 6158 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_INSERT;
	  lex->duplicates= DUP_ERROR; 
	  mysql_init_select(lex);
	  /* for subselects */
          lex->lock_option= (using_update_log) ? TL_READ_NO_INSERT : TL_READ;
	}
    break;

  case 1200:
#line 6167 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-2].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1201:
#line 6172 "sql_yacc.yy"
    {}
    break;

  case 1202:
#line 6177 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_REPLACE;
	  lex->duplicates= DUP_REPLACE;
	  mysql_init_select(lex);
	}
    break;

  case 1203:
#line 6184 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-1].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1204:
#line 6189 "sql_yacc.yy"
    {}
    break;

  case 1205:
#line 6194 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE :TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1206:
#line 6206 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1207:
#line 6207 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1208:
#line 6208 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1209:
#line 6212 "sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
    break;

  case 1210:
#line 6213 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1211:
#line 6216 "sql_yacc.yy"
    {}
    break;

  case 1212:
#line 6217 "sql_yacc.yy"
    {}
    break;

  case 1213:
#line 6221 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->field_list.empty();
	  lex->many_values.empty();
	  lex->insert_list=0;
	}
    break;

  case 1214:
#line 6229 "sql_yacc.yy"
    {}
    break;

  case 1215:
#line 6230 "sql_yacc.yy"
    {}
    break;

  case 1216:
#line 6231 "sql_yacc.yy"
    {}
    break;

  case 1217:
#line 6233 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!(lex->insert_list = new List_item) ||
		lex->many_values.push_back(lex->insert_list))
	      YYABORT;
	   }
    break;

  case 1219:
#line 6242 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1220:
#line 6243 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1221:
#line 6246 "sql_yacc.yy"
    {}
    break;

  case 1222:
#line 6247 "sql_yacc.yy"
    {}
    break;

  case 1223:
#line 6248 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1224:
#line 6248 "sql_yacc.yy"
    {}
    break;

  case 1225:
#line 6249 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1226:
#line 6249 "sql_yacc.yy"
    {}
    break;

  case 1231:
#line 6263 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->field_list.push_back((yyvsp[-2].item)) ||
	      lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	 }
    break;

  case 1232:
#line 6270 "sql_yacc.yy"
    {}
    break;

  case 1233:
#line 6271 "sql_yacc.yy"
    {}
    break;

  case 1234:
#line 6275 "sql_yacc.yy"
    {}
    break;

  case 1235:
#line 6276 "sql_yacc.yy"
    {}
    break;

  case 1236:
#line 6281 "sql_yacc.yy"
    {
	    if (!(Lex->insert_list = new List_item))
	      YYABORT;
	 }
    break;

  case 1237:
#line 6286 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->many_values.push_back(lex->insert_list))
	    YYABORT;
	 }
    break;

  case 1238:
#line 6293 "sql_yacc.yy"
    {}
    break;

  case 1240:
#line 6298 "sql_yacc.yy"
    {
	  if (Lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1241:
#line 6303 "sql_yacc.yy"
    {
	    if (Lex->insert_list->push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1242:
#line 6310 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item);}
    break;

  case 1243:
#line 6311 "sql_yacc.yy"
    {(yyval.item)= new Item_default_value(Lex->current_context()); }
    break;

  case 1245:
#line 6316 "sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1247:
#line 6324 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  mysql_init_select(lex);
          lex->sql_command= SQLCOM_UPDATE;
	  lex->lock_option= TL_UNLOCK; 	/* Will be set later */
	  lex->duplicates= DUP_ERROR; 
        }
    break;

  case 1248:
#line 6333 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          if (lex->select_lex.table_list.elements > 1)
            lex->sql_command= SQLCOM_UPDATE_MULTI;
	  else if (lex->select_lex.get_table_list()->derived)
	  {
	    /* it is single table update and it is update of derived table */
	    my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                     lex->select_lex.get_table_list()->alias, "UPDATE");
	    YYABORT;
	  }
          /*
            In case of multi-update setting write lock for all tables may
            be too pessimistic. We will decrease lock level if possible in
            mysql_multi_update().
          */
          Select->set_lock_for_tables((yyvsp[-4].lock_type));
	}
    break;

  case 1249:
#line 6351 "sql_yacc.yy"
    {}
    break;

  case 1252:
#line 6360 "sql_yacc.yy"
    {
	  if (add_item_to_list(YYTHD, (yyvsp[-2].item)) || add_value_to_list(YYTHD, (yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1255:
#line 6371 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->update_list.push_back((yyvsp[-2].item)) || 
	      lex->value_list.push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1256:
#line 6379 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1257:
#line 6380 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1258:
#line 6386 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_DELETE;
	  mysql_init_select(lex);
	  lex->lock_option= lex->thd->update_lock_default;
	  lex->ignore= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1259:
#line 6394 "sql_yacc.yy"
    {}
    break;

  case 1260:
#line 6399 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
					 Lex->lock_option))
	    YYABORT;
	}
    break;

  case 1261:
#line 6405 "sql_yacc.yy"
    {}
    break;

  case 1262:
#line 6407 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1263:
#line 6409 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1264:
#line 6414 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1265:
#line 6416 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1266:
#line 6423 "sql_yacc.yy"
    {}
    break;

  case 1267:
#line 6424 "sql_yacc.yy"
    {}
    break;

  case 1268:
#line 6428 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, new Table_ident((yyvsp[-2].lex_str)), (yyvsp[0].lex_str_ptr),
					 TL_OPTION_UPDATING | 
                                         TL_OPTION_ALIAS, Lex->lock_option))
	    YYABORT;
        }
    break;

  case 1269:
#line 6435 "sql_yacc.yy"
    {
	    if (!Select->add_table_to_list(YYTHD,
					   new Table_ident(YYTHD, (yyvsp[-4].lex_str), (yyvsp[-2].lex_str), 0),
					   (yyvsp[0].lex_str_ptr), 
                                           TL_OPTION_UPDATING | 
                                           TL_OPTION_ALIAS,
					   Lex->lock_option))
	      YYABORT;
	  }
    break;

  case 1270:
#line 6447 "sql_yacc.yy"
    {}
    break;

  case 1271:
#line 6448 "sql_yacc.yy"
    {}
    break;

  case 1272:
#line 6452 "sql_yacc.yy"
    {}
    break;

  case 1273:
#line 6453 "sql_yacc.yy"
    {}
    break;

  case 1274:
#line 6456 "sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1275:
#line 6457 "sql_yacc.yy"
    { Lex->lock_option= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1276:
#line 6458 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1277:
#line 6462 "sql_yacc.yy"
    {
	  LEX* lex= Lex;
	  lex->sql_command= SQLCOM_TRUNCATE;
	  lex->select_lex.options= 0;
          lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
	  lex->select_lex.init_order();
	}
    break;

  case 1280:
#line 6478 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->wild=0;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	}
    break;

  case 1281:
#line 6487 "sql_yacc.yy"
    {}
    break;

  case 1282:
#line 6492 "sql_yacc.yy"
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           lex->orig_sql_command= SQLCOM_SHOW_DATABASES;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
             YYABORT;
         }
    break;

  case 1283:
#line 6500 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               YYABORT;
           }
    break;

  case 1284:
#line 6509 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               YYABORT;
           }
    break;

  case 1285:
#line 6518 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               YYABORT;
           }
    break;

  case 1286:
#line 6527 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_OPEN_TABLES;
	    lex->select_lex.db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              YYABORT;
	  }
    break;

  case 1287:
#line 6536 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); }
    break;

  case 1289:
#line 6539 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SELECT;
	    lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
	    if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_COLUMNS))
	      YYABORT;
	  }
    break;

  case 1290:
#line 6552 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_NEW_MASTER;
	    Lex->mi.log_file_name = (yyvsp[-8].lex_str).str;
	    Lex->mi.pos = (yyvsp[-4].ulonglong_number);
	    Lex->mi.server_id = (yyvsp[0].ulong_num);
          }
    break;

  case 1291:
#line 6559 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1292:
#line 6563 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1293:
#line 6567 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1295:
#line 6572 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_KEYS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_STATISTICS))
              YYABORT;
	  }
    break;

  case 1296:
#line 6582 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_COLUMN_TYPES;
	  }
    break;

  case 1297:
#line 6587 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	    WARN_DEPRECATED("SHOW TABLE TYPES", "SHOW [STORAGE] ENGINES");
	  }
    break;

  case 1298:
#line 6593 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	  }
    break;

  case 1299:
#line 6598 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
	  }
    break;

  case 1300:
#line 6603 "sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1301:
#line 6605 "sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1302:
#line 6607 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1303:
#line 6609 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1304:
#line 6611 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              YYABORT;
	  }
    break;

  case 1305:
#line 6620 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS; WARN_DEPRECATED("SHOW INNODB STATUS", "SHOW ENGINE INNODB STATUS"); }
    break;

  case 1306:
#line 6622 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_MUTEX_STATUS; }
    break;

  case 1307:
#line 6624 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1308:
#line 6626 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              YYABORT;
	  }
    break;

  case 1309:
#line 6635 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              YYABORT;
          }
    break;

  case 1310:
#line 6643 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              YYABORT;
          }
    break;

  case 1311:
#line 6651 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW BDB LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1312:
#line 6653 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1313:
#line 6655 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              YYABORT;
            bzero(curr_user, sizeof(st_lex_user));
	    lex->grant_user= curr_user;
	  }
    break;

  case 1314:
#line 6665 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    lex->grant_user=(yyvsp[0].lex_user);
	    lex->grant_user->password=null_lex_str;
	  }
    break;

  case 1315:
#line 6672 "sql_yacc.yy"
    {
	    Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
	    Lex->create_info.options=(yyvsp[-1].num);
	    Lex->name=(yyvsp[0].lex_str).str;
	  }
    break;

  case 1316:
#line 6678 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
	      YYABORT;
            lex->only_view= 0;
	  }
    break;

  case 1317:
#line 6686 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
	      YYABORT;
            lex->only_view= 1;
	  }
    break;

  case 1318:
#line 6694 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1319:
#line 6698 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1320:
#line 6702 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1321:
#line 6709 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1322:
#line 6716 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_PROC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1323:
#line 6726 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_FUNC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1324:
#line 6736 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1325:
#line 6746 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1326:
#line 6759 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_NDBCLUSTER:
	      Lex->sql_command = SQLCOM_SHOW_NDBCLUSTER_STATUS;
	      break;
	    case DB_TYPE_INNODB:
	      Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "STATUS");
	      YYABORT;
	    }
	  }
    break;

  case 1327:
#line 6773 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_BERKELEY_DB:
	      Lex->sql_command = SQLCOM_SHOW_LOGS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "LOGS");
	      YYABORT;
	    }
	  }
    break;

  case 1332:
#line 6793 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1333:
#line 6794 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 1334:
#line 6797 "sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1335:
#line 6798 "sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1338:
#line 6805 "sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1339:
#line 6806 "sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
    break;

  case 1340:
#line 6809 "sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1341:
#line 6810 "sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
    break;

  case 1343:
#line 6815 "sql_yacc.yy"
    { Lex->wild=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   system_charset_info); }
    break;

  case 1344:
#line 6818 "sql_yacc.yy"
    {
          Select->where= (yyvsp[0].item);
          if ((yyvsp[0].item))
            (yyvsp[0].item)->top_level_item();
        }
    break;

  case 1345:
#line 6829 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
          lex->sql_command= SQLCOM_SELECT;
          lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
          lex->select_lex.db= 0;
          lex->verbose= 0;
          if (prepare_schema_table(YYTHD, lex, (yyvsp[0].table), SCH_COLUMNS))
	    YYABORT;
	}
    break;

  case 1346:
#line 6841 "sql_yacc.yy"
    {}
    break;

  case 1347:
#line 6843 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1348:
#line 6845 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.options|= SELECT_DESCRIBE;
	  }
    break;

  case 1351:
#line 6856 "sql_yacc.yy"
    {}
    break;

  case 1352:
#line 6857 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1353:
#line 6861 "sql_yacc.yy"
    {}
    break;

  case 1354:
#line 6862 "sql_yacc.yy"
    { Lex->wild= (yyvsp[0].string); }
    break;

  case 1355:
#line 6864 "sql_yacc.yy"
    { Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info); }
    break;

  case 1356:
#line 6871 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_FLUSH;
          lex->type= 0;
          lex->no_write_to_binlog= (yyvsp[0].num);
	}
    break;

  case 1357:
#line 6878 "sql_yacc.yy"
    {}
    break;

  case 1360:
#line 6886 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES; }
    break;

  case 1361:
#line 6886 "sql_yacc.yy"
    {}
    break;

  case 1362:
#line 6887 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK; }
    break;

  case 1363:
#line 6888 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1364:
#line 6889 "sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1365:
#line 6890 "sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1366:
#line 6891 "sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1367:
#line 6892 "sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1368:
#line 6893 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1369:
#line 6894 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1370:
#line 6895 "sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1371:
#line 6896 "sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1372:
#line 6899 "sql_yacc.yy"
    {;}
    break;

  case 1373:
#line 6900 "sql_yacc.yy"
    {;}
    break;

  case 1374:
#line 6904 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RESET; lex->type=0;
	}
    break;

  case 1375:
#line 6908 "sql_yacc.yy"
    {}
    break;

  case 1378:
#line 6916 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1379:
#line 6917 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1380:
#line 6918 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1381:
#line 6922 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->type=0;
	}
    break;

  case 1382:
#line 6926 "sql_yacc.yy"
    {}
    break;

  case 1384:
#line 6935 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_PURGE;
	   Lex->to_log = (yyvsp[0].lex_str).str;
        }
    break;

  case 1385:
#line 6940 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	  lex->sql_command= SQLCOM_PURGE_BEFORE;
	}
    break;

  case 1386:
#line 6951 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_KILL; }
    break;

  case 1387:
#line 6952 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	}
    break;

  case 1388:
#line 6959 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1389:
#line 6960 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1390:
#line 6961 "sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1391:
#line 6967 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_CHANGE_DB;
	  lex->select_lex.db= (yyvsp[0].lex_str).str;
	}
    break;

  case 1392:
#line 6976 "sql_yacc.yy"
    {
          LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD DATA");
	    YYABORT;
	  }
          lex->fname_start= lex->ptr;
        }
    break;

  case 1393:
#line 6986 "sql_yacc.yy"
    {}
    break;

  case 1394:
#line 6989 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD TABLE");
	    YYABORT;
	  }
          lex->sql_command = SQLCOM_LOAD_MASTER_TABLE;
          WARN_DEPRECATED("LOAD TABLE FROM MASTER",
                          "mysqldump or future "
                          "BACKUP/RESTORE DATABASE facility");
          if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, TL_OPTION_UPDATING))
            YYABORT;
        }
    break;

  case 1395:
#line 7006 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_LOAD;
	  lex->lock_option= (yyvsp[-3].lock_type);
	  lex->local_file=  (yyvsp[-2].num);
	  lex->duplicates= DUP_ERROR;
	  lex->ignore= 0;
	  if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)))
	    YYABORT;
        }
    break;

  case 1396:
#line 7017 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fname_end= lex->ptr;
	}
    break;

  case 1397:
#line 7022 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                         lex->lock_option))
            YYABORT;
          lex->field_list.empty();
          lex->update_list.empty();
          lex->value_list.empty();
        }
    break;

  case 1398:
#line 7033 "sql_yacc.yy"
    {}
    break;

  case 1399:
#line 7036 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_LOAD_MASTER_DATA;
          WARN_DEPRECATED("LOAD DATA FROM MASTER",
                          "mysqldump or future "
                          "BACKUP/RESTORE DATABASE facility");
        }
    break;

  case 1400:
#line 7044 "sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1401:
#line 7045 "sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1402:
#line 7048 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1403:
#line 7050 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= YYTHD->update_lock_default;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1404:
#line 7061 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1405:
#line 7065 "sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1406:
#line 7066 "sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1407:
#line 7067 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1412:
#line 7079 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
    break;

  case 1413:
#line 7084 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
	  }
    break;

  case 1414:
#line 7091 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
    break;

  case 1415:
#line 7096 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
    break;

  case 1420:
#line 7111 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
    break;

  case 1421:
#line 7116 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
    break;

  case 1423:
#line 7124 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
    break;

  case 1424:
#line 7130 "sql_yacc.yy"
    { }
    break;

  case 1425:
#line 7131 "sql_yacc.yy"
    { }
    break;

  case 1426:
#line 7132 "sql_yacc.yy"
    { }
    break;

  case 1427:
#line 7136 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1428:
#line 7138 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1429:
#line 7142 "sql_yacc.yy"
    {(yyval.item)= (yyvsp[0].item);}
    break;

  case 1430:
#line 7144 "sql_yacc.yy"
    { (yyval.item)= new Item_user_var_as_out_param((yyvsp[0].lex_str)); }
    break;

  case 1431:
#line 7148 "sql_yacc.yy"
    { }
    break;

  case 1432:
#line 7149 "sql_yacc.yy"
    { }
    break;

  case 1433:
#line 7156 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,thd->variables.collation_connection);
	}
    break;

  case 1434:
#line 7161 "sql_yacc.yy"
    { (yyval.item)=  new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,national_charset_info); }
    break;

  case 1435:
#line 7163 "sql_yacc.yy"
    { (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,Lex->underscore_charset); }
    break;

  case 1436:
#line 7165 "sql_yacc.yy"
    { ((Item_string*) (yyvsp[-1].item))->append((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length); }
    break;

  case 1437:
#line 7170 "sql_yacc.yy"
    { (yyval.string)=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,YYTHD->variables.collation_connection); }
    break;

  case 1438:
#line 7172 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	  }
    break;

  case 1439:
#line 7183 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ? tmp->quick_fix_field(), tmp->val_str((String*) 0) :
		      (String*) 0;
          }
    break;

  case 1440:
#line 7196 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
	  LEX *lex= thd->lex;
          Item_param *item;
          if (! lex->parsing_options.allows_variable)
          {
            my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
            YYABORT;
          }
          item= new Item_param((uint) (lex->tok_start - (uchar *) thd->query));
          if (!((yyval.item)= item) || lex->param_list.push_back(item))
          {
            my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
            YYABORT;
          }
        }
    break;

  case 1441:
#line 7215 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1442:
#line 7216 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1443:
#line 7218 "sql_yacc.yy"
    {
	    (yyvsp[0].item_num)->max_length++;
	    (yyval.item)= (yyvsp[0].item_num)->neg();
	  }
    break;

  case 1444:
#line 7226 "sql_yacc.yy"
    { (yyval.item) =	(yyvsp[0].item); }
    break;

  case 1445:
#line 7227 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1446:
#line 7228 "sql_yacc.yy"
    { (yyval.item) =	new Item_null();
			  Lex->next_state=MY_LEX_OPERATOR_OR_IDENT;}
    break;

  case 1447:
#line 7230 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "FALSE",0,1); }
    break;

  case 1448:
#line 7231 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "TRUE",1,1); }
    break;

  case 1449:
#line 7232 "sql_yacc.yy"
    { (yyval.item) =	new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);}
    break;

  case 1450:
#line 7233 "sql_yacc.yy"
    { (yyval.item)= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1451:
#line 7235 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->underscore_charset);
	  }
    break;

  case 1452:
#line 7249 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
          }
    break;

  case 1453:
#line 7262 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1454:
#line 7263 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1455:
#line 7264 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1456:
#line 7267 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1457:
#line 7268 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1458:
#line 7269 "sql_yacc.yy"
    { (yyval.item_num) =	new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1459:
#line 7271 "sql_yacc.yy"
    {
           (yyval.item_num)= new Item_decimal((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYTHD->charset());
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1460:
#line 7279 "sql_yacc.yy"
    {
	   (yyval.item_num) =	new Item_float((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1461:
#line 7293 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1462:
#line 7294 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1463:
#line 7298 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, "*");
	  sel->with_wild++;
	}
    break;

  case 1464:
#line 7304 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), (YYTHD->client_capabilities &
                             CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                             (yyvsp[-2].lex_str).str,"*");
	  sel->with_wild++;
	}
    break;

  case 1465:
#line 7314 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1466:
#line 7318 "sql_yacc.yy"
    {
	  sp_variable_t *spv;
	  LEX *lex = Lex;
          sp_pcontext *spc = lex->spcont;
	  if (spc && (spv = spc->find_variable(&(yyvsp[0].lex_str))))
	  {
            /* We're compiling a stored procedure and found a variable */
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              YYABORT;
            }

            Item_splocal *splocal;
            splocal= new Item_splocal((yyvsp[0].lex_str), spv->offset, spv->type,
                                      lex->tok_start_prev - 
                                      lex->sphead->m_tmp_query);
#ifndef DBUG_OFF
            if (splocal)
              splocal->m_sp= lex->sphead;
#endif
	    (yyval.item) = (Item*) splocal;
	    lex->safe_to_cache_query=0;
	  }
	  else
	  {
	    SELECT_LEX *sel=Select;
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
                 (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	         (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	  }
        }
    break;

  case 1467:
#line 7351 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1468:
#line 7356 "sql_yacc.yy"
    {
	  SELECT_LEX *sel=Select;
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
              (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	}
    break;

  case 1469:
#line 7363 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1470:
#line 7368 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;

          /*
            FIXME This will work ok in simple_ident_nospvar case because
            we can't meet simple_ident_nospvar in trigger now. But it
            should be changed in future.
          */
          if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
              (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
               !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
          {
            Item_trigger_field *trg_fld;
            bool new_row= ((yyvsp[-2].lex_str).str[0]=='N' || (yyvsp[-2].lex_str).str[0]=='n');

            if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                !new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
              YYABORT;
            }

            if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
              YYABORT;
            }

            DBUG_ASSERT(!new_row ||
                        (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                         lex->trg_chistics.event == TRG_EVENT_UPDATE));
            const bool read_only=
              !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  new_row ?
                                                  Item_trigger_field::NEW_ROW:
                                                  Item_trigger_field::OLD_ROW,
                                                  (yyvsp[0].lex_str).str,
                                                  SELECT_ACL,
                                                  read_only)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field objects
              in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
              (byte**)&trg_fld->next_trg_field);

            (yyval.item)= (Item *)trg_fld;
          }
          else
          {
	    SELECT_LEX *sel= lex->current_select;
	    if (sel->no_table_names_allowed)
	    {
	      my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	    }
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
	        (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	        (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
        }
    break;

  case 1471:
#line 7436 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
              (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1472:
#line 7451 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(),
                                     (YYTHD->client_capabilities &
				      CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
				     (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(),
                                   (YYTHD->client_capabilities &
				    CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                                   (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1473:
#line 7474 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1474:
#line 7476 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_str).str);
              YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1475:
#line 7492 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1476:
#line 7501 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1477:
#line 7504 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str)); }
    break;

  case 1478:
#line 7505 "sql_yacc.yy"
    { (yyval.table)=new Table_ident(YYTHD, (yyvsp[-2].lex_str),(yyvsp[0].lex_str),0);}
    break;

  case 1479:
#line 7506 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str));}
    break;

  case 1480:
#line 7510 "sql_yacc.yy"
    { LEX_STRING db={(char*) any_db,3}; (yyval.table)=new Table_ident(YYTHD, db,(yyvsp[0].lex_str),0); }
    break;

  case 1481:
#line 7514 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 1482:
#line 7516 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                   (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, (yyvsp[0].lex_str).str + wlen);
                YYABORT;
              }
	      (yyval.lex_str)= (yyvsp[0].lex_str);
            }
	    else
	      thd->convert_string(&(yyval.lex_str), system_charset_info,
				  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	  }
    break;

  case 1483:
#line 7541 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_system_charset)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), system_charset_info,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1484:
#line 7553 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_collation_connection)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1485:
#line 7566 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_character_set_filesystem)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.character_set_filesystem,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1486:
#line 7577 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1487:
#line 7579 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1488:
#line 7587 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1489:
#line 7589 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1490:
#line 7597 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1491:
#line 7598 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1492:
#line 7599 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1493:
#line 7603 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	    YYABORT;
	  (yyval.lex_user)->user = (yyvsp[0].lex_str);
	  (yyval.lex_user)->host.str= (char *) "%";
	  (yyval.lex_user)->host.length= 1;

	  if (check_string_length(&(yyval.lex_user)->user,
                                  ER(ER_USERNAME), USERNAME_LENGTH))
	    YYABORT;
	}
    break;

  case 1494:
#line 7616 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	      YYABORT;
	    (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

	    if (check_string_length(&(yyval.lex_user)->user,
                                    ER(ER_USERNAME), USERNAME_LENGTH) ||
	        check_string_length(&(yyval.lex_user)->host,
                                    ER(ER_HOSTNAME), HOSTNAME_LENGTH))
	      YYABORT;
	  }
    break;

  case 1495:
#line 7629 "sql_yacc.yy"
    {
          if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
            YYABORT;
          /* 
            empty LEX_USER means current_user and 
            will be handled in the  get_current_user() function
            later
          */
          bzero((yyval.lex_user), sizeof(LEX_USER));
	}
    break;

  case 1496:
#line 7642 "sql_yacc.yy"
    {}
    break;

  case 1497:
#line 7643 "sql_yacc.yy"
    {}
    break;

  case 1498:
#line 7644 "sql_yacc.yy"
    {}
    break;

  case 1499:
#line 7645 "sql_yacc.yy"
    {}
    break;

  case 1500:
#line 7646 "sql_yacc.yy"
    {}
    break;

  case 1501:
#line 7647 "sql_yacc.yy"
    {}
    break;

  case 1502:
#line 7648 "sql_yacc.yy"
    {}
    break;

  case 1503:
#line 7649 "sql_yacc.yy"
    {}
    break;

  case 1504:
#line 7650 "sql_yacc.yy"
    {}
    break;

  case 1505:
#line 7651 "sql_yacc.yy"
    {}
    break;

  case 1506:
#line 7652 "sql_yacc.yy"
    {}
    break;

  case 1507:
#line 7653 "sql_yacc.yy"
    {}
    break;

  case 1508:
#line 7654 "sql_yacc.yy"
    {}
    break;

  case 1509:
#line 7655 "sql_yacc.yy"
    {}
    break;

  case 1510:
#line 7656 "sql_yacc.yy"
    {}
    break;

  case 1511:
#line 7657 "sql_yacc.yy"
    {}
    break;

  case 1512:
#line 7658 "sql_yacc.yy"
    {}
    break;

  case 1513:
#line 7659 "sql_yacc.yy"
    {}
    break;

  case 1514:
#line 7660 "sql_yacc.yy"
    {}
    break;

  case 1515:
#line 7661 "sql_yacc.yy"
    {}
    break;

  case 1516:
#line 7662 "sql_yacc.yy"
    {}
    break;

  case 1517:
#line 7663 "sql_yacc.yy"
    {}
    break;

  case 1518:
#line 7664 "sql_yacc.yy"
    {}
    break;

  case 1519:
#line 7665 "sql_yacc.yy"
    {}
    break;

  case 1520:
#line 7666 "sql_yacc.yy"
    {}
    break;

  case 1521:
#line 7667 "sql_yacc.yy"
    {}
    break;

  case 1522:
#line 7668 "sql_yacc.yy"
    {}
    break;

  case 1523:
#line 7669 "sql_yacc.yy"
    {}
    break;

  case 1524:
#line 7670 "sql_yacc.yy"
    {}
    break;

  case 1525:
#line 7671 "sql_yacc.yy"
    {}
    break;

  case 1526:
#line 7672 "sql_yacc.yy"
    {}
    break;

  case 1527:
#line 7673 "sql_yacc.yy"
    {}
    break;

  case 1528:
#line 7674 "sql_yacc.yy"
    {}
    break;

  case 1529:
#line 7675 "sql_yacc.yy"
    {}
    break;

  case 1530:
#line 7676 "sql_yacc.yy"
    {}
    break;

  case 1531:
#line 7677 "sql_yacc.yy"
    {}
    break;

  case 1532:
#line 7678 "sql_yacc.yy"
    {}
    break;

  case 1533:
#line 7688 "sql_yacc.yy"
    {}
    break;

  case 1534:
#line 7689 "sql_yacc.yy"
    {}
    break;

  case 1535:
#line 7690 "sql_yacc.yy"
    {}
    break;

  case 1536:
#line 7691 "sql_yacc.yy"
    {}
    break;

  case 1537:
#line 7692 "sql_yacc.yy"
    {}
    break;

  case 1538:
#line 7693 "sql_yacc.yy"
    {}
    break;

  case 1539:
#line 7694 "sql_yacc.yy"
    {}
    break;

  case 1540:
#line 7695 "sql_yacc.yy"
    {}
    break;

  case 1541:
#line 7696 "sql_yacc.yy"
    {}
    break;

  case 1542:
#line 7697 "sql_yacc.yy"
    {}
    break;

  case 1543:
#line 7698 "sql_yacc.yy"
    {}
    break;

  case 1544:
#line 7699 "sql_yacc.yy"
    {}
    break;

  case 1545:
#line 7700 "sql_yacc.yy"
    {}
    break;

  case 1546:
#line 7701 "sql_yacc.yy"
    {}
    break;

  case 1547:
#line 7702 "sql_yacc.yy"
    {}
    break;

  case 1548:
#line 7703 "sql_yacc.yy"
    {}
    break;

  case 1549:
#line 7704 "sql_yacc.yy"
    {}
    break;

  case 1550:
#line 7705 "sql_yacc.yy"
    {}
    break;

  case 1551:
#line 7706 "sql_yacc.yy"
    {}
    break;

  case 1552:
#line 7707 "sql_yacc.yy"
    {}
    break;

  case 1553:
#line 7708 "sql_yacc.yy"
    {}
    break;

  case 1554:
#line 7709 "sql_yacc.yy"
    {}
    break;

  case 1555:
#line 7710 "sql_yacc.yy"
    {}
    break;

  case 1556:
#line 7711 "sql_yacc.yy"
    {}
    break;

  case 1557:
#line 7712 "sql_yacc.yy"
    {}
    break;

  case 1558:
#line 7713 "sql_yacc.yy"
    {}
    break;

  case 1559:
#line 7714 "sql_yacc.yy"
    {}
    break;

  case 1560:
#line 7715 "sql_yacc.yy"
    {}
    break;

  case 1561:
#line 7716 "sql_yacc.yy"
    {}
    break;

  case 1562:
#line 7717 "sql_yacc.yy"
    {}
    break;

  case 1563:
#line 7718 "sql_yacc.yy"
    {}
    break;

  case 1564:
#line 7719 "sql_yacc.yy"
    {}
    break;

  case 1565:
#line 7720 "sql_yacc.yy"
    {}
    break;

  case 1566:
#line 7721 "sql_yacc.yy"
    {}
    break;

  case 1567:
#line 7722 "sql_yacc.yy"
    {}
    break;

  case 1568:
#line 7723 "sql_yacc.yy"
    {}
    break;

  case 1569:
#line 7724 "sql_yacc.yy"
    {}
    break;

  case 1570:
#line 7725 "sql_yacc.yy"
    {}
    break;

  case 1571:
#line 7726 "sql_yacc.yy"
    {}
    break;

  case 1572:
#line 7727 "sql_yacc.yy"
    {}
    break;

  case 1573:
#line 7728 "sql_yacc.yy"
    {}
    break;

  case 1574:
#line 7729 "sql_yacc.yy"
    {}
    break;

  case 1575:
#line 7730 "sql_yacc.yy"
    {}
    break;

  case 1576:
#line 7731 "sql_yacc.yy"
    {}
    break;

  case 1577:
#line 7732 "sql_yacc.yy"
    {}
    break;

  case 1578:
#line 7733 "sql_yacc.yy"
    {}
    break;

  case 1579:
#line 7734 "sql_yacc.yy"
    {}
    break;

  case 1580:
#line 7735 "sql_yacc.yy"
    {}
    break;

  case 1581:
#line 7736 "sql_yacc.yy"
    {}
    break;

  case 1582:
#line 7737 "sql_yacc.yy"
    {}
    break;

  case 1583:
#line 7738 "sql_yacc.yy"
    {}
    break;

  case 1584:
#line 7739 "sql_yacc.yy"
    {}
    break;

  case 1585:
#line 7740 "sql_yacc.yy"
    {}
    break;

  case 1586:
#line 7741 "sql_yacc.yy"
    {}
    break;

  case 1587:
#line 7742 "sql_yacc.yy"
    {}
    break;

  case 1588:
#line 7743 "sql_yacc.yy"
    {}
    break;

  case 1589:
#line 7744 "sql_yacc.yy"
    {}
    break;

  case 1590:
#line 7745 "sql_yacc.yy"
    {}
    break;

  case 1591:
#line 7746 "sql_yacc.yy"
    {}
    break;

  case 1592:
#line 7747 "sql_yacc.yy"
    {}
    break;

  case 1593:
#line 7748 "sql_yacc.yy"
    {}
    break;

  case 1594:
#line 7749 "sql_yacc.yy"
    {}
    break;

  case 1595:
#line 7750 "sql_yacc.yy"
    {}
    break;

  case 1596:
#line 7751 "sql_yacc.yy"
    {}
    break;

  case 1597:
#line 7752 "sql_yacc.yy"
    {}
    break;

  case 1598:
#line 7753 "sql_yacc.yy"
    {}
    break;

  case 1599:
#line 7754 "sql_yacc.yy"
    {}
    break;

  case 1600:
#line 7755 "sql_yacc.yy"
    {}
    break;

  case 1601:
#line 7756 "sql_yacc.yy"
    {}
    break;

  case 1602:
#line 7757 "sql_yacc.yy"
    {}
    break;

  case 1603:
#line 7758 "sql_yacc.yy"
    {}
    break;

  case 1604:
#line 7759 "sql_yacc.yy"
    {}
    break;

  case 1605:
#line 7760 "sql_yacc.yy"
    {}
    break;

  case 1606:
#line 7761 "sql_yacc.yy"
    {}
    break;

  case 1607:
#line 7762 "sql_yacc.yy"
    {}
    break;

  case 1608:
#line 7763 "sql_yacc.yy"
    {}
    break;

  case 1609:
#line 7764 "sql_yacc.yy"
    {}
    break;

  case 1610:
#line 7765 "sql_yacc.yy"
    {}
    break;

  case 1611:
#line 7766 "sql_yacc.yy"
    {}
    break;

  case 1612:
#line 7767 "sql_yacc.yy"
    {}
    break;

  case 1613:
#line 7768 "sql_yacc.yy"
    {}
    break;

  case 1614:
#line 7769 "sql_yacc.yy"
    {}
    break;

  case 1615:
#line 7770 "sql_yacc.yy"
    {}
    break;

  case 1616:
#line 7771 "sql_yacc.yy"
    {}
    break;

  case 1617:
#line 7772 "sql_yacc.yy"
    {}
    break;

  case 1618:
#line 7773 "sql_yacc.yy"
    {}
    break;

  case 1619:
#line 7774 "sql_yacc.yy"
    {}
    break;

  case 1620:
#line 7775 "sql_yacc.yy"
    {}
    break;

  case 1621:
#line 7776 "sql_yacc.yy"
    {}
    break;

  case 1622:
#line 7777 "sql_yacc.yy"
    {}
    break;

  case 1623:
#line 7778 "sql_yacc.yy"
    {}
    break;

  case 1624:
#line 7779 "sql_yacc.yy"
    {}
    break;

  case 1625:
#line 7780 "sql_yacc.yy"
    {}
    break;

  case 1626:
#line 7781 "sql_yacc.yy"
    {}
    break;

  case 1627:
#line 7782 "sql_yacc.yy"
    {}
    break;

  case 1628:
#line 7783 "sql_yacc.yy"
    {}
    break;

  case 1629:
#line 7784 "sql_yacc.yy"
    {}
    break;

  case 1630:
#line 7785 "sql_yacc.yy"
    {}
    break;

  case 1631:
#line 7786 "sql_yacc.yy"
    {}
    break;

  case 1632:
#line 7787 "sql_yacc.yy"
    {}
    break;

  case 1633:
#line 7788 "sql_yacc.yy"
    {}
    break;

  case 1634:
#line 7789 "sql_yacc.yy"
    {}
    break;

  case 1635:
#line 7790 "sql_yacc.yy"
    {}
    break;

  case 1636:
#line 7791 "sql_yacc.yy"
    {}
    break;

  case 1637:
#line 7792 "sql_yacc.yy"
    {}
    break;

  case 1638:
#line 7793 "sql_yacc.yy"
    {}
    break;

  case 1639:
#line 7794 "sql_yacc.yy"
    {}
    break;

  case 1640:
#line 7795 "sql_yacc.yy"
    {}
    break;

  case 1641:
#line 7796 "sql_yacc.yy"
    {}
    break;

  case 1642:
#line 7797 "sql_yacc.yy"
    {}
    break;

  case 1643:
#line 7798 "sql_yacc.yy"
    {}
    break;

  case 1644:
#line 7799 "sql_yacc.yy"
    {}
    break;

  case 1645:
#line 7800 "sql_yacc.yy"
    {}
    break;

  case 1646:
#line 7801 "sql_yacc.yy"
    {}
    break;

  case 1647:
#line 7802 "sql_yacc.yy"
    {}
    break;

  case 1648:
#line 7803 "sql_yacc.yy"
    {}
    break;

  case 1649:
#line 7804 "sql_yacc.yy"
    {}
    break;

  case 1650:
#line 7805 "sql_yacc.yy"
    {}
    break;

  case 1651:
#line 7806 "sql_yacc.yy"
    {}
    break;

  case 1652:
#line 7807 "sql_yacc.yy"
    {}
    break;

  case 1653:
#line 7808 "sql_yacc.yy"
    {}
    break;

  case 1654:
#line 7809 "sql_yacc.yy"
    {}
    break;

  case 1655:
#line 7810 "sql_yacc.yy"
    {}
    break;

  case 1656:
#line 7811 "sql_yacc.yy"
    {}
    break;

  case 1657:
#line 7812 "sql_yacc.yy"
    {}
    break;

  case 1658:
#line 7813 "sql_yacc.yy"
    {}
    break;

  case 1659:
#line 7814 "sql_yacc.yy"
    {}
    break;

  case 1660:
#line 7815 "sql_yacc.yy"
    {}
    break;

  case 1661:
#line 7816 "sql_yacc.yy"
    {}
    break;

  case 1662:
#line 7817 "sql_yacc.yy"
    {}
    break;

  case 1663:
#line 7818 "sql_yacc.yy"
    {}
    break;

  case 1664:
#line 7819 "sql_yacc.yy"
    {}
    break;

  case 1665:
#line 7820 "sql_yacc.yy"
    {}
    break;

  case 1666:
#line 7821 "sql_yacc.yy"
    {}
    break;

  case 1667:
#line 7822 "sql_yacc.yy"
    {}
    break;

  case 1668:
#line 7823 "sql_yacc.yy"
    {}
    break;

  case 1669:
#line 7824 "sql_yacc.yy"
    {}
    break;

  case 1670:
#line 7825 "sql_yacc.yy"
    {}
    break;

  case 1671:
#line 7826 "sql_yacc.yy"
    {}
    break;

  case 1672:
#line 7827 "sql_yacc.yy"
    {}
    break;

  case 1673:
#line 7828 "sql_yacc.yy"
    {}
    break;

  case 1674:
#line 7829 "sql_yacc.yy"
    {}
    break;

  case 1675:
#line 7830 "sql_yacc.yy"
    {}
    break;

  case 1676:
#line 7831 "sql_yacc.yy"
    {}
    break;

  case 1677:
#line 7832 "sql_yacc.yy"
    {}
    break;

  case 1678:
#line 7833 "sql_yacc.yy"
    {}
    break;

  case 1679:
#line 7834 "sql_yacc.yy"
    {}
    break;

  case 1680:
#line 7835 "sql_yacc.yy"
    {}
    break;

  case 1681:
#line 7836 "sql_yacc.yy"
    {}
    break;

  case 1682:
#line 7837 "sql_yacc.yy"
    {}
    break;

  case 1683:
#line 7838 "sql_yacc.yy"
    {}
    break;

  case 1684:
#line 7839 "sql_yacc.yy"
    {}
    break;

  case 1685:
#line 7840 "sql_yacc.yy"
    {}
    break;

  case 1686:
#line 7841 "sql_yacc.yy"
    {}
    break;

  case 1687:
#line 7842 "sql_yacc.yy"
    {}
    break;

  case 1688:
#line 7843 "sql_yacc.yy"
    {}
    break;

  case 1689:
#line 7844 "sql_yacc.yy"
    {}
    break;

  case 1690:
#line 7845 "sql_yacc.yy"
    {}
    break;

  case 1691:
#line 7846 "sql_yacc.yy"
    {}
    break;

  case 1692:
#line 7847 "sql_yacc.yy"
    {}
    break;

  case 1693:
#line 7848 "sql_yacc.yy"
    {}
    break;

  case 1694:
#line 7849 "sql_yacc.yy"
    {}
    break;

  case 1695:
#line 7850 "sql_yacc.yy"
    {}
    break;

  case 1696:
#line 7851 "sql_yacc.yy"
    {}
    break;

  case 1697:
#line 7852 "sql_yacc.yy"
    {}
    break;

  case 1698:
#line 7853 "sql_yacc.yy"
    {}
    break;

  case 1699:
#line 7854 "sql_yacc.yy"
    {}
    break;

  case 1700:
#line 7855 "sql_yacc.yy"
    {}
    break;

  case 1701:
#line 7856 "sql_yacc.yy"
    {}
    break;

  case 1702:
#line 7857 "sql_yacc.yy"
    {}
    break;

  case 1703:
#line 7858 "sql_yacc.yy"
    {}
    break;

  case 1704:
#line 7859 "sql_yacc.yy"
    {}
    break;

  case 1705:
#line 7860 "sql_yacc.yy"
    {}
    break;

  case 1706:
#line 7861 "sql_yacc.yy"
    {}
    break;

  case 1707:
#line 7862 "sql_yacc.yy"
    {}
    break;

  case 1708:
#line 7863 "sql_yacc.yy"
    {}
    break;

  case 1709:
#line 7864 "sql_yacc.yy"
    {}
    break;

  case 1710:
#line 7865 "sql_yacc.yy"
    {}
    break;

  case 1711:
#line 7866 "sql_yacc.yy"
    {}
    break;

  case 1712:
#line 7867 "sql_yacc.yy"
    {}
    break;

  case 1713:
#line 7868 "sql_yacc.yy"
    {}
    break;

  case 1714:
#line 7869 "sql_yacc.yy"
    {}
    break;

  case 1715:
#line 7870 "sql_yacc.yy"
    {}
    break;

  case 1716:
#line 7871 "sql_yacc.yy"
    {}
    break;

  case 1717:
#line 7872 "sql_yacc.yy"
    {}
    break;

  case 1718:
#line 7873 "sql_yacc.yy"
    {}
    break;

  case 1719:
#line 7874 "sql_yacc.yy"
    {}
    break;

  case 1720:
#line 7875 "sql_yacc.yy"
    {}
    break;

  case 1721:
#line 7876 "sql_yacc.yy"
    {}
    break;

  case 1722:
#line 7877 "sql_yacc.yy"
    {}
    break;

  case 1723:
#line 7878 "sql_yacc.yy"
    {}
    break;

  case 1724:
#line 7879 "sql_yacc.yy"
    {}
    break;

  case 1725:
#line 7880 "sql_yacc.yy"
    {}
    break;

  case 1726:
#line 7881 "sql_yacc.yy"
    {}
    break;

  case 1727:
#line 7882 "sql_yacc.yy"
    {}
    break;

  case 1728:
#line 7883 "sql_yacc.yy"
    {}
    break;

  case 1729:
#line 7884 "sql_yacc.yy"
    {}
    break;

  case 1730:
#line 7885 "sql_yacc.yy"
    {}
    break;

  case 1731:
#line 7886 "sql_yacc.yy"
    {}
    break;

  case 1732:
#line 7887 "sql_yacc.yy"
    {}
    break;

  case 1733:
#line 7888 "sql_yacc.yy"
    {}
    break;

  case 1734:
#line 7889 "sql_yacc.yy"
    {}
    break;

  case 1735:
#line 7890 "sql_yacc.yy"
    {}
    break;

  case 1736:
#line 7891 "sql_yacc.yy"
    {}
    break;

  case 1737:
#line 7892 "sql_yacc.yy"
    {}
    break;

  case 1738:
#line 7893 "sql_yacc.yy"
    {}
    break;

  case 1739:
#line 7894 "sql_yacc.yy"
    {}
    break;

  case 1740:
#line 7895 "sql_yacc.yy"
    {}
    break;

  case 1741:
#line 7896 "sql_yacc.yy"
    {}
    break;

  case 1742:
#line 7897 "sql_yacc.yy"
    {}
    break;

  case 1743:
#line 7898 "sql_yacc.yy"
    {}
    break;

  case 1744:
#line 7899 "sql_yacc.yy"
    {}
    break;

  case 1745:
#line 7906 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SET_OPTION;
	  mysql_init_select(lex);
	  lex->option_type=OPT_SESSION;
	  lex->var_list.empty();
          lex->one_shot_set= 0;
	}
    break;

  case 1746:
#line 7915 "sql_yacc.yy"
    {}
    break;

  case 1747:
#line 7919 "sql_yacc.yy"
    {}
    break;

  case 1748:
#line 7920 "sql_yacc.yy"
    {}
    break;

  case 1751:
#line 7927 "sql_yacc.yy"
    {
          if (Lex->sphead)
          {
            /*
              If we are in SP we want have own LEX for each assignment.
              This is mostly because it is hard for several sp_instr_set
              and sp_instr_set_trigger instructions share one LEX.
              (Well, it is theoretically possible but adds some extra
               overhead on preparation for execution stage and IMO less
               robust).

              QQ: May be we should simply prohibit group assignments in SP?
            */
            LEX *lex;
            Lex->sphead->reset_lex(YYTHD);
            lex= Lex;

            /* Set new LEX as if we at start of set rule. */
	    lex->sql_command= SQLCOM_SET_OPTION;
	    mysql_init_select(lex);
	    lex->option_type=OPT_SESSION;
	    lex->var_list.empty();
            lex->one_shot_set= 0;
	    lex->sphead->m_tmp_query= lex->tok_start;
          }
        }
    break;

  case 1752:
#line 7954 "sql_yacc.yy"
    {
          LEX *lex= Lex;

          if (lex->sphead)
          {
            sp_head *sp= lex->sphead;

	    if (!lex->var_list.is_empty())
	    {
              /*
                We have assignment to user or system variable or
                option setting, so we should construct sp_instr_stmt
                for it.
              */
              LEX_STRING qbuff;
	      sp_instr_stmt *i;

              if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                         lex)))
                YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                qbuff.length= lex->ptr - sp->m_tmp_query;
              else
                qbuff.length= lex->tok_end - sp->m_tmp_query;

              if (!(qbuff.str= alloc_root(YYTHD->mem_root, qbuff.length + 5)))
                YYABORT;

              strmake(strmake(qbuff.str, "SET ", 4), (char *)sp->m_tmp_query,
                      qbuff.length);
              qbuff.length+= 4;
              i->m_query= qbuff;
              sp->add_instr(i);
            }
            lex->sphead->restore_lex(YYTHD);
          }
        }
    break;

  case 1753:
#line 7999 "sql_yacc.yy"
    {}
    break;

  case 1754:
#line 8000 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1755:
#line 8001 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1756:
#line 8002 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1757:
#line 8006 "sql_yacc.yy"
    { (yyval.num)= OPT_DEFAULT; }
    break;

  case 1758:
#line 8007 "sql_yacc.yy"
    { Lex->one_shot_set= 1; (yyval.num)= OPT_SESSION; }
    break;

  case 1759:
#line 8011 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1760:
#line 8012 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1761:
#line 8013 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1762:
#line 8014 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1763:
#line 8018 "sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 1764:
#line 8019 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1765:
#line 8020 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1766:
#line 8021 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1769:
#line 8030 "sql_yacc.yy"
    {
          LEX *lex=Lex;

          if ((yyvsp[-2].variable).var == &trg_new_row_fake_var)
          {
            /* We are in trigger and assigning value to field of new row */
            Item *it;
            Item_trigger_field *trg_fld;
            sp_instr_set_trigger_field *sp_fld;
	    LINT_INIT(sp_fld);
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else
            {
              /* QQ: Shouldn't this be field's default value ? */
              it= new Item_null();
            }

            DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
                        (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                         lex->trg_chistics.event == TRG_EVENT_UPDATE));
            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  Item_trigger_field::NEW_ROW,
                                                  (yyvsp[-2].variable).base_name.str,
                                                  UPDATE_ACL, FALSE)) ||
                !(sp_fld= new sp_instr_set_trigger_field(lex->sphead->
                          	                         instructions(),
                                	                 lex->spcont,
							 trg_fld,
                                        	         it, lex)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field
              objects in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
                                    (byte **)&trg_fld->next_trg_field);

            lex->sphead->add_instr(sp_fld);
          }
          else if ((yyvsp[-2].variable).var)
          { /* System variable */
            if ((yyvsp[-3].var_type))
              lex->option_type= (yyvsp[-3].var_type);
            lex->var_list.push_back(new set_var(lex->option_type, (yyvsp[-2].variable).var,
                                    &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
          }
          else
          {
            /* An SP local variable */
            sp_pcontext *ctx= lex->spcont;
            sp_variable_t *spv;
            sp_instr_set *sp_set;
            Item *it;
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }

            spv= ctx->find_variable(&(yyvsp[-2].variable).base_name);

            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else if (spv->dflt)
              it= spv->dflt;
            else
              it= new Item_null();
            sp_set= new sp_instr_set(lex->sphead->instructions(), ctx,
                                     spv->offset, it, spv->type, lex, TRUE);
            lex->sphead->add_instr(sp_set);
          }
        }
    break;

  case 1770:
#line 8110 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if ((yyvsp[-4].var_type))
            lex->option_type= (yyvsp[-4].var_type);
	  lex->var_list.push_back(new set_var(lex->option_type,
                                              find_sys_var("tx_isolation"),
                                              &null_lex_str,
                                              new Item_int((int32) (yyvsp[0].tx_isolation))));
	}
    break;

  case 1771:
#line 8123 "sql_yacc.yy"
    {
          Lex->var_list.push_back(new set_var_user(new Item_func_set_user_var((yyvsp[-2].lex_str),(yyvsp[0].item))));
	}
    break;

  case 1772:
#line 8127 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->var_list.push_back(new set_var((yyvsp[-3].var_type), (yyvsp[-2].variable).var, &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
	  }
    break;

  case 1773:
#line 8132 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= Lex;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),thd->variables.collation_database,(yyvsp[0].charset)));
	}
    break;

  case 1774:
#line 8139 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING names;

	    names.str= (char *)"names";
	    names.length= 5;
	    if (spc && spc->find_variable(&names))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              yyerror(ER(ER_SYNTAX_ERROR));

	    YYABORT;
	  }
    break;

  case 1775:
#line 8154 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  (yyvsp[-1].charset)= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	  if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	  {
	    my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                     (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	    YYABORT;
	  }
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),(yyvsp[0].charset),(yyvsp[0].charset)));
	}
    break;

  case 1776:
#line 8167 "sql_yacc.yy"
    {
	    THD *thd=YYTHD;
	    LEX_USER *user;
	    LEX *lex= Lex;	    
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING pw;

	    pw.str= (char *)"password";
	    pw.length= 8;
	    if (spc && spc->find_variable(&pw))
	    {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
	      YYABORT;
	    }
	    if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
	      YYABORT;
	    user->host=null_lex_str;
	    user->user.str=thd->security_ctx->priv_user;
	    thd->lex->var_list.push_back(new set_var_password(user, (yyvsp[0].simple_string)));
	  }
    break;

  case 1777:
#line 8188 "sql_yacc.yy"
    {
	    Lex->var_list.push_back(new set_var_password((yyvsp[-2].lex_user),(yyvsp[0].simple_string)));
	  }
    break;

  case 1778:
#line 8195 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          sp_pcontext *spc= lex->spcont;
	  sp_variable_t *spv;

	  /* We have to lookup here since local vars can shadow sysvars */
	  if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	  {
            /* Not an SP local variable */
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name= null_lex_str;
            /*
              If this is time_zone variable we should open time zone
              describing tables 
            */
            if (tmp == &sys_time_zone &&
                lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
            else if (spc && tmp == &sys_autocommit)
            {
              /*
                We don't allow setting AUTOCOMMIT from a stored function
		or trigger.
              */
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            }
	  }
	  else
	  {
            /* An SP local variable */
	    (yyval.variable).var= NULL;
	    (yyval.variable).base_name= (yyvsp[0].lex_str);
	  }
	}
    break;

  case 1779:
#line 8233 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[-2].lex_str)))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              if ((yyvsp[-2].lex_str).str[0]=='O' || (yyvsp[-2].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= &trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
              if (!tmp)
                YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[-2].lex_str);
            }
	  }
    break;

  case 1780:
#line 8276 "sql_yacc.yy"
    {
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    if (!tmp->is_struct())
	      my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name.str=    (char*) "default";
	    (yyval.variable).base_name.length= 7;
	  }
    break;

  case 1781:
#line 8289 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 1782:
#line 8290 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 1783:
#line 8291 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 1784:
#line 8292 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 1785:
#line 8296 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str;}
    break;

  case 1786:
#line 8298 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? YYTHD->variables.old_passwords ?
	        Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	        Item_func_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 1787:
#line 8305 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 1788:
#line 8313 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1789:
#line 8314 "sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 1790:
#line 8315 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ON",  2, system_charset_info); }
    break;

  case 1791:
#line 8316 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ALL", 3, system_charset_info); }
    break;

  case 1792:
#line 8317 "sql_yacc.yy"
    { (yyval.item)=new Item_string("binary", 6, system_charset_info); }
    break;

  case 1793:
#line 8325 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_LOCK_TABLES;
	}
    break;

  case 1794:
#line 8336 "sql_yacc.yy"
    {}
    break;

  case 1799:
#line 8349 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, (thr_lock_type) (yyvsp[0].num)))
	   YYABORT;
	}
    break;

  case 1800:
#line 8356 "sql_yacc.yy"
    { (yyval.num)=TL_READ_NO_INSERT; }
    break;

  case 1801:
#line 8357 "sql_yacc.yy"
    { (yyval.num)=YYTHD->update_lock_default; }
    break;

  case 1802:
#line 8358 "sql_yacc.yy"
    { (yyval.num)=TL_WRITE_LOW_PRIORITY; }
    break;

  case 1803:
#line 8359 "sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 1804:
#line 8364 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_UNLOCK_TABLES;
	}
    break;

  case 1805:
#line 8375 "sql_yacc.yy"
    {}
    break;

  case 1806:
#line 8385 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_OPEN;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
	    YYABORT;
	}
    break;

  case 1807:
#line 8397 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_CLOSE;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
	}
    break;

  case 1808:
#line 8409 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_READ;
	  lex->ha_rkey_mode= HA_READ_KEY_EXACT;	/* Avoid purify warnings */
	  lex->current_select->select_limit= new Item_int((int32) 1);
	  lex->current_select->offset_limit= 0;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
        }
    break;

  case 1809:
#line 8423 "sql_yacc.yy"
    {}
    break;

  case 1810:
#line 8427 "sql_yacc.yy"
    { Lex->ident= null_lex_str; }
    break;

  case 1811:
#line 8428 "sql_yacc.yy"
    { Lex->ident= (yyvsp[-1].lex_str); }
    break;

  case 1812:
#line 8432 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1813:
#line 8433 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1814:
#line 8437 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1815:
#line 8438 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1816:
#line 8439 "sql_yacc.yy"
    { Lex->ha_read_mode = RPREV;  }
    break;

  case 1817:
#line 8440 "sql_yacc.yy"
    { Lex->ha_read_mode = RLAST;  }
    break;

  case 1818:
#line 8442 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->ha_read_mode = RKEY;
	  lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
	  if (!(lex->insert_list = new List_item))
	    YYABORT;
	}
    break;

  case 1819:
#line 8448 "sql_yacc.yy"
    { }
    break;

  case 1820:
#line 8452 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 1821:
#line 8453 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 1822:
#line 8454 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 1823:
#line 8455 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 1824:
#line 8456 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 1825:
#line 8463 "sql_yacc.yy"
    {}
    break;

  case 1826:
#line 8468 "sql_yacc.yy"
    {
          LEX *lex= Lex;
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= 0;
        }
    break;

  case 1827:
#line 8475 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_FUNCTION;
          
        }
    break;

  case 1828:
#line 8488 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1829:
#line 8500 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_REVOKE_ALL;
	}
    break;

  case 1830:
#line 8507 "sql_yacc.yy"
    {}
    break;

  case 1831:
#line 8513 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_GRANT;
          lex->type= 0;
        }
    break;

  case 1832:
#line 8521 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_FUNCTION;
        }
    break;

  case 1833:
#line 8534 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1836:
#line 8551 "sql_yacc.yy"
    { }
    break;

  case 1837:
#line 8553 "sql_yacc.yy"
    { 
          Lex->all_privileges= 1; 
          Lex->grant= GLOBAL_ACLS;
        }
    break;

  case 1842:
#line 8569 "sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 1843:
#line 8569 "sql_yacc.yy"
    {}
    break;

  case 1844:
#line 8570 "sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 1845:
#line 8570 "sql_yacc.yy"
    {}
    break;

  case 1846:
#line 8571 "sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 1847:
#line 8571 "sql_yacc.yy"
    {}
    break;

  case 1848:
#line 8572 "sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 1849:
#line 8572 "sql_yacc.yy"
    {}
    break;

  case 1850:
#line 8573 "sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 1851:
#line 8574 "sql_yacc.yy"
    {}
    break;

  case 1852:
#line 8575 "sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 1853:
#line 8576 "sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 1854:
#line 8577 "sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 1855:
#line 8578 "sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 1856:
#line 8579 "sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 1857:
#line 8580 "sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 1858:
#line 8581 "sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 1859:
#line 8582 "sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 1860:
#line 8583 "sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 1861:
#line 8584 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1862:
#line 8585 "sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 1863:
#line 8586 "sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 1864:
#line 8587 "sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 1865:
#line 8588 "sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 1866:
#line 8589 "sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 1867:
#line 8590 "sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 1868:
#line 8591 "sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 1869:
#line 8592 "sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 1870:
#line 8593 "sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 1871:
#line 8594 "sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 1872:
#line 8595 "sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 1873:
#line 8600 "sql_yacc.yy"
    {}
    break;

  case 1874:
#line 8601 "sql_yacc.yy"
    {}
    break;

  case 1877:
#line 8611 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_subject)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
	    YYABORT;
	  }
	  lex->x509_subject=(yyvsp[0].lex_str).str;
	}
    break;

  case 1878:
#line 8621 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_issuer)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
	    YYABORT;
	  }
	  lex->x509_issuer=(yyvsp[0].lex_str).str;
	}
    break;

  case 1879:
#line 8631 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->ssl_cipher)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
	    YYABORT;
	  }
	  lex->ssl_cipher=(yyvsp[0].lex_str).str;
	}
    break;

  case 1880:
#line 8644 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            THD *thd= lex->thd;
            if (thd->copy_db_to(&lex->current_select->db, NULL))
              YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1881:
#line 8659 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = (yyvsp[-2].lex_str).str;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1882:
#line 8672 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = NULL;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1883:
#line 8685 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,0))
	      YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant =  TABLE_ACLS & ~GRANT_ACL;
	  }
    break;

  case 1884:
#line 8696 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 1885:
#line 8698 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 1886:
#line 8706 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 1887:
#line 8708 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 1888:
#line 8717 "sql_yacc.yy"
    {
	   (yyval.lex_user)=(yyvsp[-3].lex_user); (yyvsp[-3].lex_user)->password=(yyvsp[0].lex_str);
	   if ((yyvsp[0].lex_str).length)
	   {
             if (YYTHD->variables.old_passwords)
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
               if (buff)
                 make_scrambled_password_323(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
             }
             else
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
               if (buff)
                 make_scrambled_password(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
             }
	  }
	}
    break;

  case 1889:
#line 8742 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[-4].lex_user); (yyvsp[-4].lex_user)->password= (yyvsp[0].lex_str); }
    break;

  case 1890:
#line 8744 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[0].lex_user); (yyvsp[0].lex_user)->password= null_lex_str; }
    break;

  case 1891:
#line 8750 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->grant |= lex->which_columns;
	}
    break;

  case 1895:
#line 8762 "sql_yacc.yy"
    {
	  String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info);
	  List_iterator <LEX_COLUMN> iter(Lex->columns);
	  class LEX_COLUMN *point;
	  LEX *lex=Lex;
	  while ((point=iter++))
	  {
	    if (!my_strcasecmp(system_charset_info,
                               point->column.ptr(), new_str->ptr()))
		break;
	  }
	  lex->grant_tot_col|= lex->which_columns;
	  if (point)
	    point->rights |= lex->which_columns;
	  else
	    lex->columns.push_back(new LEX_COLUMN (*new_str,lex->which_columns));
	}
    break;

  case 1897:
#line 8784 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 1898:
#line 8788 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 1899:
#line 8792 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 1900:
#line 8796 "sql_yacc.yy"
    {
	    Lex->ssl_type=SSL_TYPE_NONE;
	  }
    break;

  case 1901:
#line 8802 "sql_yacc.yy"
    {}
    break;

  case 1903:
#line 8806 "sql_yacc.yy"
    {}
    break;

  case 1904:
#line 8807 "sql_yacc.yy"
    {}
    break;

  case 1905:
#line 8811 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1906:
#line 8813 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.questions=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
	}
    break;

  case 1907:
#line 8819 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.updates=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
	}
    break;

  case 1908:
#line 8825 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
	}
    break;

  case 1909:
#line 8831 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->mqh.user_conn= (yyvsp[0].ulong_num);
          lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
	}
    break;

  case 1910:
#line 8840 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->sql_command = SQLCOM_BEGIN;
          lex->start_transaction_opt= 0;
        }
    break;

  case 1911:
#line 8845 "sql_yacc.yy"
    {}
    break;

  case 1912:
#line 8849 "sql_yacc.yy"
    {}
    break;

  case 1913:
#line 8850 "sql_yacc.yy"
    {}
    break;

  case 1914:
#line 8854 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 1); }
    break;

  case 1915:
#line 8855 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1916:
#line 8856 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1917:
#line 8860 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 2); }
    break;

  case 1918:
#line 8861 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1919:
#line 8862 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1920:
#line 8866 "sql_yacc.yy"
    {}
    break;

  case 1921:
#line 8867 "sql_yacc.yy"
    {}
    break;

  case 1922:
#line 8872 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_COMMIT;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 1923:
#line 8882 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 1924:
#line 8890 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1925:
#line 8899 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1926:
#line 8908 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1927:
#line 8921 "sql_yacc.yy"
    {}
    break;

  case 1929:
#line 8927 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->exchange)
	  {
	    /* Only the last SELECT can have  INTO...... */
	    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          /* This counter shouldn't be incremented for UNION parts */
          Lex->nest_level--;
	  if (mysql_new_select(lex, 0))
	    YYABORT;
          mysql_init_select(lex);
	  lex->current_select->linkage=UNION_TYPE;
          if ((yyvsp[0].num)) /* UNION DISTINCT - remember position */
            lex->current_select->master_unit()->union_distinct=
                                                      lex->current_select;
	}
    break;

  case 1930:
#line 8951 "sql_yacc.yy"
    {
          /*
	    Remove from the name resolution context stack the context of the
            last select in the union.
	  */
          Lex->pop_context();
        }
    break;

  case 1931:
#line 8961 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1932:
#line 8962 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1933:
#line 8963 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1934:
#line 8967 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
	    SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    SELECT_LEX *fake= unit->fake_select_lex;
	    if (fake)
	    {
	      unit->global_parameters= fake;
	      fake->no_table_names_allowed= 1;
	      lex->current_select= fake;
	    }
	    thd->where= "global ORDER clause";
	  }
    break;

  case 1935:
#line 8983 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    thd->lex->current_select->no_table_names_allowed= 0;
	    thd->where= "";
          }
    break;

  case 1938:
#line 8996 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1939:
#line 8997 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1940:
#line 8998 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1941:
#line 9003 "sql_yacc.yy"
    {
          (yyval.select_lex)= (yyvsp[-1].select_lex);
        }
    break;

  case 1942:
#line 9007 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    THD *thd= YYTHD;
            /*
              note that a local variable can't be used for
              $3 as it's used in local variable construction
              and some compilers can't guarnatee the order
              in which the local variables are initialized.
            */
            List_iterator<Item> it((yyvsp[-1].select_lex)->item_list);
            Item *item;
            /*
              we must fill the items list for the "derived table".
            */
            while ((item= it++))
              add_item_to_list(thd, item);
          }
    break;

  case 1943:
#line 9024 "sql_yacc.yy"
    { (yyval.select_lex)= (yyvsp[-4].select_lex); }
    break;

  case 1944:
#line 9028 "sql_yacc.yy"
    {
    (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
  }
    break;

  case 1945:
#line 9033 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          /* 
            we are making a "derived table" for the parenthesis
            as we need to have a lex level to fit the union 
            after the parenthesis, e.g. 
            (SELECT .. ) UNION ...  becomes 
            SELECT * FROM ((SELECT ...) UNION ...)
          */
	  if (mysql_new_select(Lex, 1))
	    YYABORT;
	}
    break;

  case 1946:
#line 9053 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->pop_context();
          SELECT_LEX *child= lex->current_select;
	  lex->current_select = lex->current_select->return_after_parsing();
          lex->nest_level--;
          lex->current_select->n_child_sum_items += child->n_sum_items;
	}
    break;

  case 1947:
#line 9070 "sql_yacc.yy"
    {}
    break;

  case 1948:
#line 9072 "sql_yacc.yy"
    {}
    break;

  case 1949:
#line 9077 "sql_yacc.yy"
    {}
    break;

  case 1950:
#line 9079 "sql_yacc.yy"
    {}
    break;

  case 1951:
#line 9081 "sql_yacc.yy"
    {}
    break;

  case 1952:
#line 9092 "sql_yacc.yy"
    {
          /*
            We have to distinguish missing DEFINER-clause from case when
            CURRENT_USER specified as definer explicitly in order to properly
            handle CREATE TRIGGER statements which come to replication thread
            from older master servers (i.e. to create non-suid trigger in this
            case).
           */
          YYTHD->lex->definer= 0;
	}
    break;

  case 1953:
#line 9103 "sql_yacc.yy"
    {
	  YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
	}
    break;

  case 1954:
#line 9116 "sql_yacc.yy"
    {}
    break;

  case 1955:
#line 9118 "sql_yacc.yy"
    {}
    break;

  case 1956:
#line 9120 "sql_yacc.yy"
    {}
    break;

  case 1957:
#line 9125 "sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 1958:
#line 9130 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1959:
#line 9132 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 1960:
#line 9134 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 1961:
#line 9139 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1962:
#line 9141 "sql_yacc.yy"
    {}
    break;

  case 1963:
#line 9146 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 1964:
#line 9148 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 1965:
#line 9150 "sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 1966:
#line 9155 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_CREATE_VIEW;
	  /* first table in list is target VIEW name */
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1967:
#line 9164 "sql_yacc.yy"
    {}
    break;

  case 1968:
#line 9169 "sql_yacc.yy"
    {}
    break;

  case 1970:
#line 9175 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 1971:
#line 9180 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 1972:
#line 9187 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->parsing_options.allows_variable= FALSE;
          lex->parsing_options.allows_select_into= FALSE;
          lex->parsing_options.allows_select_procedure= FALSE;
          lex->parsing_options.allows_derived= FALSE;
        }
    break;

  case 1973:
#line 9195 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->parsing_options.allows_variable= TRUE;
          lex->parsing_options.allows_select_into= TRUE;
          lex->parsing_options.allows_select_procedure= TRUE;
          lex->parsing_options.allows_derived= TRUE;
        }
    break;

  case 1974:
#line 9206 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-1].simple_string) - stmt_beg;
	}
    break;

  case 1975:
#line 9215 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-3].simple_string) - stmt_beg;
	}
    break;

  case 1976:
#line 9227 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 1977:
#line 9229 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1978:
#line 9231 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1979:
#line 9233 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 1980:
#line 9245 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;
	 
	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
	    YYABORT;
	  }
	
	  if (!(sp= new sp_head()))
	    YYABORT;
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);
          sp->init_sp_name(YYTHD, (yyvsp[-9].spname));
	
	  lex->stmt_definition_begin= (yyvsp[-10].simple_string);
          lex->ident.str= (yyvsp[-5].simple_string);
          lex->ident.length= (yyvsp[-2].simple_string) - (yyvsp[-5].simple_string);

	  sp->m_type= TYPE_ENUM_TRIGGER;
	  lex->sphead= sp;
	  lex->spname= (yyvsp[-9].spname);
	  /*
	    We have to turn of CLIENT_MULTI_QUERIES while parsing a
	    stored procedure, otherwise yylex will chop it into pieces
	    at each ';'.
	  */
	  sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	  
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->ptr;
          while (my_isspace(system_charset_info, lex->sphead->m_body_begin[0]))
            ++lex->sphead->m_body_begin;
	}
    break;

  case 1981:
#line 9283 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;
	  
	  lex->sql_command= SQLCOM_CREATE_TRIGGER;
	  sp->init_strings(YYTHD, lex);
	  /* Restore flag if it was cleared above */
	  if (sp->m_old_cmq)
	    YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	  sp->restore_thd_mem_root(YYTHD);
	
	  if (sp->is_not_allowed_in_function("trigger"))
	      YYABORT;
	
	  /*
	    We have to do it after parsing trigger body, because some of
	    sp_proc_stmt alternatives are not saving/restoring LEX, so
	    lex->query_tables can be wiped out.
	  */
	  if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[-6].table),
	                                         (LEX_STRING*) 0,
	                                         TL_OPTION_UPDATING,
                                                 TL_IGNORE))
	    YYABORT;
	}
    break;

  case 1982:
#line 9318 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->udf.type= (yyvsp[-3].udf_type);
	  lex->stmt_definition_begin= (yyvsp[-2].simple_string);
	  lex->spname= (yyvsp[0].spname);
	}
    break;

  case 1983:
#line 9325 "sql_yacc.yy"
    {}
    break;

  case 1984:
#line 9327 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
	    YYABORT;
	  }

	  lex->stmt_definition_begin= (yyvsp[-1].simple_string);

	  /* Order is important here: new - reset - init */
	  sp= new sp_head();
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);
          sp->init_sp_name(YYTHD, (yyvsp[0].spname));

	  sp->m_type= TYPE_ENUM_PROCEDURE;
	  lex->sphead= sp;
	  /*
	   * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	   * stored procedure, otherwise yylex will chop it into pieces
	   * at each ';'.
	   */
	  sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= (~CLIENT_MULTI_QUERIES);
	}
    break;

  case 1985:
#line 9356 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_begin= lex->tok_start+1;
	}
    break;

  case 1986:
#line 9363 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_end= lex->tok_start;
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	}
    break;

  case 1987:
#line 9370 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->tok_start;
	}
    break;

  case 1988:
#line 9377 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;

	  sp->init_strings(YYTHD, lex);
	  lex->sql_command= SQLCOM_CREATE_PROCEDURE;
	  /* Restore flag if it was cleared above */
	  if (sp->m_old_cmq)
	    YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	  sp->restore_thd_mem_root(YYTHD);
	}
    break;

  case 1989:
#line 9393 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_START;
      }
    break;

  case 1990:
#line 9397 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_END;
      }
    break;

  case 1991:
#line 9401 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_PREPARE;
      }
    break;

  case 1992:
#line 9405 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_COMMIT;
      }
    break;

  case 1993:
#line 9409 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_ROLLBACK;
      }
    break;

  case 1994:
#line 9413 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_RECOVER;
      }
    break;

  case 1995:
#line 9419 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
     }
    break;

  case 1996:
#line 9426 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
     }
    break;

  case 1997:
#line 9433 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
     }
    break;

  case 1998:
#line 9441 "sql_yacc.yy"
    {}
    break;

  case 1999:
#line 9442 "sql_yacc.yy"
    {}
    break;

  case 2000:
#line 9446 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2001:
#line 9447 "sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2002:
#line 9448 "sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2003:
#line 9452 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2004:
#line 9453 "sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2005:
#line 9457 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2006:
#line 9458 "sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2008:
#line 9463 "sql_yacc.yy"
    { }
    break;

  case 2009:
#line 9464 "sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;


    }

/* Line 1037 of yacc.c.  */
#line 27061 "sql_yacc.cc"

  yyvsp -= yylen;
  yyssp -= yylen;


  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (YYPACT_NINF < yyn && yyn < YYLAST)
	{
	  YYSIZE_T yysize = 0;
	  int yytype = YYTRANSLATE (yychar);
	  const char* yyprefix;
	  char *yymsg;
	  int yyx;

	  /* Start YYX at -YYN if negative to avoid negative indexes in
	     YYCHECK.  */
	  int yyxbegin = yyn < 0 ? -yyn : 0;

	  /* Stay within bounds of both yycheck and yytname.  */
	  int yychecklim = YYLAST - yyn;
	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
	  int yycount = 0;

	  yyprefix = ", expecting ";
	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	      {
		yysize += yystrlen (yyprefix) + yystrlen (yytname [yyx]);
		yycount += 1;
		if (yycount == 5)
		  {
		    yysize = 0;
		    break;
		  }
	      }
	  yysize += (sizeof ("syntax error, unexpected ")
		     + yystrlen (yytname[yytype]));
	  yymsg = (char *) YYSTACK_ALLOC (yysize);
	  if (yymsg != 0)
	    {
	      char *yyp = yystpcpy (yymsg, "syntax error, unexpected ");
	      yyp = yystpcpy (yyp, yytname[yytype]);

	      if (yycount < 5)
		{
		  yyprefix = ", expecting ";
		  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
		    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
		      {
			yyp = yystpcpy (yyp, yyprefix);
			yyp = yystpcpy (yyp, yytname[yyx]);
			yyprefix = " or ";
		      }
		}
	      yyerror (yymsg);
	      YYSTACK_FREE (yymsg);
	    }
	  else
	    yyerror ("syntax error; also virtual memory exhausted");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror ("syntax error");
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* If at end of input, pop the error token,
	     then the rest of the stack, then return failure.  */
	  if (yychar == YYEOF)
	     for (;;)
	       {

		 YYPOPSTACK;
		 if (yyssp == yyss)
		   YYABORT;
		 yydestruct ("Error: popping",
                             yystos[*yyssp], yyvsp);
	       }
        }
      else
	{
	  yydestruct ("Error: discarding", yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

#ifdef __GNUC__
  /* Pacify GCC when the user code never invokes YYERROR and the label
     yyerrorlab therefore never appears in user code.  */
  if (0)
     goto yyerrorlab;
#endif

yyvsp -= yylen;
  yyssp -= yylen;
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping", yystos[yystate], yyvsp);
      YYPOPSTACK;
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token. */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yydestruct ("Error: discarding lookahead",
              yytoken, &yylval);
  yychar = YYEMPTY;
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*----------------------------------------------.
| yyoverflowlab -- parser overflow comes here.  |
`----------------------------------------------*/
yyoverflowlab:
  yyerror ("parser stack overflow");
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
  return yyresult;
}




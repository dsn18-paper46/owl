==28957== Helgrind, a thread error detector
==28957== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==28957== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28957== Command: ./wrapper.sh
==28957== 
==28959== Helgrind, a thread error detector
==28959== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==28959== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28959== Command: /usr/bin/touch cmd
==28959== 
==28959== 
==28959== For counts of detected and suppressed errors, rerun with: -v
==28959== Use --history-level=approx or =none to gain increased speed, at
==28959== the cost of reduced accuracy of conflicting-access information
==28959== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==28960== 
==28960== For counts of detected and suppressed errors, rerun with: -v
==28960== Use --history-level=approx or =none to gain increased speed, at
==28960== the cost of reduced accuracy of conflicting-access information
==28960== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==28961== Helgrind, a thread error detector
==28961== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==28961== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28961== Command: ./toy_bypass
==28961== 
==28961== ---Thread-Announcement------------------------------------------
==28961== 
==28961== Thread #3 was created
==28961==    at 0x4165BD5: clone (clone.S:100)
==28961==    by 0x40641CD: do_clone.constprop.2 (createthread.c:75)
==28961==    by 0x406558D: create_thread (createthread.c:245)
==28961==    by 0x406558D: pthread_create@@GLIBC_2.1 (pthread_create.c:611)
==28961==    by 0x402FA62: pthread_create_WRK (hg_intercepts.c:427)
==28961==    by 0x4030686: pthread_create@* (hg_intercepts.c:460)
==28961==    by 0x804861A: main (toy_bypass.c:29)
==28961== 
==28961== ---Thread-Announcement------------------------------------------
==28961== 
==28961== Thread #2 was created
==28961==    at 0x4165BD5: clone (clone.S:100)
==28961==    by 0x40641CD: do_clone.constprop.2 (createthread.c:75)
==28961==    by 0x406558D: create_thread (createthread.c:245)
==28961==    by 0x406558D: pthread_create@@GLIBC_2.1 (pthread_create.c:611)
==28961==    by 0x402FA62: pthread_create_WRK (hg_intercepts.c:427)
==28961==    by 0x4030686: pthread_create@* (hg_intercepts.c:460)
==28961==    by 0x80485F6: main (toy_bypass.c:28)
==28961== 
==28961== ----------------------------------------------------------------
==28961== 
==28961== Possible data race during read of size 4 at 0x40410FC by thread #3
==28961== Locks held: none
==28961==    at 0x403D52A: strcpy (intercept.c:156)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961== 
==28961== This conflicts with a previous write of size 4 by thread #2
==28961== Locks held: none
==28961==    at 0x403D5CB: strcpy (intercept.c:157)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961==  Location 0x40410fc is 0 bytes inside global var "real_memcpy"
==28961==  declared at intercept.c:136
==28961== 
==28961== ----------------------------------------------------------------
==28961== 
==28961== Possible data race during read of size 4 at 0x40410D8 by thread #3
==28961== Locks held: none
==28961==    at 0x403D538: strcpy (intercept.c:158)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961== 
==28961== This conflicts with a previous write of size 4 by thread #2
==28961== Locks held: none
==28961==    at 0x403D5B3: strcpy (intercept.c:159)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961==  Address 0x40410d8 is 0 bytes inside data symbol "real_strcpy.4768"
==28961== 
==28961== ----------------------------------------------------------------
==28961== 
==28961== Possible data race during read of size 4 at 0x40410A4 by thread #3
==28961== Locks held: none
==28961==    at 0x403C1F7: _libsafe_stackVariableP (util.c:145)
==28961==    by 0x403D555: strcpy (intercept.c:164)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961== 
==28961== This conflicts with a previous write of size 4 by thread #2
==28961== Locks held: none
==28961==    at 0x403CC7E: _libsafe_die (util.c:1640)
==28961==    by 0x403D5E9: strcpy (intercept.c:178)
==28961==    by 0x80485C7: test_shellcode (toy_bypass.c:22)
==28961==    by 0x402FBEC: mythread_wrapper (hg_intercepts.c:389)
==28961==    by 0x4064F6F: start_thread (pthread_create.c:312)
==28961==    by 0x4165BED: clone (clone.S:129)
==28961==  Location 0x40410a4 is 0 bytes inside global var "dying"
==28961==  declared at util.c:75
==28961== 
==28961== Helgrind, a thread error detector
==28961== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==28961== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28961== Command: /bin/sh
==28961== 
==28961== 
==28961== For counts of detected and suppressed errors, rerun with: -v
==28961== Use --history-level=approx or =none to gain increased speed, at
==28961== the cost of reduced accuracy of conflicting-access information
==28961== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==28957== 
==28957== For counts of detected and suppressed errors, rerun with: -v
==28957== Use --history-level=approx or =none to gain increased speed, at
==28957== the cost of reduced accuracy of conflicting-access information
==28957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

# Retain intermediate bitcode files
.PRECIOUS: %.bc

all: LLVMBitcode

# The default target builds the plugin
LLVMBitcode:
	make -C libsafe-2.0-16/src
	extract-bc libsafe-2.0-16/src/libsafe.so.2.0.16
	cp libsafe-2.0-16/src/*.bc .
	opt -mem2reg libsafe.so.2.0.16.bc -o libsafe.so.2.0.16.mem2reg
	rm libsafe.so.2.0.16.bc
	mv libsafe.so.2.0.16.mem2reg libsafe-cve-1125.bc

# create .bc from source
%.bc:
	cp libsafe-2.0-16/src/*.bc .

# create human-readable assembly (.ll) from .bc
%.ll: %.bc
	llvm-dis -f $^

# create executable from .bc
%.exe: %.bc
	llc $^
	gcc $*.s -o $*.exe

# create bitcode optimized to keep vars in registers
%.mem2reg: %.bc
	opt -mem2reg $^ -o $*.mem2reg
	mv $*.mem2reg $*.bc

# run ConAnalysis on a .bc file
%.ConAnalysis: %.bc
	opt -load ../../build/lib/ConAnal/libConAnalysis.so -ConAnalysis $*.bc > /dev/null

# clean up generated files
clean:
	rm -f *.exe *.ll *.s *.bc
	cd libsafe-2.0-16/src && make clean
